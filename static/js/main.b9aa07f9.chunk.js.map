{"version":3,"sources":["helpers/data-structures/heap_helper.js","Components/algorithms/tree-algorithms/DepthFirstSearch.js","Components/algorithms/tree-algorithms/BreadthFirstSearch.js","graph-builders/tree-builder.js","Components/sidebar/Sidebar.js","Components/sidebar/RenderListComponent.js","Components/sidebar/RenderObjectComponent.js","Components/TreeTraversals.js","graph-builders/undirected-graph-builder.js","Components/algorithms/graph-algorithms/Dijkstra.js","Components/algorithms/graph-algorithms/Prim.js","Components/UndirectedGraphAlgorithms.js","Components/algorithms/graph-algorithms/Topsort.js","graph-builders/directed-graph-builder.js","Components/DirectedGraphAlgorithms.js","graph-builders/scatterplot-builder.js","Components/algorithms/clustering-algorithms/KMeans.js","Components/ClusteringAlgorithms.js","graph-builders/dynamic-tree-builder.js","Components/data-structures/Heap.js","Components/data-structures/Stack.js","Components/data-structures/Queue.js","Components/algorithms/sorts/InsertionSort.js","Components/algorithms/sorts/SelectionSort.js","graph-builders/neural-net-builder.js","Components/NeuralNets.js","Components/MainPage/InfoSegment.js","Components/MainPage/InfoContainer.js","Components/MainPage.js","Components/NavigationBar.js","App.js","index.js"],"names":["Heap","this","h","size","e","fixUp","pos","parent","Math","floor","temp","smallest","pop","fixDown","child","a","i","push","its","removeRoot","console","log","DepthFirstSearch","props","dfs","visited","Object","keys","g","map","node","animationQueue","highlightedLine","stack","visitedMap","nodePath","length","currentNode","activatedNode","activatedLink","waitTime","updateAnimationQueue","onClick","freshStart","setRunningAlg","disabled","getRunningAlg","Component","BreadthFirstSearch","bfs","queue","shift","current","createTree","adjList","treeData","root","entries","children","name","value","type","level","buildTreeDataFromAdjList","margin","width","height","treemap","d3","nodes","d","append","attr","selectAll","data","descendants","slice","enter","style","x","y","depth","text","Sidebar","toggleSidebar","setState","sidebar","state","className","visibility","showButton","id","RenderListComponent","clicked","paddingLeft","listStyle","listName","list","key","marginLeft","RenderObjectComponent","objName","obj","Array","isArray","String","lst","TreeTraversals","reset","forEach","nodeElement","document","getElementById","classList","remove","linkElement","dfsPseduoElement","bfsPseduoElement","stop","pause","alg","runningAlg","toggleClicked","aq","renderAnimationQueue","initialRunningAlg","shouldWait","stepIndex","currentState","highlightLine","undefined","Promise","r","setTimeout","speed","checkPauseStatus","removeHighlightedLine","activateVisitedNode","activateLink","stepMode","prevState","b","c","f","j","k","l","m","n","o","p","q","s","t","u","v","w","z","tree","svg","hasChildNodes","removeChild","lineNum","el","add","indentation","num","newStepIndex","onSubmit","event","preventDefault","onChange","target","renderBfsPseudocode","renderDfsPseudocode","createGraph","links","source","strength","cost","linkForce","link","simulation","force","linkElements","linkTextElements","nodeElements","nodeTextElements","on","PriorityQueue","require","Dijkstra","djikstra","parents","distances","Infinity","pq","getArray","insert","activeLinks","removeActiveLinks","neighborNodeWeight","neighborNode","linkOfInterestString","generateLinkString","linkOfInterest","potentialScore","fadeOutLinks","nodeComplete","end","shortestPath","reverse","Prim","prim","costMap","mstSet","minNode","findMin","neighbor","oldLinkOfInterestString","deActivateOldLink","filter","min","UndirectedGraphAlgorithms","activateCurrentNode","updateCurrentNodeToBeVisited","highlightShortestPath","dijkstraPseduoElement","primPseduoElement","lines","getElementsByTagName","graph","currentNodeElement","linkString","linkOfInterestElement","prev","index","backgroundColor","oldChild","marginRight","renderPrimHeading","renderDijkstraHeading","renderPrimTableData","renderDijkstraTableData","renderPrimPseudocode","renderDijkstraPseudocode","Topsort","topSort","callStack","unshift","keepLineHighlighted","visit","ordering","previousNodes","updateActiveLinks","outgoingLinks","activeLink","createDirectedGraph","DirectedGraphAlgorithms","activateNeighbor","markNodeComplete","removeOutgoingLinks","pseduoTopsortElements","nodeNeighborLinkElement","classId","currentElement","contains","neighborEl","lineElement","nodeEl","renderTopsortPseudocode","top","right","bottom","left","domain","range","call","parseFloat","toFixed","classed","select","transition","duration","delay","createScatterplot","KMeans","kmeans","centroids","closestCentroids","shouldInitCentroids","randomPoints","getRandomElements","points","hasConverged","getClusterAssignments","prevCentroids","updateCentroids","reduce","bool","currentCentroid","point","centroid","sqrt","pow","indexOf","cIndex","clusterArray","pointIndex","mean","sum","currentPoint","Number","arr","result","len","taken","RangeError","random","toggleStop","ClusteringAlgorithms","setPoints","ps","centroidGroup","parentNode","circleElements","setAttribute","currentStepIndex","currentLineNum","toggleLineHighlight","wait","isStepping","addCentroids","colorPoints","moveCentroids","scaleX","scaleY","scatter","toggle","pointElement","pointClasses","moveIthCentroid","display","max","renderKMeansPseudocode","createDynamicTree","getMin","clearTree","dataStructure","removeRootOfDynamicTree","insertIntoDynamicTree","swap","parentText","childText","parentCircle","childCircle","parentG","childG","childLink","parentLink","componentDidMount","inputList","buildSampleHeap","handleInsertButton","newNode","inputNum","executing","convertHeapArrayToAdjList","leftChild","rightChild","sample","heapA","parentIndex","currentIndex","newElement","removedRoot","inserting","removingRoot","childIndex","unMounting","clearPseudocode","removeKeptHighlightedLine","activateChildAndParent","activateParent","deActivateParent","activateLeftAndRightChildren","deActivateLeftAndRightChildren","removeActiveChildParent","deActivateLink","updatedList","leftChildElement","getElementsByClassName","rightChildElement","parentElement","childElement","childLinkElement","insertEl","fixupEl","removeRootEl","fixdownEl","includes","formatInsertButtonText","clearHeap","renderHeapClassPseudocode","renderInsertPseudocode","renderRemoveRootPseudocode","Stack","capacity","didPop","didPush","poppedVal","element","createStack","isEmpty","val","yText","htmlCollection","_groups","localName","formatPushButtonText","formatPopButtonText","clear","renderStackClassPseudocode","renderPopPseudocode","renderPushPseudocode","Queue","createQueue","didEnqueue","didDequeue","tail","head","dequeuedVal","enqueue","formatEnqueueButtonText","dequeue","formatDequeueButtonText","renderQueueClassPseudocode","renderEnqueuePseudocode","renderDequeuePseudocode","InsertionSort","startAlgorithm","padding","bandwidth","startInterval","insertionSort","animation_queue","sorted","speedFactor","interval","intervalEngine","restartInterval","clearInterval","speedChanged","endInterval","paused","setInterval","swapBars","stepper_queue","stepBack","toElement","fromElement","action","stepForward","restartRandom","randomArray","randomNumber","clearSVG","innerHTML","swapping","window","onblur","barFromIndex","barToIndex","pseudoNumber","fromObj","toObj","fromObjTxt","toObjTxt","Container","fluid","Row","OverlayTrigger","placement","overlay","Tooltip","ref","renderInsertionSortPseudocode","SelectionSort","selectionSort","tmp","renderSelectionSortPseudocode","buildNetwork","label","layer","bias","color","linkNames","netsize","largestLayerSize","apply","xdist","ydist","lidx","wIndex","parseInt","x1","x2","plotLoss","body","line","xAxis","ticks","yAxis","datum","NeuralNets","linkToMatrixMapping","nodeToMatrixMapping","h0","h1","o0","lookup","handleTabSelect","activeKey","w0","w1","b0","b1","learningRate","prevW0","prevW1","prevB0","prevB1","newW0","newW1","newB0","newB1","output","iteration","h0_net","h0_out","h1_net","h1_out","o0_net","o0_out","error","dE","dZ_out","dZ_h","dW1","dW0","dB0","dB1","losses","localAQ","neuralNetwork","addHoverEventListeners","deleteNetwork","prevProps","deActivateNode","str","deActivateNodeMatricies","deHighlightEquation","biasEl","addEventListener","activateNode","linkToMatrixEl","activateNodeMatricies","matrixToLinkEl","activateLinks","direction","tds","td","highlightEq","highlightEquation","activeMatrix","activeNode","ids","fadeOutNodes","updatedWeights","nodeLink","updatedBias","lossTab","div","createElement","appendChild","nodeTextToUpdate","outputStr","deHighlightEq","deActiveNode","deActiveMatrix","sigmoid","exp","errorFunction","pred","targ","dZ","h_net","multiply","transpose","round","h_out","out_net","out_out","dOut_wrt_w1","dw1","db1","dOut_wrt_h","dh_wrt_w0","dw0","dotMultiply","db0","subtract","yLabel","xLabel","colSpan","yNode","xNode","zIndex","nNLearn","step","border","borderCollapse","fontSize","textAlign","Tabs","onSelect","Tab","eventKey","title","tex","raw","marginTop","position","render2x2Matrix","render2x1Matrix","render1x2Matrix","render1x1Matrix","InfoSegment","segment_data","componentDidUpdate","segment_id","scroll_position","offsetTop","opacity","checkAnswer","parsedName","split","resetAnswers","els","slides","current_id","quiz_correct","even","renderGif","renderInfoOrQuiz","quiz","renderQuiz","renderInfo","Col","dangerouslySetInnerHTML","__html","renderSegmentNavButtons","href","process","src","generateQuizAnswerClasses","renderSection","InfoContainer","decoded_data","json_obj","segments","JSONData","MainPage","startTypingTitle","title_queue","arrowOpacity","title_set_1","title_set_2","title_set_3","title_set_4","title_set_5","updateScroll","windowYScroll","pageYOffset","newOp","waves_opacity","background_left_opacity","background_right_opacity","letterSpacing","alt","NavigationBar","Navbar","Brand","as","Link","to","Nav","NavDropdown","Item","path","component","exact","App","ReactDOM","render"],"mappings":"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","file":"static/js/main.b9aa07f9.chunk.js","sourcesContent":["export class Heap {\r\n  constructor() {\r\n    this.h = [0];\r\n    this.size = 0;\r\n  }\r\n  insert(e) {\r\n    this.h[0] = ++this.size;\r\n    this.h[this.size] = e;\r\n    this.fixUp();\r\n  }\r\n  fixUp() {\r\n    let pos = this.size;\r\n    while (pos > 0) {\r\n      let parent = Math.floor(pos / 2);\r\n      if (this.h[parent][0] > this.h[pos][0]) {\r\n        let temp = this.h[parent];\r\n        this.h[parent] = this.h[pos];\r\n        this.h[pos] = temp;\r\n        pos = parent;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  removeRoot() {\r\n    let smallest = this.h[1];\r\n    this.h[1] = this.h.pop();\r\n    this.h[0] = --this.size;\r\n    this.fixDown();\r\n    return smallest;\r\n  }\r\n  fixDown() {\r\n    let pos = 1;\r\n    while (pos * 2 < this.size) {\r\n      let child = pos * 2;\r\n      if (this.h[child][0] > this.h[child + 1][0]) {\r\n        child += 1;\r\n      }\r\n      if (this.h[pos][0] > this.h[child][0]) {\r\n        let temp = this.h[child];\r\n        this.h[child] = this.h[pos];\r\n        this.h[pos] = temp;\r\n        pos = child;\r\n      } else {\r\n        break;\r\n      }\r\n    }\r\n  }\r\n\r\n  getArray() {\r\n    let a = [];\r\n    for (let i = 1; i <= this.size; i++) {\r\n      a.push(this.h[i][1] + ': ' + this.h[i][0]);\r\n    }\r\n    return a;\r\n  }\r\n\r\n  heapSort() {\r\n    let a = [];\r\n    let its = this.h[0];\r\n    for (let i = 0; i < its; i++) {\r\n      a.push(this.removeRoot());\r\n    }\r\n    console.log(a);\r\n    return a;\r\n  }\r\n}\r\n// module.exports = { Heap };\r\n","import React, { Component } from 'react';\r\n\r\nclass DepthFirstSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.animationQueue = [];\r\n  }\r\n\r\n  dfs = async () => {\r\n    let root = 'a';\r\n    let visited = {};\r\n    //initializes the visited object, all values set to false\r\n    Object.keys(this.props.g).map((node) => (visited[node] = false));\r\n\r\n    this.animationQueue.push({ highlightedLine: 0 });\r\n    this.animationQueue.push({ highlightedLine: 1, stack: [] });\r\n    this.animationQueue.push({\r\n      highlightedLine: 2,\r\n      visitedMap: { ...visited },\r\n    });\r\n\r\n    visited[root] = true;\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 3,\r\n      visitedMap: { ...visited },\r\n    });\r\n\r\n    let stack = [root];\r\n    let nodePath = [];\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 4,\r\n      stack: [...stack],\r\n    });\r\n\r\n    while (stack.length > 0) {\r\n      this.animationQueue.push({\r\n        highlightedLine: 5,\r\n      });\r\n\r\n      let currentNode = stack.pop();\r\n      nodePath.push(currentNode);\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 6,\r\n        stack: [...stack],\r\n        currentNode: currentNode,\r\n        activatedNode: currentNode,\r\n        activatedLink: currentNode,\r\n        nodePath: [...nodePath],\r\n      });\r\n\r\n      for (let child of this.props.g[currentNode]) {\r\n        this.animationQueue.push({ highlightedLine: 7, child: child });\r\n        this.animationQueue.push({ highlightedLine: 8 });\r\n\r\n        if (visited[child] === false) {\r\n          visited[child] = true;\r\n          this.animationQueue.push({\r\n            highlightedLine: 9,\r\n            visitedMap: { ...visited },\r\n          });\r\n\r\n          stack.push(child);\r\n          this.animationQueue.push({\r\n            highlightedLine: 10,\r\n            stack: [...stack],\r\n          });\r\n        }\r\n      }\r\n      this.animationQueue.push({\r\n        child: null,\r\n        currentNode: null,\r\n        waitTime: 0,\r\n      });\r\n    }\r\n    this.props.updateAnimationQueue(this.animationQueue);\r\n    this.animationQueue = [];\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={async () => {\r\n          this.props.freshStart();\r\n\r\n          await this.props.setRunningAlg('dfs');\r\n          this.dfs();\r\n        }}\r\n        disabled={this.props.getRunningAlg === 'dfs'}\r\n      >\r\n        DFS traverse\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DepthFirstSearch;\r\n","import React, { Component } from 'react';\r\n\r\nclass BreadthFirstSearch extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.animationQueue = [];\r\n  }\r\n\r\n  bfs = async () => {\r\n    let root = 'a';\r\n\r\n    let visited = {};\r\n    Object.keys(this.props.g).map((node) => (visited[node] = false));\r\n\r\n    this.animationQueue.push({ highlightedLine: 1 });\r\n    this.animationQueue.push({ highlightedLine: 2, queue: [] });\r\n    this.animationQueue.push({\r\n      highlightedLine: 3,\r\n      visitedMap: { ...visited },\r\n    });\r\n\r\n    visited[root] = true;\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 4,\r\n      visitedMap: { ...visited },\r\n    });\r\n\r\n    let queue = [root];\r\n    let nodePath = [];\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 5,\r\n      queue: [...queue],\r\n    });\r\n\r\n    while (queue.length > 0) {\r\n      this.animationQueue.push({\r\n        highlightedLine: 6,\r\n        child: null,\r\n        currentNode: null,\r\n      });\r\n\r\n      let currentNode = queue[0];\r\n      queue.shift();\r\n\r\n      nodePath.push(currentNode);\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 7,\r\n        queue: [...queue],\r\n        current: currentNode,\r\n        activatedNode: currentNode,\r\n        activatedLink: currentNode,\r\n        nodePath: [...nodePath],\r\n      });\r\n\r\n      for (let child of this.props.g[currentNode]) {\r\n        this.animationQueue.push({ highlightedLine: 8, child: child });\r\n        this.animationQueue.push({ highlightedLine: 9 });\r\n\r\n        if (visited[child] === false) {\r\n          visited[child] = true;\r\n          this.animationQueue.push({\r\n            highlightedLine: 10,\r\n            visitedMap: { ...visited },\r\n          });\r\n          queue.push(child);\r\n\r\n          this.animationQueue.push({\r\n            highlightedLine: 11,\r\n            queue: [...queue],\r\n          });\r\n        }\r\n      }\r\n      this.animationQueue.push({\r\n        child: null,\r\n        currentNode: null,\r\n        waitTime: 0,\r\n      });\r\n    }\r\n    this.props.updateAnimationQueue(this.animationQueue);\r\n    this.animationQueue = [];\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={async () => {\r\n          this.props.freshStart();\r\n\r\n          await this.props.setRunningAlg('bfs');\r\n          this.bfs();\r\n        }}\r\n        disabled={this.props.getRunningAlg === 'bfs'}\r\n      >\r\n        BFS traverse\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BreadthFirstSearch;\r\n","import * as d3 from 'd3';\r\n\r\nfunction buildTreeDataFromAdjList(adjList) {\r\n  let treeData = {};\r\n  let root = true;\r\n  for (let [node, children] of Object.entries(adjList)) {\r\n    if (root === true) {\r\n      treeData[node] = {\r\n        name: node,\r\n        value: 10,\r\n        type: 'black',\r\n        level: '',\r\n        children: [],\r\n      };\r\n      root = false;\r\n    }\r\n    for (let child of children) {\r\n      if (!treeData[child]) {\r\n        treeData[child] = {\r\n          name: child,\r\n          value: 10,\r\n          type: 'black',\r\n          level: '',\r\n          children: [],\r\n        };\r\n      }\r\n      treeData[node].children.push(treeData[child]);\r\n    }\r\n  }\r\n  return treeData;\r\n}\r\n\r\nfunction createTree(adjList) {\r\n  let treeData = buildTreeDataFromAdjList(adjList)['a'];\r\n  let myScale = 1.5;\r\n  // set the dimensions and margins of the diagram\r\n  const margin = { top: 20, right: 50, bottom: 50, left: 20 },\r\n    width = 900 - margin.left - margin.right,\r\n    height = 900 - margin.top - margin.bottom;\r\n\r\n  // declares a tree layout and assigns the size\r\n  const treemap = d3.tree().size([height, width]);\r\n\r\n  //  assigns the data to a hierarchy using parent-child relationships\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n\r\n  // maps the node data to the tree layout\r\n  nodes = treemap(nodes);\r\n\r\n  // append the svg object to the body of the page\r\n  // appends a 'group' element to 'svg'\r\n  // moves the 'group' element to the top left margin\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  // adds the links between the nodes\r\n  g.selectAll('.link')\r\n    .data(nodes.descendants().slice(1))\r\n    .enter()\r\n    .append('path')\r\n    .attr('class', (d) => 'link' + d.data.name, 'link')\r\n    .attr('class', 'link')\r\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\r\n    .style('stroke', (d) => d.data.level)\r\n    .attr('d', (d) => {\r\n      return (\r\n        'M' +\r\n        d.x / myScale +\r\n        ',' +\r\n        d.y / myScale +\r\n        'C' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.y / myScale +\r\n        ' ' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.parent.y / myScale +\r\n        ' ' +\r\n        d.parent.x / myScale +\r\n        ',' +\r\n        d.parent.y / myScale\r\n      );\r\n    });\r\n\r\n  // adds each node as a group\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) => 'node' + (d.children ? ' node--internal' : ' node--leaf')\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n\r\n  // adds the circle to the node\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => d.data.value)\r\n    .attr('id', (d) => d.data.name);\r\n  // adds the text to the node\r\n  node\r\n    .append('text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n}\r\n\r\nexport default createTree;\r\n","import React, { Component } from 'react';\r\n\r\nclass Sidebar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      sidebar: false,\r\n    };\r\n  }\r\n\r\n  toggleSidebar = () => {\r\n    this.setState({ sidebar: !this.state.sidebar });\r\n  };\r\n  render() {\r\n    return (\r\n      <>\r\n        <div\r\n          className={'sidebar'}\r\n          style={{ visibility: this.props.showButton ? 'visible' : 'hidden' }}\r\n        >\r\n          <button\r\n            id={'sidebar-button'}\r\n            className={'menu-bars'}\r\n            onClick={() => this.toggleSidebar()}\r\n          >\r\n            {this.state.sidebar ? 'Hide Variables' : 'Show Variables'}\r\n          </button>\r\n        </div>\r\n        <nav\r\n          className={\r\n            this.state.sidebar && this.props.showButton\r\n              ? 'side-menu active'\r\n              : 'side-menu'\r\n          }\r\n        >\r\n          <ul className={'side-menu-items'}>{this.props.children}</ul>\r\n        </nav>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Sidebar;\r\n","import React, {Component} from 'react';\r\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\r\n\r\nclass RenderListComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n      { this.props.clicked ? \r\n        <ul style={{paddingLeft: '0px', listStyle:'none'}}>\r\n          <FaChevronDown /> {this.props.listName} =  [ {  this.props.list.map( (e, i) => \r\n          <li key={i} style={{marginLeft: '55px'}}>{e}, </li>\r\n          )} <span style={{marginLeft:'35px'}}>]</span>\r\n        </ul> \r\n        :  \r\n        \r\n        <> <FaChevronRight /> {this.props.listName}  = {'['+this.props.list.map(e => ' '+e) + ' ]'} </>\r\n        \r\n      }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RenderListComponent;\r\n","import React, { Component } from 'react';\r\nimport { FaChevronDown, FaChevronRight } from 'react-icons/fa';\r\n\r\nclass RenderObjectComponent extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        {this.props.clicked ? (\r\n          <ul style={{ paddingLeft: '0px', listStyle: 'none' }}>\r\n            <FaChevronDown /> {this.props.objName} = {'{'}{' '}\r\n            {Object.keys(this.props.obj).map((e, i) => (\r\n              <li key={i} style={{ marginLeft: '55px' }}>\r\n                {e} :\r\n                {Array.isArray(this.props.obj[e])\r\n                  ? Array.isArray(this.props.obj[e][0])\r\n                    ? '[' +\r\n                      String(this.props.obj[e].map((lst) => '[' + lst + ']')) +\r\n                      ']'\r\n                    : '[' + String(this.props.obj[e]) + ']'\r\n                  : String(this.props.obj[e])}\r\n                ,\r\n              </li>\r\n            ))}{' '}\r\n            <span style={{ marginLeft: '35px' }}>{'}'}</span>\r\n          </ul>\r\n        ) : (\r\n          <>\r\n            <FaChevronRight /> {this.props.objName} ={' '}\r\n            {'{ ' +\r\n              Object.keys(this.props.obj).map(\r\n                (e) =>\r\n                  ' ' +\r\n                  e +\r\n                  ':' +\r\n                  (Array.isArray(this.props.obj[e])\r\n                    ? Array.isArray(this.props.obj[e][0])\r\n                      ? '[' +\r\n                        String(\r\n                          this.props.obj[e].map((lst) => '[' + lst + ']')\r\n                        ) +\r\n                        ']'\r\n                      : '[' + String(this.props.obj[e]) + ']'\r\n                    : String(this.props.obj[e]))\r\n              ) +\r\n              ' }'}\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RenderObjectComponent;\r\n","import React, { Component } from 'react';\r\nimport DepthFirstSearch from './algorithms/tree-algorithms/DepthFirstSearch';\r\nimport BreathFirstSearch from './algorithms/tree-algorithms/BreadthFirstSearch';\r\nimport createTree from '../graph-builders/tree-builder';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport RenderListComponent from './sidebar/RenderListComponent';\r\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay } from 'react-icons/fa';\r\n\r\nclass TreeTraversals extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      nodePath: [],\r\n      runningAlg: null,\r\n      queue: null,\r\n      stack: null,\r\n      currentNode: null,\r\n      visitedMap: {},\r\n      child: null,\r\n      clicked: [false, false, false, false],\r\n      animationQueue: [],\r\n      activatedNode: null,\r\n      activatedLink: null,\r\n      stepIndex: 0,\r\n      stepMode: false,\r\n    };\r\n    this.adjList = {\r\n      a: ['b', 'c', 'd'],\r\n      b: ['e', 'h', 'i'],\r\n      c: ['j', 'r'],\r\n      d: ['s', 'u'],\r\n      e: ['f'],\r\n      f: ['g'],\r\n      g: [],\r\n      h: ['o'],\r\n      i: [],\r\n      j: ['k'],\r\n      k: ['l', 'q'],\r\n      l: ['m', 'n', 'p'],\r\n      m: [],\r\n      n: [],\r\n      o: [],\r\n      p: [],\r\n      q: [],\r\n      r: [],\r\n      s: ['t'],\r\n      t: [],\r\n      u: ['v'],\r\n      v: ['w'],\r\n      w: ['x'],\r\n      x: ['y', 'z'],\r\n      y: [],\r\n      z: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    createTree(this.adjList);\r\n    this.tree = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('tree-svg');\r\n    if (this.tree.hasChildNodes()) this.tree.removeChild(svg);\r\n    this.reset();\r\n  }\r\n\r\n  componentDidUpdate() {\r\n    if (this.state.stop) {\r\n      this.setState({ animationQueue: [], stop: false });\r\n    }\r\n  }\r\n\r\n  reset = () => {\r\n    Object.keys(this.adjList).forEach((e) => {\r\n      let nodeElement = document.getElementById(e);\r\n      if (nodeElement) {\r\n        nodeElement.classList.remove('node-complete-tree');\r\n      }\r\n      let linkElement = document.getElementById(e + 'link');\r\n      if (linkElement) {\r\n        linkElement.classList.remove('link-traversed');\r\n      }\r\n    });\r\n    for (let i = 1; i < 12; i++) {\r\n      let dfsPseduoElement = document.getElementById('dfs-' + i);\r\n      if (dfsPseduoElement) dfsPseduoElement.classList = '';\r\n      let bfsPseduoElement = document.getElementById('bfs-' + i);\r\n      if (bfsPseduoElement) bfsPseduoElement.classList = '';\r\n    }\r\n    this.setState({\r\n      nodePath: [],\r\n      visitedMap: {},\r\n      queue: null,\r\n      stack: null,\r\n      currentNode: null,\r\n      child: null,\r\n    });\r\n    if (this.state.stop) {\r\n      this.setState({ stop: false, pause: false });\r\n    }\r\n  };\r\n\r\n  setRunningAlg = (alg) => {\r\n    this.reset();\r\n    this.setState({ runningAlg: alg });\r\n  };\r\n\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n\r\n  highlightLine(lineNum) {\r\n    let el = document.getElementById(this.state.runningAlg + '-' + lineNum);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(lineNum) {\r\n    let el = document.getElementById(this.state.runningAlg + '-' + lineNum);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n  activateVisitedNode(currentNode) {\r\n    let nodeElement = document.getElementById(currentNode);\r\n    if (nodeElement) nodeElement.classList.add('node-complete-tree');\r\n  }\r\n\r\n  activateLink(currentNode) {\r\n    let linkElement = document.getElementById(currentNode + 'link');\r\n    if (linkElement) {\r\n      linkElement.classList.add('link-traversed');\r\n    }\r\n  }\r\n  updateAnimationQueue = async (aq) => {\r\n    await this.setState({\r\n      animationQueue: aq,\r\n    });\r\n    await this.renderAnimationQueue();\r\n  };\r\n\r\n  async checkPauseStatus() {\r\n    while (this.state.pause && !this.state.stepMode) {\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  renderAnimationQueue = async () => {\r\n    let initialRunningAlg = this.state.runningAlg;\r\n    let shouldWait = true;\r\n    this.setState({ stepIndex: 0 });\r\n    while (this.state.stepIndex < this.state.animationQueue.length) {\r\n      let currentState = this.state.animationQueue[this.state.stepIndex];\r\n      this.highlightLine(currentState.highlightedLine);\r\n\r\n      let waitTime =\r\n        currentState.waitTime !== undefined ? currentState.waitTime : 1000;\r\n\r\n      if (!shouldWait) {\r\n        waitTime = 0;\r\n      }\r\n\r\n      await new Promise((r) => setTimeout(r, waitTime / this.state.speed));\r\n\r\n      await this.checkPauseStatus();\r\n\r\n      if (initialRunningAlg !== this.state.runningAlg) {\r\n        return;\r\n      }\r\n\r\n      this.removeHighlightedLine(currentState.highlightedLine);\r\n      this.setState({ ...currentState });\r\n\r\n      this.activateVisitedNode(currentState.activatedNode);\r\n      this.activateLink(currentState.activatedLink);\r\n\r\n      if (!this.state.stepMode) {\r\n        this.setState({ stepIndex: this.state.stepIndex + 1 });\r\n        shouldWait = true;\r\n      } else {\r\n        // need to reset everything up to the previous state starting from beginning\r\n        // since we only update what is necessary at each element of the animation queue\r\n        this.reset();\r\n        this.setState({\r\n          runningAlg: initialRunningAlg,\r\n          pause: true,\r\n          stepMode: false,\r\n        });\r\n\r\n        for (let i = 0; i < this.state.stepIndex; i++) {\r\n          let prevState = this.state.animationQueue[i];\r\n          this.setState({ ...prevState });\r\n          this.activateVisitedNode(prevState.activatedNode);\r\n          this.activateLink(prevState.activatedLink);\r\n        }\r\n        shouldWait = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  freshStart = () => {\r\n    this.setState({\r\n      stop: false,\r\n      pause: false,\r\n      runningAlg: null,\r\n      stepMode: false,\r\n    });\r\n  };\r\n\r\n  renderBfsPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'bfs-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>BFS(G, root)</span>\r\n        </div>\r\n        <div id={'bfs-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let Q be a queue</span>\r\n        </div>\r\n        <div id={'bfs-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let V be a map with all nodes as keys and values of false\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>set V[root] = true</span>\r\n        </div>\r\n        <div id={'bfs-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>Q.enqueue(root)</span>\r\n        </div>\r\n        <div id={'bfs-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while Q is not empty\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            current := Q.dequeue()\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for child of current\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if child is not labeled as discovered then\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set V[child] = true\r\n          </span>\r\n        </div>\r\n        <div id={'bfs-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(5) }}> Q.enqueue(child)</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDfsPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'dfs-0'}>\r\n          0<span style={{ marginLeft: indentation(1) }}>DFS(G, root)</span>\r\n        </div>\r\n        <div id={'dfs-1'}>\r\n          1<span style={{ marginLeft: indentation(2) }}>let S be a stack</span>\r\n        </div>\r\n        <div id={'dfs-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let V be a map with all nodes as keys and values of false\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>set V[root] = true</span>\r\n        </div>\r\n        <div id={'dfs-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>S.push(root)</span>\r\n        </div>\r\n        <div id={'dfs-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while S is not empty\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(3) }}>current := S.pop()</span>\r\n        </div>\r\n        <div id={'dfs-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for child of current\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if child is not labeled as discovered then\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set V[child] = true\r\n          </span>\r\n        </div>\r\n        <div id={'dfs-10'}>\r\n          10<span style={{ marginLeft: indentation(5) }}> S.push(child)</span>\r\n        </div>\r\n        <div></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <DepthFirstSearch\r\n            g={this.adjList}\r\n            getRunningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateAnimationQueue={this.updateAnimationQueue}\r\n            freshStart={this.freshStart}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <BreathFirstSearch\r\n            g={this.adjList}\r\n            getRunningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateAnimationQueue={this.updateAnimationQueue}\r\n            freshStart={this.freshStart}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <button\r\n            id={'reset-button'}\r\n            onClick={async () => {\r\n              await this.setState({\r\n                pause: false,\r\n                stop: true,\r\n                animationQueue: [],\r\n                runningAlg: null,\r\n              });\r\n              this.reset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className={'divider'}></div>\r\n          <br></br>\r\n          <button\r\n            onClick={() => {\r\n              let newStepIndex = this.state.stepIndex - 1;\r\n              while (!this.state.animationQueue[newStepIndex].highlightedLine) {\r\n                newStepIndex -= 1;\r\n              }\r\n              this.setState({\r\n                stepIndex: newStepIndex,\r\n                pause: true,\r\n                stepMode: true,\r\n              });\r\n            }}\r\n          >\r\n            <FaStepBackward />\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause, stepMode: false });\r\n            }}\r\n          >\r\n            {this.state.pause ? <FaPlay /> : <FaPause />}\r\n          </button>\r\n          <button\r\n            onClick={() => {\r\n              let newStepIndex = this.state.stepIndex + 1;\r\n              while (!this.state.animationQueue[newStepIndex].highlightedLine) {\r\n                newStepIndex += 1;\r\n              }\r\n              this.setState({\r\n                stepIndex: newStepIndex,\r\n                pause: true,\r\n                stepMode: true,\r\n              });\r\n            }}\r\n          >\r\n            <FaStepForward />\r\n          </button>\r\n\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  })\r\n                }\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            {!this.state.runningAlg\r\n              ? ''\r\n              : this.state.runningAlg === 'bfs'\r\n              ? this.renderBfsPseudocode()\r\n              : this.renderDfsPseudocode()}\r\n          </div>\r\n        </div>\r\n\r\n        <div className={'col-4'}>\r\n          <Sidebar showButton={this.state.runningAlg !== ''}>\r\n            {this.state.currentNode ? (\r\n              <li> current = {this.state.currentNode} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.child ? <li> child = {this.state.child} </li> : ''}\r\n\r\n            <li onClick={() => this.toggleClicked(0)}>\r\n              {this.state.nodePath.length > 0 ? (\r\n                <RenderListComponent\r\n                  list={this.state.nodePath}\r\n                  listName={'Node Path'}\r\n                  clicked={this.state.clicked[0]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(1)}>\r\n              {this.state.queue ? (\r\n                <RenderListComponent\r\n                  list={this.state.queue}\r\n                  listName={'Q'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              ) : this.state.stack ? (\r\n                <RenderListComponent\r\n                  list={this.state.stack}\r\n                  listName={'S'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              ) : (\r\n                <></>\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(2)}>\r\n              {Object.keys(this.state.visitedMap).length > 0 ? (\r\n                <RenderObjectComponent\r\n                  obj={this.state.visitedMap}\r\n                  objName={'V'}\r\n                  clicked={this.state.clicked[2]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(3)}>\r\n              {this.adjList ? (\r\n                <RenderObjectComponent\r\n                  obj={this.adjList}\r\n                  objName={'tree'}\r\n                  clicked={this.state.clicked[3]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n          </Sidebar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default TreeTraversals;\r\n","import * as d3 from 'd3';\r\n\r\nfunction createGraph() {\r\n  let nodes = [\r\n    { id: 'a', level: 2 },\r\n    { id: 'b', level: 2 },\r\n    { id: 'c', level: 2 },\r\n    { id: 'd', level: 2 },\r\n    { id: 'e', level: 2 },\r\n    { id: 'f', level: 2 },\r\n    { id: 'g', level: 2 },\r\n    { id: 'h', level: 2 },\r\n    { id: 'i', level: 2 },\r\n    { id: 'j', level: 2 },\r\n    { id: 'k', level: 2 },\r\n    { id: 'l', level: 2 },\r\n    { id: 'm', level: 2 },\r\n    { id: 'n', level: 2 },\r\n    { id: 'o', level: 2 },\r\n    { id: 'p', level: 2 },\r\n    { id: 'q', level: 2 },\r\n    { id: 's', level: 2 },\r\n    { id: 'target', level: 1 },\r\n    { id: 't', level: 2 },\r\n    { id: 'source', level: 1 },\r\n  ];\r\n\r\n  let strength = 0.001;\r\n  let links = [\r\n    { target: 'a', source: 'b', strength: strength, cost: 10 },\r\n    { target: 'a', source: 'c', strength: strength, cost: 7 },\r\n    { target: 'a', source: 'd', strength: 20 * strength, cost: 8 },\r\n    { target: 'b', source: 'd', strength: 20 * strength, cost: 9 },\r\n    { target: 'b', source: 'e', strength: strength, cost: 11 },\r\n    { target: 'e', source: 'c', strength: 20 * strength, cost: 9 },\r\n    { target: 'f', source: 'c', strength: 0.05, cost: 7 },\r\n    { target: 'f', source: 'b', strength: 0.05, cost: 8 },\r\n    { target: 'f', source: 'a', strength: 0.05, cost: 6 },\r\n    { target: 'f', source: 'e', strength: 0.05, cost: 6 },\r\n    { target: 'a', source: 'g', strength: 0.26, cost: 3 },\r\n    { target: 'h', source: 'g', strength: 0.26, cost: 3 },\r\n    { target: 'c', source: 'h', strength: 0.6, cost: 2 },\r\n    { target: 'i', source: 'g', strength: 0.026, cost: 4 },\r\n    { target: 'a', source: 'i', strength: strength, cost: 5 },\r\n    { target: 'd', source: 'i', strength: 20 * strength, cost: 10 },\r\n    { target: 'j', source: 'b', strength: strength, cost: 8 },\r\n    { target: 'j', source: 'e', strength: strength, cost: 10 },\r\n    { target: 'i', source: 'k', strength: 15 * strength, cost: 14 },\r\n    { target: 'c', source: 'k', strength: 20 * strength, cost: 5 },\r\n    { target: 'e', source: 'k', strength: 15 * strength, cost: 10 },\r\n    { target: 'g', source: 'k', strength: 15 * strength, cost: 10 },\r\n    { target: 'l', source: 'j', strength: 20 * strength, cost: 10 },\r\n    { target: 'l', source: 'd', strength: 20 * strength, cost: 9 },\r\n    { target: 'l', source: 'b', strength: 20 * strength, cost: 8 },\r\n    { target: 'm', source: 'e', strength: 20 * strength, cost: 6 },\r\n    { target: 'm', source: 'k', strength: 20 * strength, cost: 8 },\r\n    { target: 'm', source: 'j', strength: 20 * strength, cost: 11 },\r\n    { target: 'n', source: 'i', strength: 40 * strength, cost: 7 },\r\n    { target: 'n', source: 'k', strength: 50 * strength, cost: 6 },\r\n    { target: 'o', source: 'l', strength: 40 * strength, cost: 5 },\r\n    { target: 'o', source: 'j', strength: 40 * strength, cost: 6 },\r\n    { target: 'p', source: 'm', strength: 40 * strength, cost: 7 },\r\n    { target: 'p', source: 'k', strength: 40 * strength, cost: 6 },\r\n    { target: 'q', source: 'd', strength: 80 * strength, cost: 5 },\r\n    { target: 'q', source: 'i', strength: 40 * strength, cost: 8 },\r\n    { target: 's', source: 'b', strength: 100 * strength, cost: 4 },\r\n    { target: 's', source: 'e', strength: 40 * strength, cost: 9 },\r\n    { target: 's', source: 'j', strength: 40 * strength, cost: 5 },\r\n    { target: 'target', source: 'q', strength: 100 * strength, cost: 3 },\r\n    { target: 'target', source: 'd', strength: 100 * strength, cost: 4 },\r\n    { target: 'source', source: 'm', strength: strength, cost: 6 },\r\n    { target: 'source', source: 'j', strength: 20 * strength, cost: 15 },\r\n    { target: 'source', source: 'p', strength: 20 * strength, cost: 9 },\r\n    { target: 't', source: 'd', strength: 100 * strength, cost: 6 },\r\n    { target: 't', source: 'l', strength: 100 * strength, cost: 4 },\r\n  ];\r\n  const margin = { top: 20, right: 50, bottom: 200, left: 100 },\r\n    width = 800 - margin.left - margin.right,\r\n    height = 800 - margin.top - margin.bottom;\r\n\r\n  function getNodeColor(node) {\r\n    return node.level === 1 ? 'red' : 'gray';\r\n  }\r\n\r\n  var svg = d3\r\n    .select('#graph-container')\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('id', 'graph-svg')\r\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n    .attr('class', 'graph');\r\n  // simulation setup with all forces\r\n  var linkForce = d3\r\n    .forceLink()\r\n    .id(function (link) {\r\n      return link.id;\r\n    })\r\n    .strength(function (link) {\r\n      return link.strength / 0.5;\r\n    });\r\n\r\n  var simulation = d3\r\n    .forceSimulation()\r\n    .force('link', linkForce)\r\n    .force('charge', d3.forceManyBody().strength(-170))\r\n    .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n  var linkElements = svg\r\n    .append('g')\r\n    .attr('class', 'links')\r\n    .selectAll('line')\r\n    .data(links)\r\n    .enter()\r\n    .append('line')\r\n    .attr('stroke-width', 1)\r\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)')\r\n    .attr('id', (d) => {\r\n      if (d.source < d.target) {\r\n        return d.source + '-' + d.target;\r\n      }\r\n      return d.target + '-' + d.source;\r\n    });\r\n\r\n  var linkTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'link_texts')\r\n    .selectAll('text')\r\n    .data(links)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (link) {\r\n      return link.cost;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 0)\r\n    .attr('dy', 0);\r\n\r\n  var nodeElements = svg\r\n    .append('g')\r\n    .attr('class', 'node')\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('r', 10)\r\n    .attr('fill', getNodeColor)\r\n    .attr('id', (d) => d.id);\r\n\r\n  var nodeTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'texts')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (node) {\r\n      return node.id;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 13)\r\n    .attr('dy', 0);\r\n\r\n  simulation.nodes(nodes).on('tick', () => {\r\n    nodeElements\r\n      .attr('cx', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('cy', function (node) {\r\n        return node.y;\r\n      });\r\n    nodeTextElements\r\n      .attr('x', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('y', function (node) {\r\n        return node.y;\r\n      });\r\n\r\n    linkElements\r\n      .attr('x1', function (link) {\r\n        return link.source.x;\r\n      })\r\n      .attr('y1', function (link) {\r\n        return link.source.y;\r\n      })\r\n      .attr('x2', function (link) {\r\n        return link.target.x;\r\n      })\r\n      .attr('y2', function (link) {\r\n        return link.target.y;\r\n      });\r\n\r\n    linkTextElements\r\n      .attr('x', function (link) {\r\n        return (link.source.x + link.target.x) / 2;\r\n      })\r\n      .attr('y', function (link) {\r\n        return (link.source.y + link.target.y) / 2;\r\n      });\r\n  });\r\n\r\n  simulation.force('link').links(links);\r\n}\r\n\r\nexport default createGraph;\r\n","import React, { Component } from 'react';\r\nconst {\r\n  Heap: PriorityQueue,\r\n} = require('../../../helpers/data-structures/heap_helper.js');\r\n// [cost, node]\r\n\r\nclass Dijkstra extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.animationQueue = [];\r\n  }\r\n\r\n  djikstra = async () => {\r\n    let root = 'source';\r\n    let target = 'target';\r\n    let parents = {};\r\n    let distances = {};\r\n    Object.keys(this.props.g).forEach((node) => {\r\n      distances[node] = Infinity;\r\n      parents[node] = null;\r\n    });\r\n    let pq = new PriorityQueue();\r\n\r\n    this.animationQueue.push({ highlightedLine: 1 });\r\n    this.animationQueue.push({ highlightedLine: 2, pq: [...pq.getArray()] });\r\n    this.animationQueue.push({ highlightedLine: 3, parents: { ...parents } });\r\n    this.animationQueue.push({\r\n      highlightedLine: 4,\r\n      distances: { ...distances },\r\n    });\r\n\r\n    distances[root] = 0;\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 5,\r\n      distances: { ...distances },\r\n    });\r\n\r\n    pq.insert([0, root]);\r\n\r\n    this.animationQueue.push({ highlightedLine: 6, pq: [...pq.getArray()] });\r\n\r\n    let activeLinks = [];\r\n\r\n    if (pq.size === 0) {\r\n      this.animationQueue.push({ highlightedLine: 7 });\r\n    }\r\n    while (pq.size > 0) {\r\n      this.animationQueue.push({ highlightedLine: 7 });\r\n\r\n      let currentNode = pq.removeRoot()[1];\r\n      this.animationQueue.push({\r\n        highlightedLine: 8,\r\n        currentNode: currentNode,\r\n        activatedNode: currentNode,\r\n        pq: [...pq.getArray()],\r\n        removeActiveLinks: [...activeLinks],\r\n      });\r\n      activeLinks = [];\r\n\r\n      for (let [neighborNodeWeight, neighborNode] of this.props.g[\r\n        currentNode\r\n      ]) {\r\n        let linkOfInterestString = this.generateLinkString(\r\n          currentNode,\r\n          neighborNode\r\n        );\r\n\r\n        activeLinks.push(document.getElementById(linkOfInterestString));\r\n        this.animationQueue.push({\r\n          highlightedLine: 9,\r\n          linkOfInterest: linkOfInterestString,\r\n          neighborNode: neighborNode,\r\n          neighborNodeWeight: neighborNodeWeight,\r\n        });\r\n        let potentialScore = distances[currentNode] + neighborNodeWeight;\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 10,\r\n          potentialScore: potentialScore,\r\n        });\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 11,\r\n        });\r\n\r\n        if (potentialScore < distances[neighborNode]) {\r\n          //updates\r\n          distances[neighborNode] = potentialScore;\r\n          this.animationQueue.push({\r\n            highlightedLine: 12,\r\n            distances: { ...distances },\r\n          });\r\n\r\n          parents[neighborNode] = currentNode;\r\n          this.animationQueue.push({\r\n            highlightedLine: 13,\r\n            parents: { ...parents },\r\n          });\r\n\r\n          pq.insert([neighborNodeWeight, neighborNode]);\r\n          this.animationQueue.push({\r\n            highlightedLine: 14,\r\n            pq: [...pq.getArray()],\r\n          });\r\n        }\r\n        this.animationQueue.push({\r\n          waitTime: 0,\r\n          potentialScore: null,\r\n          neighborNode: null,\r\n          neighborNodeWeight: null,\r\n        });\r\n      }\r\n      this.animationQueue.push({\r\n        waitTime: 0,\r\n        currentNode: null,\r\n        fadeOutLinks: [...activeLinks],\r\n        nodeComplete: currentNode,\r\n      });\r\n    }\r\n    this.animationQueue.push({\r\n      currentNode: null,\r\n    });\r\n\r\n    let end = target;\r\n    let stack = [end];\r\n    while (end != null) {\r\n      stack.push(parents[end]);\r\n      end = parents[end];\r\n    }\r\n    let shortestPath = stack.reverse().slice(1);\r\n    this.animationQueue.push({\r\n      waitTime: 0,\r\n      shortestPath: shortestPath,\r\n    });\r\n    this.props.updateAnimationQueue([...this.animationQueue]);\r\n\r\n    this.animationQueue = [];\r\n  };\r\n\r\n\r\n  generateLinkString(currentNode, neighborNode) {\r\n    return currentNode < neighborNode\r\n      ? currentNode + '-' + neighborNode\r\n      : neighborNode + '-' + currentNode;\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"graph-button\"\r\n        onClick={async () => {\r\n          await this.props.freshStart();\r\n\r\n          await this.props.setRunningAlg('dijkstra');\r\n          this.djikstra();\r\n        }}\r\n        disabled={this.props.getRunningAlg === 'dijkstra'}\r\n      >\r\n        Dijkstra\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dijkstra;\r\n","import React, { Component } from 'react';\r\n\r\nclass Prim extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.animationQueue = [];\r\n  }\r\n\r\n  prim = async () => {\r\n    let root = 'source';\r\n    let costMap = {};\r\n    let parents = {};\r\n    let mstSet = {};\r\n    Object.keys(this.props.g).forEach((k) => {\r\n      costMap[k] = Infinity;\r\n      parents[k] = null;\r\n      mstSet[k] = false;\r\n    });\r\n\r\n    this.animationQueue.push({ highlightedLine: 1 });\r\n    this.animationQueue.push({ highlightedLine: 2, distances: { ...costMap } });\r\n    this.animationQueue.push({ highlightedLine: 3, parents: { ...parents } });\r\n    this.animationQueue.push({\r\n      highlightedLine: 4,\r\n      mstSet: { ...mstSet },\r\n    });\r\n\r\n    parents[root] = -1;\r\n    this.animationQueue.push({ highlightedLine: 5, parents: { ...parents } });\r\n\r\n    costMap[root] = 0;\r\n    this.animationQueue.push({ highlightedLine: 6, distances: { ...costMap } });\r\n\r\n    let activeLinks = [];\r\n\r\n    for (let i = 0; i < Object.keys(this.props.g).length; i++) {\r\n      this.animationQueue.push({ highlightedLine: 7 });\r\n\r\n      let minNode = this.findMin(costMap, mstSet);\r\n      this.animationQueue.push({\r\n        highlightedLine: 8,\r\n        minNode: minNode,\r\n        activatedNode: minNode,\r\n      });\r\n\r\n      mstSet[minNode] = true;\r\n      this.animationQueue.push({ highlightedLine: 9, mstSet: { ...mstSet } });\r\n\r\n      for (let [cost, neighbor] of this.props.g[minNode]) {\r\n        this.animationQueue.push({\r\n          highlightedLine: 10,\r\n          neighborNodeWeight: cost,\r\n          neighborNode: neighbor,\r\n        });\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 11,\r\n        });\r\n\r\n        if (mstSet[neighbor] === false) {\r\n          this.animationQueue.push({\r\n            highlightedLine: 12,\r\n          });\r\n\r\n          if (costMap[neighbor] > cost) {\r\n            costMap[neighbor] = cost;\r\n\r\n            let linkOfInterestString = this.generateLinkString(\r\n              minNode,\r\n              neighbor\r\n            );\r\n            let oldLinkOfInterestString = this.generateLinkString(\r\n              parents[neighbor],\r\n              neighbor\r\n            );\r\n\r\n            this.animationQueue.push({\r\n              highlightedLine: 13,\r\n              distances: { ...costMap },\r\n              deActivateOldLink: [neighbor, parents[neighbor]],\r\n              linkOfInterest: linkOfInterestString,\r\n            });\r\n\r\n            // replace old link with new link\r\n            activeLinks.push(document.getElementById(linkOfInterestString));\r\n            let el = document.getElementById(oldLinkOfInterestString);\r\n            if (el) activeLinks.filter((e) => e !== el);\r\n\r\n            parents[neighbor] = minNode;\r\n            this.animationQueue.push({\r\n              highlightedLine: 14,\r\n              parents: { ...parents },\r\n              activateLink: this.generateLinkString(minNode, neighbor),\r\n            });\r\n          }\r\n        }\r\n        this.animationQueue.push({\r\n          waitTime: 0,\r\n          neighborNode: null,\r\n          neighborNodeWeight: null,\r\n        });\r\n      }\r\n      this.animationQueue.push({\r\n        waitTime: 0,\r\n        minNode: null,\r\n        nodeComplete: minNode,\r\n      });\r\n    }\r\n    this.props.updateAnimationQueue([...this.animationQueue]);\r\n\r\n    this.animationQueue = [];\r\n  };\r\n\r\n  findMin(key, mstSet) {\r\n    let min = Infinity;\r\n    let minNode = null;\r\n    for (let node of Object.keys(key)) {\r\n      if (key[node] < min && mstSet[node] === false) {\r\n        min = key[node];\r\n        minNode = node;\r\n      }\r\n    }\r\n    return minNode;\r\n  }\r\n\r\n  generateLinkString(currentNode, neighborNode) {\r\n    return currentNode < neighborNode\r\n      ? currentNode + '-' + neighborNode\r\n      : neighborNode + '-' + currentNode;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"graph-button\"\r\n        onClick={async () => {\r\n          await this.props.freshStart();\r\n\r\n          await this.props.setRunningAlg('prim');\r\n          this.prim();\r\n        }}\r\n        disabled={this.props.getRunningAlg === 'prim'}\r\n      >\r\n        Prim\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Prim;\r\n","import React, { Component } from 'react';\r\nimport createGraph from '../graph-builders/undirected-graph-builder';\r\nimport Dijkstra from './algorithms/graph-algorithms/Dijkstra';\r\nimport Prim from './algorithms/graph-algorithms/Prim';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport RenderListComponent from './sidebar/RenderListComponent';\r\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay } from 'react-icons/fa';\r\n\r\nclass UndirectedGraphAlgorithms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      distances: {},\r\n      parents: {},\r\n      runningAlg: '',\r\n      pq: null,\r\n      mstSet: {},\r\n      clicked: [false, false, false, false, false, false],\r\n      currentNode: null,\r\n      neighborNode: null,\r\n      neighborNodeWeight: null,\r\n      minNode: null,\r\n      potentialScore: null,\r\n      stepIndex: 0,\r\n      stepMode: false,\r\n    };\r\n    this.adjList = {\r\n      a: [\r\n        [3, 'g'],\r\n        [5, 'i'],\r\n        [7, 'c'],\r\n        [6, 'f'],\r\n        [10, 'b'],\r\n        [8, 'd'],\r\n      ],\r\n      b: [\r\n        [10, 'a'],\r\n        [8, 'f'],\r\n        [11, 'e'],\r\n        [4, 's'],\r\n        [8, 'j'],\r\n        [8, 'l'],\r\n        [9, 'd'],\r\n      ],\r\n      c: [\r\n        [5, 'k'],\r\n        [2, 'h'],\r\n        [9, 'e'],\r\n        [7, 'f'],\r\n        [7, 'a'],\r\n      ],\r\n      d: [\r\n        [5, 'q'],\r\n        [10, 'i'],\r\n        [8, 'a'],\r\n        [9, 'b'],\r\n        [9, 'l'],\r\n        [6, 't'],\r\n        [4, 'target'],\r\n      ],\r\n      e: [\r\n        [6, 'm'],\r\n        [10, 'j'],\r\n        [9, 's'],\r\n        [11, 'b'],\r\n        [6, 'f'],\r\n        [9, 'c'],\r\n        [10, 'k'],\r\n      ],\r\n      f: [\r\n        [6, 'a'],\r\n        [7, 'c'],\r\n        [6, 'e'],\r\n        [8, 'b'],\r\n      ],\r\n      g: [\r\n        [3, 'h'],\r\n        [10, 'k'],\r\n        [4, 'i'],\r\n        [3, 'a'],\r\n      ],\r\n      h: [\r\n        [2, 'c'],\r\n        [3, 'g'],\r\n      ],\r\n      i: [\r\n        [8, 'q'],\r\n        [10, 'd'],\r\n        [5, 'a'],\r\n        [4, 'g'],\r\n        [14, 'k'],\r\n        [7, 'n'],\r\n      ],\r\n      j: [\r\n        [6, 'o'],\r\n        [10, 'l'],\r\n        [8, 'b'],\r\n        [5, 's'],\r\n        [10, 'e'],\r\n        [11, 'm'],\r\n        [15, 'source'],\r\n      ],\r\n      k: [\r\n        [6, 'n'],\r\n        [14, 'i'],\r\n        [10, 'g'],\r\n        [5, 'c'],\r\n        [10, 'e'],\r\n        [8, 'm'],\r\n        [6, 'p'],\r\n      ],\r\n      l: [\r\n        [4, 't'],\r\n        [9, 'd'],\r\n        [8, 'b'],\r\n        [10, 'j'],\r\n        [5, 'o'],\r\n      ],\r\n      m: [\r\n        [8, 'k'],\r\n        [6, 'e'],\r\n        [11, 'j'],\r\n        [6, 'source'],\r\n        [7, 'p'],\r\n      ],\r\n      n: [\r\n        [6, 'k'],\r\n        [7, 'i'],\r\n      ],\r\n      o: [\r\n        [5, 'l'],\r\n        [6, 'j'],\r\n      ],\r\n      p: [\r\n        [6, 'k'],\r\n        [7, 'm'],\r\n        [9, 'source'],\r\n      ],\r\n      q: [\r\n        [3, 'target'],\r\n        [8, 'i'],\r\n        [5, 'd'],\r\n      ],\r\n      s: [\r\n        [9, 'e'],\r\n        [4, 'b'],\r\n        [5, 'j'],\r\n      ],\r\n      t: [\r\n        [6, 'd'],\r\n        [4, 'l'],\r\n      ],\r\n      target: [\r\n        [3, 'q'],\r\n        [4, 'd'],\r\n      ],\r\n      source: [\r\n        [9, 'p'],\r\n        [6, 'm'],\r\n        [15, 'j'],\r\n      ],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    createGraph();\r\n    this.graph = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('graph-svg');\r\n    if (this.graph.hasChildNodes()) this.graph.removeChild(svg);\r\n    this.reset();\r\n  }\r\n\r\n  freshStart = async () => {\r\n    await this.setState({\r\n      stop: false,\r\n      pause: false,\r\n      runningAlg: null,\r\n      stepMode: false,\r\n    });\r\n  };\r\n\r\n  updateAnimationQueue = async (aq) => {\r\n    await this.setState({\r\n      animationQueue: aq,\r\n    });\r\n    await this.renderAnimationQueue();\r\n  };\r\n\r\n  renderAnimationQueue = async () => {\r\n    let initialRunningAlg = this.state.runningAlg;\r\n    this.setState({ stepIndex: 0 });\r\n    let shouldWait = true;\r\n    while (this.state.stepIndex < this.state.animationQueue.length) {\r\n      let currentState = this.state.animationQueue[this.state.stepIndex];\r\n\r\n      this.highlightLine(currentState.highlightedLine);\r\n\r\n      let waitTime =\r\n        currentState.waitTime !== undefined ? currentState.waitTime : 1000;\r\n\r\n      if (!shouldWait) {\r\n        waitTime = 0;\r\n      }\r\n\r\n      await new Promise((r) => setTimeout(r, waitTime / this.state.speed));\r\n      await this.checkPauseStatus();\r\n\r\n      if (initialRunningAlg !== this.state.runningAlg) {\r\n        return;\r\n      }\r\n      this.removeHighlightedLine(currentState.highlightedLine);\r\n\r\n      this.setState({ ...currentState });\r\n\r\n      this.activateCurrentNode(currentState.activatedNode);\r\n      if (currentState.nodeComplete) {\r\n        this.updateCurrentNodeToBeVisited(currentState.nodeComplete);\r\n      }\r\n      this.activateLink(currentState.linkOfInterest);\r\n      if (currentState.fadeOutLinks) {\r\n        this.fadeOutLinks(currentState.fadeOutLinks);\r\n      }\r\n      if (currentState.removeActiveLinks) {\r\n        this.removeActiveLinks(currentState.removeActiveLinks);\r\n      }\r\n\r\n      if (currentState.shortestPath) {\r\n        this.highlightShortestPath(currentState.shortestPath);\r\n      }\r\n\r\n      if (currentState.deActivateOldLink) {\r\n        this.deActivateOldLink(\r\n          currentState.deActivateOldLink[0],\r\n          currentState.deActivateOldLink[1]\r\n        );\r\n      }\r\n\r\n      if (!this.state.stepMode) {\r\n        this.setState({ stepIndex: this.state.stepIndex + 1 });\r\n        shouldWait = true;\r\n      } else {\r\n        // need to reset everything up to the previous state starting from beggining since we only update what is neccessary at each element of the animation queue\r\n        this.reset();\r\n        this.setState({\r\n          runningAlg: initialRunningAlg,\r\n          pause: true,\r\n          stepMode: false,\r\n        });\r\n        for (let i = 0; i < this.state.stepIndex; i++) {\r\n          let prevState = this.state.animationQueue[i];\r\n          this.setState({ ...prevState });\r\n          this.activateCurrentNode(prevState.activatedNode);\r\n          if (prevState.nodeComplete) {\r\n            this.updateCurrentNodeToBeVisited(prevState.nodeComplete);\r\n          }\r\n          this.activateLink(prevState.linkOfInterest);\r\n\r\n          if (prevState.fadeOutLinks) {\r\n            this.fadeOutLinks(prevState.fadeOutLinks);\r\n          }\r\n          if (prevState.removeActiveLinks) {\r\n            this.removeActiveLinks(prevState.removeActiveLinks);\r\n          }\r\n\r\n          if (prevState.shortestPath) {\r\n            this.highlightShortestPath(prevState.shortestPath);\r\n          }\r\n          if (prevState.deActivateOldLink) {\r\n            this.deActivateOldLink(\r\n              prevState.deActivateOldLink[0],\r\n              prevState.deActivateOldLink[1]\r\n            );\r\n          }\r\n        }\r\n\r\n        shouldWait = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  setRunningAlg = async (alg) => {\r\n    this.reset();\r\n    await this.setState({ runningAlg: alg });\r\n  };\r\n\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n\r\n  activateCurrentNode(currentNode) {\r\n    let currentNodeElement = document.getElementById(currentNode);\r\n    if (currentNodeElement) {\r\n      currentNodeElement.classList.add('current-node-of-interest');\r\n    }\r\n  }\r\n\r\n  removeActiveLinks(activeLinks) {\r\n    activeLinks.forEach((e) => {\r\n      if (e) {\r\n        e.classList.remove('fade-out-link', 'link-traversed');\r\n      }\r\n    });\r\n    return [];\r\n  }\r\n\r\n  highlightLine(lineNum) {\r\n    let el = document.getElementById(this.state.runningAlg + '-' + lineNum);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(lineNum) {\r\n    let el = document.getElementById(this.state.runningAlg + '-' + lineNum);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n\r\n  generateLinkString(currentNode, neighborNode) {\r\n    return currentNode < neighborNode\r\n      ? currentNode + '-' + neighborNode\r\n      : neighborNode + '-' + currentNode;\r\n  }\r\n\r\n  activateLink(linkString) {\r\n    let linkOfInterestElement = document.getElementById(linkString);\r\n    if (linkOfInterestElement)\r\n      linkOfInterestElement.classList.add('link-traversed');\r\n    return linkOfInterestElement;\r\n  }\r\n\r\n  updateCurrentNodeToBeVisited(currentNode) {\r\n    let currentNodeElement = document.getElementById(currentNode);\r\n    if (currentNodeElement) {\r\n      currentNodeElement.classList.remove('current-node-of-interest');\r\n      currentNodeElement.classList.add('node-complete-tree');\r\n    }\r\n  }\r\n\r\n  fadeOutLinks(activeLinks) {\r\n    activeLinks.forEach((e) => {\r\n      if (e) {\r\n        e.classList.add('fade-out-link');\r\n      }\r\n    });\r\n  }\r\n\r\n  async checkPauseStatus() {\r\n    while (this.state.pause && !this.state.stepMode) {\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  highlightShortestPath(shortestPath) {\r\n    for (let i = 1; i < shortestPath.length; i++) {\r\n      let prev = shortestPath[i - 1];\r\n      let current = shortestPath[i];\r\n      let linkString = this.generateLinkString(prev, current);\r\n      this.activateLink(linkString);\r\n    }\r\n  }\r\n  reset = () => {\r\n    Object.keys(this.adjList).forEach((e) => {\r\n      let el = document.getElementById(e);\r\n      if (el) {\r\n        el.classList.remove('node-complete-tree');\r\n        el.classList.remove('current-node-of-interest');\r\n      }\r\n    });\r\n\r\n    for (let i = 1; i < 15; i++) {\r\n      let dijkstraPseduoElement = document.getElementById('dijkstra-' + i);\r\n      if (dijkstraPseduoElement) dijkstraPseduoElement.classList = '';\r\n      let primPseduoElement = document.getElementById('prim-' + i);\r\n      if (primPseduoElement) primPseduoElement.classList = '';\r\n    }\r\n    let lines = document.getElementsByTagName('line');\r\n    for (let line of lines) {\r\n      line.classList = '';\r\n    }\r\n    this.setState({\r\n      distances: {},\r\n      parents: {},\r\n      minNode: null,\r\n      neighborNode: null,\r\n      neighborNodeWeight: null,\r\n      mstSet: {},\r\n      // clicked: [false, false, false, false, false],\r\n    });\r\n    if (this.state.stop) {\r\n      this.setState({ stop: false, pause: false });\r\n    }\r\n  };\r\n\r\n  renderDijkstraTableData() {\r\n    return Object.keys(this.state.distances).map((key, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{key}</td>\r\n          <td>{this.state.parents[key]}</td>\r\n          <td>{this.state.distances[key]}</td>\r\n          <td style={{ backgroundColor: index === 0 ? 'yellow' : '' }}>\r\n            {this.state.pq[index]}\r\n          </td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderDijkstraHeading() {\r\n    return (\r\n      <tr>\r\n        <th>Node</th>\r\n        <th>Parent</th>\r\n        <th>Distance</th>\r\n        <th>Priority Queue</th>\r\n      </tr>\r\n    );\r\n  }\r\n  async deActivateOldLink(node, oldChild) {\r\n    let linkString =\r\n      node < oldChild ? node + '-' + oldChild : oldChild + '-' + node;\r\n    let el = document.getElementById(linkString);\r\n    if (el) {\r\n      el.classList.add('fade-out-link');\r\n      // await new Promise((r) => setTimeout(r, 1000 / this.state.speed));\r\n      el.classList.remove('link-traversed', 'fade-out-link');\r\n      return el;\r\n    }\r\n  }\r\n  renderPrimTableData() {\r\n    return Object.keys(this.state.distances).map((key, index) => {\r\n      return (\r\n        <tr key={index}>\r\n          <td>{key}</td>\r\n          <td>{this.state.parents[key]}</td>\r\n          <td>{this.state.distances[key]}</td>\r\n        </tr>\r\n      );\r\n    });\r\n  }\r\n\r\n  renderPrimHeading() {\r\n    return (\r\n      <tr>\r\n        <th>Node</th>\r\n        <th>Parent</th>\r\n        <th>Cost</th>\r\n      </tr>\r\n    );\r\n  }\r\n\r\n  renderPrimPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'prim-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Prim(G, root)</span>\r\n        </div>\r\n        <div id={'prim-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let cost be a map with all nodes as keys and values of Infinity\r\n          </span>\r\n        </div>\r\n        <div id={'prim-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let parents be a map with all nodes as keys and values of null\r\n          </span>\r\n        </div>\r\n        <div id={'prim-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let mstSet be a map with all nodes as keys and values of false\r\n          </span>\r\n        </div>\r\n        <div id={'prim-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            set parents[root] = -1\r\n          </span>\r\n        </div>\r\n        <div id={'prim-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            set costMap[root] = 0\r\n          </span>\r\n        </div>\r\n        <div id={'prim-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            do n times where n is number of nodes\r\n          </span>\r\n        </div>\r\n        <div id={'prim-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            {' '}\r\n            minNode = findMin(cost, mstSet)\r\n          </span>\r\n        </div>\r\n        <div id={'prim-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            {' '}\r\n            set mstSet[minNode] = true\r\n          </span>\r\n        </div>\r\n        <div id={'prim-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for every neighbor, neighborCost of minNode\r\n          </span>\r\n        </div>\r\n        <div id={'prim-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if mstSet[neighbor] is false\r\n          </span>\r\n        </div>\r\n        <div id={'prim-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            if cost[neighbor] {'>'} cost\r\n          </span>\r\n        </div>\r\n        <div id={'prim-13'}>\r\n          13\r\n          <span style={{ marginLeft: indentation(6) }}>\r\n            set cost[neighbor] = cost{' '}\r\n          </span>\r\n        </div>\r\n        <div id={'prim-14'}>\r\n          14\r\n          <span style={{ marginLeft: indentation(6) }}>\r\n            set parents[neighbor] = minNode{' '}\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  renderDijkstraPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'dijkstra-1'}>\r\n          1\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            Dijkstra(G, source, target)\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let pq be a Priority Queue (min-heap)\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let parents be a map with all nodes as keys and values of null\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let distances be a map with all nodes as keys and values of Infinity\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            set distances[source] = 0\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            insert root at cost 0 into pq\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while pq is not empty\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            current = pq.removeRoot()\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            for neighbor of G[current]\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            set potentialScore = distances[current] + neighborCost\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            {' '}\r\n            if potentialScore {'<'} distances[neighbor]\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set distances[neighbor] = potentialScore\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-13'}>\r\n          13\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            set parents[neighbor] = current\r\n          </span>\r\n        </div>\r\n        <div id={'dijkstra-14'}>\r\n          14\r\n          <span style={{ marginLeft: indentation(5) }}>\r\n            insert neighbor at cost neighborCost into pq\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <Dijkstra\r\n            g={this.adjList}\r\n            getRunningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateAnimationQueue={this.updateAnimationQueue}\r\n            freshStart={this.freshStart}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <Prim\r\n            g={this.adjList}\r\n            getRunningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateAnimationQueue={this.updateAnimationQueue}\r\n            freshStart={this.freshStart}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({\r\n                pause: false,\r\n                stop: true,\r\n                animationQueue: [],\r\n                runningAlg: '',\r\n              });\r\n              this.reset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause, stepMode: false });\r\n            }}\r\n          >\r\n            {this.state.pause ? <FaPlay /> : <FaPause />}\r\n          </button>\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) => {\r\n                  event.preventDefault();\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n            <label>Step: </label>\r\n\r\n            <button\r\n              onClick={() => {\r\n                let newStepIndex = this.state.stepIndex - 1;\r\n                while (\r\n                  !this.state.animationQueue[newStepIndex].highlightedLine\r\n                ) {\r\n                  newStepIndex -= 1;\r\n                }\r\n                this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepBackward />\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                let newStepIndex = this.state.stepIndex + 1;\r\n                while (\r\n                  !this.state.animationQueue[newStepIndex].highlightedLine\r\n                ) {\r\n                  newStepIndex += 1;\r\n                }\r\n                this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepForward />\r\n            </button>\r\n          </form>\r\n        </div>\r\n\r\n        <div className={'col-4'} id={'output-tables'}>\r\n          <table\r\n            id={'undirected-graph-table'}\r\n            className={('undirected-graph-table', 'float-right')}\r\n            style={{ marginRight: '40px' }}\r\n          >\r\n            <tbody>\r\n              {this.state.runningAlg === 'prim' ? (\r\n                this.renderPrimHeading()\r\n              ) : this.state.runningAlg === 'dijkstra' ? (\r\n                this.renderDijkstraHeading()\r\n              ) : (\r\n                <tr></tr>\r\n              )}\r\n              {this.state.runningAlg === 'prim' ? (\r\n                this.renderPrimTableData()\r\n              ) : this.state.runningAlg === 'dijkstra' ? (\r\n                this.renderDijkstraTableData()\r\n              ) : (\r\n                <tr></tr>\r\n              )}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            {this.state.runningAlg === ''\r\n              ? ''\r\n              : this.state.runningAlg === 'prim'\r\n              ? this.renderPrimPseudocode()\r\n              : this.renderDijkstraPseudocode()}\r\n          </div>\r\n\r\n          <div className={'row'}>\r\n            {this.state.runningAlg === 'prim' ? (\r\n              <Sidebar showButton={this.state.runningAlg !== ''}>\r\n                {this.state.minNode ? (\r\n                  <li> minNode = {this.state.minNode} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.node ? <li> current = {this.state.node} </li> : ''}\r\n                {this.state.neighborNode ? (\r\n                  <li> neighbor = {this.state.neighborNode} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.neighborNodeWeight ? (\r\n                  <li> neighborCost = {this.state.neighborNodeWeight} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                <li onClick={() => this.toggleClicked(0)}>\r\n                  {Object.keys(this.state.distances).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.distances}\r\n                      objName={'cost'}\r\n                      clicked={this.state.clicked[0]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(1)}>\r\n                  {Object.keys(this.state.parents).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.parents}\r\n                      objName={'parents'}\r\n                      clicked={this.state.clicked[1]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(2)}>\r\n                  {Object.keys(this.state.mstSet).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.mstSet}\r\n                      objName={'mstSet'}\r\n                      clicked={this.state.clicked[2]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(3)}>\r\n                  {this.adjList ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.adjList}\r\n                      objName={'G'}\r\n                      clicked={this.state.clicked[3]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n              </Sidebar>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.runningAlg === 'dijkstra' ? (\r\n              <Sidebar showButton={this.state.runningAlg !== ''}>\r\n                {this.state.currentNode ? (\r\n                  <li> current = {this.state.currentNode} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                {this.state.neighborNode ? (\r\n                  <li> neighbor = {this.state.neighborNode} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.neighborNodeWeight ? (\r\n                  <li> neighborCost = {this.state.neighborNodeWeight} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n\r\n                {this.state.potentialScore ? (\r\n                  <li> potentialScore = {this.state.potentialScore} </li>\r\n                ) : (\r\n                  ''\r\n                )}\r\n                <li onClick={() => this.toggleClicked(0)}>\r\n                  {this.state.pq ? (\r\n                    <RenderListComponent\r\n                      list={this.state.pq}\r\n                      listName={'pq'}\r\n                      clicked={this.state.clicked[0]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(1)}>\r\n                  {Object.keys(this.state.distances).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.distances}\r\n                      objName={'distances'}\r\n                      clicked={this.state.clicked[1]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(2)}>\r\n                  {Object.keys(this.state.parents).length > 0 ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.state.parents}\r\n                      objName={'parents'}\r\n                      clicked={this.state.clicked[2]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n                <li onClick={() => this.toggleClicked(3)}>\r\n                  {this.adjList ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.adjList}\r\n                      objName={'G'}\r\n                      clicked={this.state.clicked[3]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n              </Sidebar>\r\n            ) : (\r\n              <Sidebar>\r\n                <li onClick={() => this.toggleClicked(4)}>\r\n                  {this.adjList ? (\r\n                    <RenderObjectComponent\r\n                      obj={this.adjList}\r\n                      objName={'G'}\r\n                      clicked={this.state.clicked[4]}\r\n                    />\r\n                  ) : (\r\n                    ''\r\n                  )}\r\n                </li>\r\n              </Sidebar>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default UndirectedGraphAlgorithms;\r\n","import React, { Component } from 'react';\r\n\r\nclass Topsort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.animationQueue = [];\r\n    this.previousNodes = [];\r\n    this.callStack = [];\r\n  }\r\n\r\n  topSort = async () => {\r\n    let stack = [];\r\n    let visited = {};\r\n    let activeLinks = {};\r\n    Object.keys(this.props.g).map((key) => (visited[key] = null));\r\n\r\n    this.animationQueue.push({ highlightedLine: 'topsort-1' });\r\n    this.animationQueue.push({ highlightedLine: 'topsort-2', stack: [] });\r\n    this.animationQueue.push({\r\n      highlightedLine: 'topsort-3',\r\n      visited: { ...visited },\r\n    });\r\n\r\n    for (let node of Object.keys(this.props.g)) {\r\n      this.animationQueue.push({\r\n        removeHighlightedLine: 'topsort-6',\r\n        waitTime: 0,\r\n      });\r\n      this.animationQueue.push({\r\n        highlightedLine: 'topsort-4',\r\n        currentNode: node,\r\n      });\r\n\r\n      if (visited[node]) {\r\n        this.animationQueue.push({ highlightedLine: 'topsort-5' });\r\n      }\r\n\r\n      if (visited[node] === null) {\r\n        this.callStack.unshift(`visit(${node}, G, S, V)`);\r\n\r\n        this.animationQueue.push({ highlightedLine: 'topsort-5' });\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 'topsort-6',\r\n          keepLineHighlighted: true,\r\n          callStack: [...this.callStack],\r\n        });\r\n\r\n        if ((await this.visit(node, stack, visited, activeLinks)) === false) {\r\n          return null;\r\n        }\r\n\r\n        this.callStack.shift();\r\n        this.animationQueue.push({ callStack: [...this.callStack] });\r\n      }\r\n    }\r\n    this.animationQueue.push({\r\n      removeHighlightedLine: 'topsort-6',\r\n      waitTime: 0,\r\n    });\r\n    this.animationQueue.push({\r\n      highlightedLine: 'topsort-8',\r\n      ordering: stack.slice().reverse(),\r\n    });\r\n    this.props.updateAnimationQueue([...this.animationQueue]);\r\n    this.animationQueue = [];\r\n    return stack.reverse();\r\n  };\r\n  visit = async (node, stack, visited, activeLinks) => {\r\n    this.animationQueue.push({ highlightedLine: 'topsort-visit-1' });\r\n    this.animationQueue.push({ highlightedLine: 'topsort-visit-2' });\r\n\r\n    if (visited[node] === 'Complete') {\r\n      this.callStack.shift();\r\n      this.animationQueue.push({\r\n        highlightedLine: 'topsort-visit-3',\r\n        currentNode: this.previousNodes.pop(),\r\n        callStack: [...this.callStack],\r\n      });\r\n      return true;\r\n    }\r\n    this.animationQueue.push({ highlightedLine: 'topsort-visit-4' });\r\n\r\n    if (visited[node] === 'In Progress') {\r\n      this.animationQueue.push({ highlightedLine: 'topsort-visit-5' });\r\n      return false;\r\n    }\r\n\r\n    visited[node] = 'In Progress';\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'topsort-visit-6',\r\n      activatedNode: node,\r\n      visited: { ...visited },\r\n    });\r\n\r\n    if (this.props.g[node].length < 1) {\r\n      this.animationQueue.push({ highlightedLine: 'topsort-visit-7' });\r\n    }\r\n\r\n    for (let neighbor of this.props.g[node]) {\r\n      this.animationQueue.push({\r\n        highlightedLine: 'topsort-visit-7',\r\n        activatedLink: node + '-' + neighbor,\r\n        neighbor: neighbor,\r\n      });\r\n\r\n      activeLinks = this.updateActiveLinks(neighbor, activeLinks, node);\r\n\r\n      this.previousNodes.push(node);\r\n      this.callStack.unshift(`visit(${neighbor}, G, S, V)`);\r\n      this.animationQueue.push({\r\n        highlightedLine: 'topsort-visit-8',\r\n        neighbor: null,\r\n        currentNode: neighbor,\r\n        callStack: [...this.callStack],\r\n      });\r\n\r\n      if ((await this.visit(neighbor, stack, visited, activeLinks)) === false) {\r\n        return false;\r\n      }\r\n    }\r\n    stack.push(node);\r\n    this.animationQueue.push({\r\n      highlightedLine: 'topsort-visit-10',\r\n      stack: [...stack],\r\n    });\r\n\r\n    visited[node] = 'Complete';\r\n    this.animationQueue.push({\r\n      highlightedLine: 'topsort-visit-11',\r\n      visited: { ...visited },\r\n      nodeComplete: node,\r\n      outgoingLinks: { activeLinks, node },\r\n    });\r\n\r\n    this.callStack.shift();\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'topsort-visit-12',\r\n      currentNode: this.previousNodes.pop(),\r\n      callStack: [...this.callStack],\r\n    });\r\n\r\n    return true;\r\n  };\r\n\r\n  updateActiveLinks(neighbor, activeLinks, node) {\r\n    let activeLink = document.getElementById(node + '-' + neighbor);\r\n    if (activeLink) {\r\n      if (!activeLinks[node]) {\r\n        activeLinks[node] = [activeLink];\r\n      } else {\r\n        activeLinks[node].push(activeLink);\r\n      }\r\n    }\r\n    return activeLinks;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        className=\"graph-button\"\r\n        onClick={() => {\r\n          this.props.freshStart();\r\n\r\n          this.props.setRunningAlg('topsort');\r\n          this.topSort();\r\n        }}\r\n        disabled={this.props.getRunningAlg === 'topsort'}\r\n      >\r\n        Topological Sort\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Topsort;\r\n","import * as d3 from 'd3';\r\n\r\nfunction createDirectedGraph() {\r\n  let nodes = [\r\n    { id: 'g', level: 2 },\r\n    { id: 'f', level: 2 },\r\n\r\n    { id: 'd', level: 2 },\r\n    { id: 'i', level: 2 },\r\n    { id: 'e', level: 2 },\r\n    { id: 'a', level: 2 },\r\n    { id: 'h', level: 2 },\r\n    { id: 'j', level: 2 },\r\n\r\n    { id: 'c', level: 2 },\r\n    { id: 'b', level: 2 },\r\n  ];\r\n\r\n  let strength = 0.001;\r\n  let links = [\r\n    { source: 'g', target: 'i', strength: 100 * strength },\r\n    { source: 'g', target: 'f', strength: 20 * strength },\r\n    { source: 'i', target: 'h', strength: 40 * strength },\r\n    { source: 'd', target: 'g', strength: 10 * strength },\r\n    { source: 'd', target: 'e', strength: 10 * strength },\r\n    { source: 'd', target: 'b', strength: 20 * strength },\r\n    { source: 'a', target: 'g', strength: 10 * strength },\r\n    { source: 'a', target: 'b', strength: 10 * strength },\r\n    { source: 'a', target: 'c', strength: 30 * strength },\r\n    { source: 'j', target: 'e', strength: 50 * strength },\r\n    { source: 'e', target: 'b', strength: 20 * strength },\r\n    { source: 'b', target: 'f', strength: 20 * strength },\r\n  ];\r\n  const margin = { top: 20, right: 200, bottom: 200, left: -100 },\r\n    width = 800 - margin.left - margin.right,\r\n    height = 600 - margin.top - margin.bottom;\r\n\r\n  function getNodeColor(node) {\r\n    return node.level === 1 ? 'red' : 'gray';\r\n  }\r\n\r\n  var svg = d3\r\n    .select('#graph-container')\r\n    .append('svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('id', 'dir-graph-svg')\r\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')')\r\n    .attr('class', 'graph');\r\n\r\n  // simulation setup with all forces\r\n  var linkForce = d3\r\n    .forceLink()\r\n    .id(function (link) {\r\n      return link.id;\r\n    })\r\n    .strength(function (link) {\r\n      return link.strength / 0.9;\r\n    });\r\n\r\n  var simulation = d3\r\n    .forceSimulation()\r\n    .force('link', linkForce)\r\n    .force('charge', d3.forceManyBody().strength(-100))\r\n    .force('center', d3.forceCenter(width / 2, height / 2));\r\n\r\n  svg\r\n    .append('defs')\r\n    .append('marker')\r\n    .attr('id', 'arrow')\r\n    .attr('viewBox', [-0, -5, 10, 10])\r\n    .attr('refX', 19)\r\n    .attr('refY', 0)\r\n    .attr('markerWidth', 11)\r\n    .attr('markerHeight', 11)\r\n    .attr('orient', 'auto-start-reverse')\r\n    .append('path')\r\n    .attr('d', 'M 0,-5 L 10 ,0 L 0,5')\r\n    .attr('fill', 'rgba(50, 50, 50, 0.5)')\r\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)');\r\n\r\n  var linkElements = svg\r\n    .append('g')\r\n    .attr('class', 'links')\r\n    .selectAll('line')\r\n    .data(links)\r\n    .enter()\r\n    .append('line')\r\n    .attr('stroke-width', 1)\r\n    .attr('stroke', 'rgba(50, 50, 50, 0.2)')\r\n    .attr('marker-end', 'url(#arrow)')\r\n    .attr('id', (d) => d.source + '-' + d.target);\r\n\r\n  var linkTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'link_texts')\r\n    .selectAll('text')\r\n    .data(links)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (link) {\r\n      return link.cost;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 0)\r\n    .attr('dy', 0);\r\n\r\n  var nodeElements = svg\r\n    .append('g')\r\n    .attr('class', 'node')\r\n    .selectAll('circle')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('r', 10)\r\n    .attr('fill', getNodeColor)\r\n    .attr('id', (d) => d.id);\r\n\r\n  var nodeTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'texts')\r\n    .selectAll('text')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (node) {\r\n      return node.id;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', -25)\r\n    .attr('dy', 4);\r\n\r\n  simulation.nodes(nodes).on('tick', () => {\r\n    nodeElements\r\n      .attr('cx', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('cy', function (node) {\r\n        return node.y;\r\n      });\r\n    nodeTextElements\r\n      .attr('x', function (node) {\r\n        return node.x;\r\n      })\r\n      .attr('y', function (node) {\r\n        return node.y;\r\n      });\r\n\r\n    linkElements\r\n      .attr('x1', function (link) {\r\n        return link.source.x;\r\n      })\r\n      .attr('y1', function (link) {\r\n        return link.source.y;\r\n      })\r\n      .attr('x2', function (link) {\r\n        return link.target.x;\r\n      })\r\n      .attr('y2', function (link) {\r\n        return link.target.y;\r\n      });\r\n\r\n    linkTextElements\r\n      .attr('x', function (link) {\r\n        return (link.source.x + link.target.x) / 2;\r\n      })\r\n      .attr('y', function (link) {\r\n        return (link.source.y + link.target.y) / 2;\r\n      });\r\n  });\r\n\r\n  simulation.force('link').links(links);\r\n}\r\n\r\nexport default createDirectedGraph;\r\n","import React, { Component } from 'react';\r\nimport Topsort from './algorithms/graph-algorithms/Topsort';\r\nimport createDirectedGraph from '../graph-builders/directed-graph-builder';\r\nimport Sidebar from './sidebar/Sidebar';\r\nimport RenderListComponent from './sidebar/RenderListComponent';\r\nimport RenderObjectComponent from './sidebar/RenderObjectComponent';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay } from 'react-icons/fa';\r\n\r\nclass DirectedGraphAlgorithms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      ordering: null,\r\n      runningAlg: null,\r\n      neighbor: null,\r\n      currentNode: null,\r\n      visited: null,\r\n      stack: null,\r\n      clicked: [false, false, false, false, false],\r\n      callStack: [],\r\n      activeLinks: null,\r\n      activatedLink: null,\r\n      stepIndex: 0,\r\n      stepMode: false,\r\n    };\r\n    this.adjList = {\r\n      a: ['g', 'c', 'b'],\r\n      b: ['f'],\r\n      c: [],\r\n      d: ['g', 'e', 'b'],\r\n      e: ['b'],\r\n      f: [],\r\n      g: ['i', 'f'],\r\n      h: [],\r\n      i: ['h'],\r\n      j: ['e'],\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    createDirectedGraph();\r\n    this.graph = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('dir-graph-svg');\r\n    if (this.graph.hasChildNodes()) this.graph.removeChild(svg);\r\n    this.reset();\r\n  }\r\n  updateAnimationQueue = async (aq) => {\r\n    await this.setState({\r\n      animationQueue: aq,\r\n    });\r\n    await this.renderAnimationQueue();\r\n  };\r\n\r\n  renderAnimationQueue = async () => {\r\n    let initialRunningAlg = this.state.runningAlg;\r\n    this.setState({ stepIndex: 0 });\r\n    let shouldWait = true;\r\n    while (this.state.stepIndex < this.state.animationQueue.length) {\r\n      let currentState = this.state.animationQueue[this.state.stepIndex];\r\n\r\n      this.highlightLine(currentState.highlightedLine);\r\n\r\n      let waitTime =\r\n        currentState.waitTime !== undefined ? currentState.waitTime : 1000;\r\n\r\n      if (!shouldWait) {\r\n        waitTime = 0;\r\n      }\r\n      await new Promise((r) => setTimeout(r, waitTime / this.state.speed));\r\n      await this.checkPauseStatus();\r\n\r\n      if (initialRunningAlg !== this.state.runningAlg) {\r\n        return;\r\n      }\r\n      if (!currentState.keepLineHighlighted) {\r\n        this.removeHighlightedLine(currentState.highlightedLine);\r\n      }\r\n      if (currentState.removeHighlightedLine) {\r\n        this.removeHighlightedLine(currentState.removeHighlightedLine);\r\n      }\r\n\r\n      this.setState({ ...currentState });\r\n\r\n      this.activateCurrentNode(currentState.activatedNode);\r\n      this.activateNeighbor(currentState.neighbor);\r\n      this.markNodeComplete(currentState.nodeComplete);\r\n      this.activateLink(currentState.activatedLink);\r\n      if (currentState.outgoingLinks) {\r\n        this.removeOutgoingLinks(\r\n          currentState.outgoingLinks.activeLinks,\r\n          currentState.outgoingLinks.node\r\n        );\r\n      }\r\n\r\n      if (!this.state.stepMode) {\r\n        this.setState({ stepIndex: this.state.stepIndex + 1 });\r\n        shouldWait = true;\r\n      } else {\r\n        // need to reset everything up to the previous state starting from beggining since we only update what is neccessary at each element of the animation queue\r\n        this.reset();\r\n        this.setState({\r\n          runningAlg: initialRunningAlg,\r\n          pause: true,\r\n          stepMode: false,\r\n        });\r\n        for (let i = 0; i < this.state.stepIndex; i++) {\r\n          let prevState = this.state.animationQueue[i];\r\n          this.setState({ ...prevState });\r\n          this.activateCurrentNode(prevState.activatedNode);\r\n          this.activateNeighbor(prevState.neighbor);\r\n          this.markNodeComplete(prevState.nodeComplete);\r\n          this.activateLink(prevState.activatedLink);\r\n          if (prevState.keepLineHighlighted) {\r\n            this.highlightLine(prevState.highlightedLine);\r\n          }\r\n          if (prevState.removeHighlightedLine) {\r\n            this.removeHighlightedLine(currentState.removeHighlightedLine);\r\n          }\r\n          if (prevState.outgoingLinks) {\r\n            this.removeOutgoingLinks(\r\n              prevState.outgoingLinks.activeLinks,\r\n              prevState.outgoingLinks.node\r\n            );\r\n          }\r\n        }\r\n        shouldWait = false;\r\n      }\r\n    }\r\n  };\r\n\r\n  highlightLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n\r\n  activateCurrentNode(node) {\r\n    let currentElement = document.getElementById(node);\r\n    if (\r\n      currentElement &&\r\n      currentElement.classList.contains('current-neighbor-of-interest')\r\n    ) {\r\n      document\r\n        .getElementById(node)\r\n        .classList.remove('current-neighbor-of-interest');\r\n      document.getElementById(node).classList.add('child-to-current');\r\n    } else {\r\n      if (document.getElementById(node)) {\r\n        document.getElementById(node).classList.add('current-node-of-interest');\r\n      }\r\n    }\r\n  }\r\n\r\n  activateNeighbor(neighbor) {\r\n    let neighborEl = document.getElementById(neighbor);\r\n    if (neighborEl) neighborEl.classList.add('current-neighbor-of-interest');\r\n  }\r\n\r\n  activateLink(id) {\r\n    let lineElement = document.getElementById(id);\r\n    if (lineElement) lineElement.classList.add('link-of-interest-ts');\r\n    return lineElement;\r\n  }\r\n\r\n  removeOutgoingLinks(activeLinks, node) {\r\n    if (activeLinks[node] && activeLinks[node].length > 0) {\r\n      activeLinks[node].forEach((e) => {\r\n        e.classList.remove('link-of-interest-ts');\r\n      });\r\n    }\r\n  }\r\n\r\n  markNodeComplete(node) {\r\n    let nodeEl = document.getElementById(node);\r\n    if (nodeEl) {\r\n      nodeEl.classList.remove('current-neighbor-of-interest');\r\n      nodeEl.classList.remove('current-node-of-interest');\r\n      nodeEl.classList.add('node-complete-directed');\r\n    }\r\n  }\r\n\r\n  async checkPauseStatus() {\r\n    while (this.state.pause && !this.state.stepMode) {\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  setRunningAlg = (alg) => {\r\n    this.reset();\r\n    this.setState({ runningAlg: alg });\r\n  };\r\n\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n\r\n  freshStart = () => {\r\n    this.setState({\r\n      stop: false,\r\n      pause: false,\r\n      runningAlg: null,\r\n      stepMode: false,\r\n    });\r\n  };\r\n\r\n  reset = () => {\r\n    Object.keys(this.adjList).forEach((e) => {\r\n      // remove node coloring\r\n      let el = document.getElementById(e);\r\n      if (el) el.classList = '';\r\n\r\n      // remove highlighted pseudocode\r\n      for (let i = 1; i < 9; i++) {\r\n        let pseduoTopsortElements = document.getElementById('topsort-' + i);\r\n        if (pseduoTopsortElements) pseduoTopsortElements.classList = '';\r\n      }\r\n      for (let i = 1; i < 13; i++) {\r\n        let pseduoTopsortElements = document.getElementById(\r\n          'topsort-visit-' + i\r\n        );\r\n        if (pseduoTopsortElements) pseduoTopsortElements.classList = '';\r\n      }\r\n      // Remove Active Links\r\n      for (let neighbor of this.adjList[e]) {\r\n        let nodeNeighborLinkElement = document.getElementById(\r\n          e + '-' + neighbor\r\n        );\r\n        if (nodeNeighborLinkElement) {\r\n          nodeNeighborLinkElement.classList = '';\r\n        }\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      ordering: null,\r\n      node: null,\r\n      neighbor: null,\r\n      stack: null,\r\n      visited: null,\r\n      callStack: [],\r\n      activatedNode: null,\r\n      activatedLink: null,\r\n    });\r\n    if (this.state.stop) {\r\n      this.setState({ stop: false, pause: false });\r\n    }\r\n  };\r\n\r\n  renderTopsortPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'topsort-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>ToplogicalSort(G)</span>\r\n        </div>\r\n        <div id={'topsort-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let S be a stack</span>\r\n        </div>\r\n        <div id={'topsort-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let V be a map with all nodes as keys and values of null\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>For node of G</span>\r\n        </div>\r\n        <div id={'topsort-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>if V[node] is null</span>\r\n        </div>\r\n        <div id={'topsort-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            if visit(node, G, S, V) is false\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-7'}>\r\n          7<span style={{ marginLeft: indentation(5) }}>return null</span>\r\n        </div>\r\n        <div id={'topsort-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(2) }}>return S.reverse()</span>\r\n        </div>\r\n        <br></br>\r\n        <div id={'topsort-visit-1'}>\r\n          1\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            visit(node, G, S, V)\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            if V[node] == 'Complete'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-3'}>\r\n          3<span style={{ marginLeft: indentation(3) }}>return true</span>\r\n        </div>\r\n        <div id={'topsort-visit-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            if V[node] == 'In Progress'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-5'}>\r\n          5<span style={{ marginLeft: indentation(3) }}>return false</span>\r\n        </div>\r\n        <div id={'topsort-visit-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            V[node] = 'In Progress'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            for neighbor of node\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if visit(node, G, S, V) is false\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-9'}>\r\n          9<span style={{ marginLeft: indentation(4) }}>return false</span>\r\n        </div>\r\n        <div id={'topsort-visit-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(2) }}>S.push(node)</span>\r\n        </div>\r\n        <div id={'topsort-visit-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            V[node] = 'Complete'\r\n          </span>\r\n        </div>\r\n        <div id={'topsort-visit-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(2) }}>return true</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <Topsort\r\n            g={this.adjList}\r\n            getRunningAlg={this.state.runningAlg}\r\n            setRunningAlg={this.setRunningAlg}\r\n            updateAnimationQueue={this.updateAnimationQueue}\r\n            freshStart={this.freshStart}\r\n          />\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({\r\n                pause: false,\r\n                stop: true,\r\n                animationQueue: [],\r\n                runningAlg: null,\r\n              });\r\n              this.reset();\r\n            }}\r\n          >\r\n            Reset\r\n          </button>\r\n          <div className={'divider'}></div>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              this.setState({ pause: !this.state.pause, stepMode: false });\r\n            }}\r\n          >\r\n            {this.state.pause ? <FaPlay /> : <FaPause />}\r\n          </button>\r\n\r\n          <form onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) => {\r\n                  event.preventDefault();\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n            <label>Step: </label>\r\n\r\n            <button\r\n              onClick={() => {\r\n                let newStepIndex = this.state.stepIndex - 1;\r\n                while (\r\n                  !this.state.animationQueue[newStepIndex].highlightedLine\r\n                ) {\r\n                  newStepIndex -= 1;\r\n                }\r\n                this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepBackward />\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                let newStepIndex = this.state.stepIndex + 1;\r\n                while (\r\n                  !this.state.animationQueue[newStepIndex].highlightedLine\r\n                ) {\r\n                  newStepIndex += 1;\r\n                }\r\n                this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepForward />\r\n            </button>\r\n          </form>\r\n        </div>\r\n        {/* <div className={'col-6'} id={'output-tables'}> */}\r\n        <div className={'col-4'}>{this.renderTopsortPseudocode()}</div>\r\n        <div className={'col-4'}>\r\n          <Sidebar showButton={true}>\r\n            <li onClick={() => this.toggleClicked(0)}>\r\n              {this.state.ordering ? (\r\n                <RenderListComponent\r\n                  list={this.state.ordering}\r\n                  listName={'Return Value'}\r\n                  clicked={this.state.clicked[0]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            {this.state.currentNode ? (\r\n              <li> node = {this.state.currentNode} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n            {this.state.neighbor ? (\r\n              <li> neighbor = {this.state.neighbor} </li>\r\n            ) : (\r\n              ''\r\n            )}\r\n\r\n            <li onClick={() => this.toggleClicked(1)}>\r\n              {this.state.stack ? (\r\n                <RenderListComponent\r\n                  list={this.state.stack}\r\n                  listName={'S'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(2)}>\r\n              {this.state.visited ? (\r\n                <RenderObjectComponent\r\n                  obj={this.state.visited}\r\n                  objName={'V'}\r\n                  clicked={this.state.clicked[2]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n            <li onClick={() => this.toggleClicked(3)}>\r\n              {this.adjList ? (\r\n                <RenderObjectComponent\r\n                  obj={this.adjList}\r\n                  objName={'G'}\r\n                  clicked={this.state.clicked[3]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n\r\n            <li onClick={() => this.toggleClicked(4)}>\r\n              {this.state.callStack.length > 0 ? (\r\n                <RenderListComponent\r\n                  list={this.state.callStack}\r\n                  listName={'Call Stack'}\r\n                  clicked={this.state.clicked[4]}\r\n                />\r\n              ) : (\r\n                ''\r\n              )}\r\n            </li>\r\n          </Sidebar>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default DirectedGraphAlgorithms;\r\n","import * as d3 from 'd3';\r\n\r\n\r\nasync function createScatterplot(data) {\r\n  //modified from http://www.d3-graph-gallery.com, by Yan Holtz\r\n  // set the dimensions and margins of the graph\r\n  let margin = {top: 10, right: 30, bottom: 30, left: 60},\r\n  width = 600 - margin.left - margin.right,\r\n  height = 500 - margin.top - margin.bottom;\r\n\r\n  // append the svg object to the body of the page\r\n  let svg = d3.select(\"#graph-container\")\r\n    .append(\"svg\")\r\n    .attr(\"id\", \"scatter-svg\")\r\n    .attr(\"width\", width + margin.left + margin.right)\r\n    .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"id\", \"scatter-no-margin\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n\r\n  // Add X axis - animation start: 0 opacity\r\n  let x = d3.scaleLinear()\r\n    .domain([0, 0])\r\n    .range([0, width]);\r\n  \r\n  svg.append(\"g\")\r\n    .attr(\"class\", \"x-axis\")\r\n    .attr(\"transform\", \"translate(0,\" + height + \")\")\r\n    .call(d3.axisBottom(x))\r\n    .attr(\"opacity\", \"0\");\r\n\r\n  // Add Y axis\r\n  let y = d3.scaleLinear()\r\n    .domain([0, 7])\r\n    .range([height, 0]);\r\n  \r\n  svg.append(\"g\")\r\n    .call(d3.axisLeft(y));\r\n\r\n  // Add points\r\n  svg.append('g')\r\n    .selectAll(\"circle\")\r\n    .data(data)\r\n    .enter()\r\n    .append(\"circle\")\r\n      .attr(\"cx\", d => x(d.x))\r\n      .attr(\"cy\", d => y(d.y))\r\n      .attr(\"r\", 3)\r\n      .attr(\"stroke\", \"black\")\r\n      .attr(\"stroke-width\", 3)\r\n      //add an id to each point so we can grab it later and modify it\r\n      .attr(\"id\", d => `x:${parseFloat(d.x).toFixed(1)}-y:${parseFloat(d.y).toFixed(1)}`) //id: x:0.0-y:0.0\r\n      //initialize all clusters to black\r\n      .classed(\"cluster-unassigned\",true); \r\n\r\n  // Add new X axis - animation end: full opacity, transitioning to correct domain\r\n  x.domain([4, 8])\r\n  svg.select(\".x-axis\")\r\n    .transition()\r\n    .duration(2000)\r\n    .attr(\"opacity\", \"1\")\r\n    .call(d3.axisBottom(x));\r\n\r\n  //Animate each of the data points to their correct position using different delay\r\n  svg.selectAll(\"circle\")\r\n    .transition()\r\n    .delay((d,id) => id*3)\r\n    .duration(2000)\r\n    .attr(\"cx\", d => x(d.x))\r\n    .attr(\"cy\", d => y(d.y))\r\n\r\n\r\n}\r\n\r\n\r\nexport default createScatterplot;\r\n","import React, { Component } from 'react';\r\n\r\nclass KMeans extends Component {\r\n  \r\n  //runs k-means algo, adding to the animation queue at each step, lastly starting the animation\r\n  kmeans = async () => {\r\n    let animationQueue = [];\r\n    animationQueue.push({ lineNum: 0, centroids: null, closestCentroids: null, shouldInitCentroids: false});\r\n\r\n    const k = this.props.k;\r\n    //Randomly initialize cluster centroids\r\n    const randomPoints = this.getRandomElements(this.props.points, k);\r\n    //create a shallow copy of centroids (to make sure the assigned points don't change)\r\n    let centroids = [...randomPoints];\r\n    animationQueue.push({ lineNum: 1, centroids: [...centroids], closestCentroids: null, shouldInitCentroids: true });\r\n\r\n    //keep track of convergence\r\n    let hasConverged = false; \r\n    animationQueue.push({ lineNum: 2, shouldInitCentroids: false, hasConverged});\r\n\r\n    //closestCentroids[8] === point 8's closest cluster centroid\r\n    let closestCentroids = [];\r\n\r\n    //highlights the \"do\" line, snapshots initial centroids\r\n    animationQueue.push({ lineNum: 3, centroids: [...centroids], closestCentroids: [] });\r\n\r\n    // Main K-Means loop\r\n    do {\r\n      //assign points to clusters\r\n      closestCentroids = this.getClusterAssignments(this.props.points, centroids);\r\n      animationQueue.push({ lineNum: 4, closestCentroids: [...closestCentroids] });\r\n\r\n      let prevCentroids = [...centroids];\r\n      animationQueue.push({ lineNum: 5, centroids: [...centroids] });\r\n\r\n      this.updateCentroids(this.props.points, k, centroids, closestCentroids);\r\n      animationQueue.push({ lineNum: 6, centroids: [...centroids], hasConverged});\r\n\r\n      //Check convergence\r\n      hasConverged = prevCentroids.reduce(\r\n        (bool, currentCentroid, i) => (currentCentroid.x === centroids[i].x) && (currentCentroid.y === centroids[i].y),\r\n        true\r\n      );\r\n      animationQueue.push({ lineNum: 7, hasConverged});\r\n      animationQueue.push({ lineNum: 8, hasConverged});\r\n\r\n    } while (!hasConverged);\r\n    animationQueue.push({ lineNum: 9});\r\n\r\n    //kick off the main animation loop\r\n    this.props.renderAnimationQueue(animationQueue);\r\n  };\r\n\r\n  \r\n  getClusterAssignments(points, centroids) {\r\n    let closestCentroids = [];\r\n    points.forEach((point, i) => {\r\n      let distances = [];\r\n      centroids.forEach((centroid) => {\r\n        distances.push(\r\n          //calculate the Euclidean distance from each point to each centroid\r\n          Math.sqrt(\r\n            Math.pow(point.x - centroid.x, 2) +\r\n            Math.pow(point.y - centroid.y, 2)\r\n          )\r\n        );\r\n      });\r\n      //Set the closest centroid of the ith point to the minimum of all distances\r\n      closestCentroids[i] = distances.indexOf(Math.min(...distances));\r\n    });\r\n    return closestCentroids;\r\n  }\r\n\r\n  //Calculate new cluster centroids, which will be the mean of all points in that cluster\r\n  updateCentroids(points, k, centroids, closestCentroids) {\r\n    for (let cIndex = 0; cIndex < k; cIndex++) {\r\n      //clusterArray = [{x: \"1.2\", y: \"2\", closestCentroid: \"cIndex\"}, ...]\r\n      const clusterArray = points.filter(\r\n        (point, pointIndex) => closestCentroids[pointIndex] === cIndex\r\n      );\r\n\r\n      //calculate the mean in x and y directions\r\n      let mean = clusterArray.reduce(\r\n        (sum, currentPoint) => {\r\n          sum.x = Number(sum.x) + Number(currentPoint.x);\r\n          sum.y = Number(sum.y) + Number(currentPoint.y);\r\n          // console.log('current sum:', sum)\r\n          return sum;\r\n        },\r\n        { x: Number(0), y: Number(0) }\r\n      );\r\n      mean.x = mean.x / clusterArray.length;\r\n      mean.y = mean.y / clusterArray.length;\r\n\r\n      //update the centroid at cIndex\r\n      centroids[cIndex] = { x: mean.x, y: mean.y };\r\n\r\n    }\r\n  }\r\n\r\n  getRandomElements(arr, n) {\r\n    let result = new Array(n),\r\n      len = arr.length,\r\n      taken = new Array(len);\r\n    if (n > len)\r\n      throw new RangeError('getRandom: more elements taken than available');\r\n    while (n--) {\r\n      let x = Math.floor(Math.random() * len);\r\n      result[n] = arr[x in taken ? taken[x] : x];\r\n      taken[x] = --len in taken ? taken[len] : len;\r\n    }\r\n    return result;\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onClick={async () => {\r\n          await this.props.setRunningAlg('kmeans');\r\n          await this.props.toggleStop();\r\n          this.kmeans();\r\n        }}\r\n        disabled={this.props.getRunningAlg === 'kmeans'}\r\n      >\r\n        K-Means Clustering\r\n      </button>\r\n    );\r\n  }\r\n}\r\n\r\nexport default KMeans;\r\n","import React, { Component } from 'react';\r\nimport createScatterplot from '../graph-builders/scatterplot-builder';\r\nimport * as d3 from 'd3';\r\nimport KMeans from './algorithms/clustering-algorithms/KMeans';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay } from 'react-icons/fa';\r\n\r\nclass ClusteringAlgorithms extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: true,\r\n      stop: true,\r\n      isStepping: false,\r\n      speed: 1,\r\n      runningAlg: null,\r\n      k: 5,\r\n      points: [],\r\n      animationQueue: [],\r\n      stepIndex: 0\r\n    };\r\n  }\r\n\r\n  setPoints = (ps) => this.setState({points: ps});\r\n\r\n  async componentDidMount() {\r\n    //Load in the csv data points (2D) as an object\r\n    let x = await d3.csv(\r\n      'https://raw.githubusercontent.com/luaywadie/AmAlgorithms/master/visualizations-app/src/data/cluster_data.csv');\r\n    this.setState({points: x});\r\n      //imported from scatterplot-builder\r\n    createScatterplot(this.state.points);\r\n\r\n    this.scatter = document.getElementById('graph-container');\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    let svg = document.getElementById('scatter-svg');\r\n    if (this.scatter.hasChildNodes()) this.scatter.removeChild(svg);\r\n  }\r\n\r\n  reset = () => {\r\n    //Remove all centroids from the DOM\r\n    const centroidGroup = document.getElementById(\"centroid-group\");\r\n    centroidGroup.parentNode.removeChild(centroidGroup);\r\n\r\n    //Clear the class list of each circle on scatterplot (reset) and restore to 'unassigned' state\r\n    let circleElements = document.getElementsByTagName('circle');\r\n    for (let i = 0; i < circleElements.length; i++) {\r\n        //Remove the classes and reset the point to 'unassigned'\r\n        circleElements[i].setAttribute('class', '');\r\n        circleElements[i].classList.add('cluster-unassigned');\r\n      }\r\n    //Set state\r\n    this.setState({ pause: false });\r\n  };\r\n\r\n  setRunningAlg = (alg) => {\r\n    this.setState({ runningAlg: alg });\r\n  };\r\n\r\n\r\n  async wait() {\r\n    while (!this.state.isStepping && this.state.pause) {\r\n      await new Promise((r) => setTimeout(r, 100));\r\n    }\r\n  }\r\n\r\n  //main function for the animation\r\n  renderAnimationQueue = async (aq) => {\r\n    this.setState({ animationQueue: aq });\r\n\r\n    let waitTime = 1000;\r\n    this.setState({ stepIndex: 0 });\r\n    while (!this.state.stop) {\r\n      const currentStepIndex = this.state.stepIndex;\r\n      const currentLineNum = this.state.animationQueue[currentStepIndex].lineNum;\r\n      this.setState({ lineNum: currentLineNum });\r\n      this.toggleLineHighlight(currentLineNum);\r\n      //wait until a step button or the play button is pressed\r\n      await this.wait();\r\n      //should not wait between each step if in step mode\r\n      waitTime = this.state.isStepping ? 0 : 1000;\r\n      //wait for a moment while in play mode (dependent on the speed)\r\n      await new Promise((r) => setTimeout(r, waitTime / this.state.speed));\r\n      this.toggleLineHighlight(currentLineNum);\r\n      //line execution\r\n      //check if the user stepped backwards\r\n      if (this.state.stepIndex === currentStepIndex - 1) {\r\n        \r\n        if (currentStepIndex === 1) {\r\n          this.setState({ ...this.state.animationQueue[currentStepIndex - 1]});\r\n        }\r\n        //need to hide centroids from the plot if stepping back to line 1?\r\n        else {\r\n          //state needs to be reset to one line before the line we're stepping back to\r\n          this.setState({ ...this.state.animationQueue[currentStepIndex - 2]});\r\n        }\r\n      }\r\n      else {\r\n        //execute the currently highlighted line as normal\r\n        this.setState({ ...this.state.animationQueue[currentStepIndex]});\r\n      }\r\n      if(this.state.shouldInitCentroids) {\r\n        this.addCentroids();\r\n      }\r\n      if (this.state.closestCentroids && this.state.closestCentroids.length) {\r\n        this.colorPoints();\r\n      }\r\n      if (this.state.centroids && this.state.centroids.length) {\r\n        this.moveCentroids();\r\n      }\r\n      //if just executed the line before the DONE line (or somehow after the DONE line)\r\n      if (currentStepIndex >= this.state.animationQueue.length - 2) {\r\n        this.setState({ pause: true })\r\n      }\r\n      this.setState(\r\n        (this.state.isStepping) ?\r\n        {isStepping: !this.state.isStepping} :\r\n        {stepIndex: this.state.stepIndex + 1}\r\n      );\r\n    }\r\n  }\r\n  \r\n  // -----------------------------------------\r\n  // Helper functions for renderAnimationQueue\r\n  toggleLineHighlight(lineNum) {\r\n    let el = document.getElementById(this.state.runningAlg + '-' + lineNum);\r\n    if (el) el.classList.toggle('active-code-line');\r\n  }\r\n\r\n  addCentroids() {\r\n    // Create centroid container group\r\n    d3.select(\"#scatter-no-margin\")\r\n      .append(\"g\")\r\n      .attr(\"id\", \"centroid-group\")\r\n      .classed(\"centroid\", true);\r\n\r\n    // Add initial centroids to the plot\r\n    // Set the classes of the initialized centroid elements\r\n    d3.select(\"#centroid-group\")\r\n      .selectAll(\"circle\")\r\n      .data(this.state.centroids)\r\n      .enter()\r\n      .append(\"circle\")\r\n      .attr(\"cx\", (centroid) => this.scaleX(centroid.x))\r\n      .attr(\"cy\", (centroid) => this.scaleY(centroid.y))\r\n      .attr(\"r\", 10)\r\n      .attr(\"id\", (d, i) => `centroid${i}`)\r\n      .attr(\"class\", (d, i) => `cluster${i} centroid`);\r\n  }\r\n\r\n  colorPoints() {\r\n    this.state.points.forEach((point, index) => {\r\n      let pointElement = document.getElementById(\r\n        `x:${parseFloat(point.x).toFixed(1)}-y:${parseFloat(point.y).toFixed(1)}`\r\n      );\r\n      let pointClasses = pointElement.classList;\r\n      if (pointElement) {\r\n        //if it's the first iteration, remove 'unassigned' style\r\n        if (pointClasses.contains('cluster-unassigned')) {\r\n          pointClasses.remove('cluster-unassigned');\r\n        }\r\n        //otherwise, remove the current cluster color\r\n        else {\r\n          pointClasses.remove(pointClasses[0]);\r\n        }\r\n        //finally, add the color associated with the closest centroid\r\n        pointClasses.add(`cluster${this.state.closestCentroids[index]}`);\r\n      }\r\n    });\r\n  }\r\n\r\n  moveCentroids() {\r\n    for (let i = 0; i < this.state.k; ++i) {\r\n      this.moveIthCentroid(i, this.state.centroids[i]);\r\n    }\r\n  }\r\n\r\n  moveIthCentroid(i, centroid) {\r\n    d3.select(`#centroid${i}`)\r\n      .attr('cx', this.scaleX(centroid.x))\r\n      .attr('cy', this.scaleY(centroid.y));\r\n  }\r\n\r\n  //Scale point coordinates to fit on the scatter plot\r\n  scaleX = d3.scaleLinear()\r\n    .domain([4, 8])\r\n    .range([0, 510]);\r\n\r\n  scaleY = d3.scaleLinear()\r\n    .domain([0, 7])\r\n    .range([460, 0]);\r\n  // -----------------------------------------\r\n\r\n  renderKMeansPseudocode() {\r\n    function indentation(num) {\r\n      return num * 20;\r\n    }\r\n    return (\r\n      <div>\r\n        <div id={'kmeans-0'}>\r\n          0\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            kMeans(<i>points</i>, <i>k</i>):\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-1'}>\r\n          1\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            <i>centroids</i> ← choose <i>k</i> random points from <i>points</i>\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            <i>hasConverged</i> ← <b>false</b>\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            <b>do</b>\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            assignPointsToClosestClusterCentroids()\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            <i>previousCentroids</i> ← <i>centroids</i>\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            <i>centroids</i> ← calculateMeansOfClusters()\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            <i>hasConverged</i> ← <i>centroids</i> = <i>previousCentroids</i>\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            <b>while not</b> <i>hasConverged</i>\r\n          </span>\r\n        </div>\r\n        <div id={'kmeans-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            DONE\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={'row'}>\r\n          <div className={'col-6'} id={'graph-container'}>\r\n            <KMeans\r\n              points={this.state.points}\r\n              toggleStop={() => this.setState({ stop: !this.state.stop})}\r\n              speed={this.state.speed}\r\n              getRunningAlg={this.state.runningAlg}\r\n              setRunningAlg={this.setRunningAlg}\r\n              k={this.state.k}\r\n              setPoints={this.setPoints}\r\n              renderAnimationQueue={this.renderAnimationQueue}\r\n            />\r\n            <div className={'divider'}></div>\r\n            <button\r\n              className=\"graph-button\"\r\n              onClick={ async () => {\r\n                this.setState({pause: false, stop: true});\r\n                this.reset();\r\n              }}\r\n            >\r\n              Reset\r\n            </button>\r\n            <div className={'divider'}></div>\r\n            <button\r\n              onClick={() => {\r\n                if(this.state.stepIndex > 0) {\r\n                  this.setState({ stepIndex: this.state.stepIndex - 1, pause: true, isStepping: true });\r\n                }\r\n              }}\r\n            >\r\n              <FaStepBackward/>\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ pause: !this.state.pause, isStepping: false });\r\n              }}\r\n            >\r\n            {this.state.pause ? <FaPlay /> : <FaPause />}\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                if(this.state.stepIndex < this.state.animationQueue.length - 1) {\r\n                  this.setState({ stepIndex: this.state.stepIndex + 1, pause: true, isStepping: true });\r\n                }\r\n              }}\r\n            >\r\n              <FaStepForward/>\r\n            </button>\r\n            <form style={{display: \"inline-block\"}} onSubmit={(event) => event.preventDefault()}>\r\n            <label>\r\n              Number of Clusters (K):\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.k}\r\n                onChange={(event) =>\r\n                  this.setState({\r\n                    k: event.target.value,\r\n                  })\r\n                }\r\n                disabled={!this.state.stop}\r\n               max=\"9\"\r\n               min=\"1\"\r\n              />\r\n            </label>\r\n          </form>\r\n          <form style={{display: \"inline-block\"}} onSubmit={(event) => event.preventDefault()}>\r\n          <label>\r\n            Speed:\r\n            <input\r\n              style={{ width: '50px' }}\r\n              type=\"number\"\r\n              value={this.state.speed}\r\n              onChange={(event) =>\r\n                this.setState({\r\n                  speed: event.target.value,\r\n                })\r\n              }\r\n              max=\"50\"\r\n              min=\"1\"\r\n            />\r\n          </label>\r\n        </form>\r\n          </div>\r\n\r\n\r\n          <div className={'col-6'}>\r\n          <div className={'row'}>\r\n            {this.renderKMeansPseudocode()}\r\n          </div>\r\n        </div>\r\n\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ClusteringAlgorithms;\r\n","import * as d3 from 'd3';\r\n// const { bfs } = require('../helpers/data-structures/bfs_helper.js');\r\n\r\nconst margin = { top: 40, right: 90, bottom: 30, left: 0 };\r\nlet width = 900 - margin.left - margin.right;\r\nlet height = 900 - margin.top - margin.bottom;\r\nexport function buildTreeDataFromAdjList(adjList) {\r\n  let treeData = {};\r\n  let root = true;\r\n  for (let [node, children] of Object.entries(adjList)) {\r\n    if (root === true) {\r\n      treeData[node] = {\r\n        name: node,\r\n        value: 10,\r\n        type: 'black',\r\n        level: '',\r\n        children: [],\r\n      };\r\n      root = false;\r\n    }\r\n    for (let child of children) {\r\n      if (!treeData[child]) {\r\n        treeData[child] = {\r\n          name: child,\r\n          value: 10,\r\n          type: 'black',\r\n          level: '',\r\n          children: [],\r\n        };\r\n      }\r\n      if (!treeData[node]) {\r\n        treeData[node] = {\r\n          name: node,\r\n          value: 10,\r\n          type: 'black',\r\n          level: '',\r\n          children: [],\r\n        };\r\n      }\r\n      treeData[node].children.push(treeData[child]);\r\n    }\r\n  }\r\n\r\n  return treeData;\r\n}\r\nfunction getMin(adjList) {\r\n  let min = Infinity;\r\n  Object.keys(adjList).forEach((key) => {\r\n    if (Number(key) < min) {\r\n      min = Number(key);\r\n    }\r\n  });\r\n  return min;\r\n}\r\nexport function createDynamicTree(adjList) {\r\n  let min = getMin(adjList);\r\n  let treeData = buildTreeDataFromAdjList(adjList)[min];\r\n  let myScale = 1.5;\r\n\r\n  let treemap = d3.tree().size([height, width]);\r\n\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n\r\n  nodes = treemap(nodes);\r\n\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'heap-tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('class', 'circle-target-g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) =>\r\n        'node ' +\r\n        (d.children ? ' node--internal ' : ' node--leaf ') +\r\n        ' g-node-' +\r\n        d.data.name\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => 10)\r\n    .attr('class', (d) => 'node-' + d.data.name)\r\n    .attr('id', (d) => d.data.name);\r\n\r\n  // adds the text to the node\r\n  node\r\n    .append('text')\r\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n}\r\nexport function clearTree() {\r\n  let dataStructure = document.getElementById('graph-container');\r\n  let svg = document.getElementById('heap-tree-svg');\r\n  if (dataStructure && svg && dataStructure.hasChildNodes())\r\n    dataStructure.removeChild(svg);\r\n}\r\nexport function removeRootOfDynamicTree(parent, adjList) {\r\n  clearTree();\r\n\r\n  let treeData = buildTreeDataFromAdjList(adjList)[parent];\r\n  let myScale = 1.5;\r\n\r\n  // declares a tree layout and assigns the size\r\n  let treemap = d3.tree().size([height, width]);\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n  nodes = treemap(nodes);\r\n\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'heap-tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('class', 'circle-target-g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  g.selectAll('.link')\r\n    .data(nodes.descendants().slice(1))\r\n    .enter()\r\n    .append('path')\r\n    .attr(\r\n      'class',\r\n      (d) => `heap-link ${d.data.name}link heap-link-${d.data.name}`\r\n    )\r\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\r\n    .style('stroke', '#ccc')\r\n    .style('stroke-width', 2)\r\n    .attr('d', (d) => {\r\n      return (\r\n        'M' +\r\n        d.x / myScale +\r\n        ',' +\r\n        d.y / myScale +\r\n        'C' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.y / myScale +\r\n        ' ' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.parent.y / myScale +\r\n        ' ' +\r\n        d.parent.x / myScale +\r\n        ',' +\r\n        d.parent.y / myScale\r\n      );\r\n    });\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) =>\r\n        'node ' +\r\n        (d.children ? ' node--internal ' : ' node--leaf ') +\r\n        ' g-node-' +\r\n        d.data.name\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => 10)\r\n    .attr('class', (d) => 'node-' + d.data.name)\r\n    .attr('id', (d) => d.data.name);\r\n  node\r\n    .append('text')\r\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n  return;\r\n}\r\n\r\nexport function insertIntoDynamicTree(parent, adjList) {\r\n  clearTree();\r\n\r\n  let treeData = buildTreeDataFromAdjList(adjList)[parent];\r\n  let myScale = 1.5;\r\n\r\n  // declares a tree layout and assigns the size\r\n  let treemap = d3.tree().size([height, width]);\r\n  let nodes = d3.hierarchy(treeData, (d) => d.children);\r\n  nodes = treemap(nodes);\r\n\r\n  const svg = d3\r\n      .select('#graph-container')\r\n      .append('svg')\r\n      .attr('id', 'heap-tree-svg')\r\n      .attr('width', width + margin.left + margin.right)\r\n      .attr('height', height + margin.top + margin.bottom)\r\n      .attr('class', 'graph'),\r\n    g = svg\r\n      .append('g')\r\n      .attr('class', 'circle-target-g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  g.selectAll('.link')\r\n    .data(nodes.descendants().slice(1))\r\n    .enter()\r\n    .append('path')\r\n    .attr(\r\n      'class',\r\n      (d) => `heap-link ${d.data.name}link heap-link-${d.data.name}`\r\n    )\r\n    .attr('id', (d) => d.data.name + 'link') // d.parent.data.name + '-' + d.data.name\r\n    .style('stroke', '#ccc')\r\n    .style('stroke-width', 2)\r\n    .attr('d', (d) => {\r\n      return (\r\n        'M' +\r\n        d.x / myScale +\r\n        ',' +\r\n        d.y / myScale +\r\n        'C' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.y / myScale +\r\n        ' ' +\r\n        (d.x + d.parent.x) / myScale / 2 +\r\n        ',' +\r\n        d.parent.y / myScale +\r\n        ' ' +\r\n        d.parent.x / myScale +\r\n        ',' +\r\n        d.parent.y / myScale\r\n      );\r\n    });\r\n  const node = g\r\n    .selectAll('.node')\r\n    .data(nodes.descendants())\r\n    .enter()\r\n    .append('g')\r\n    .attr(\r\n      'class',\r\n      (d) =>\r\n        'node ' +\r\n        (d.children ? ' node--internal ' : ' node--leaf ') +\r\n        ' g-node-' +\r\n        d.data.name\r\n    )\r\n    .attr(\r\n      'transform',\r\n      (d) => 'translate(' + d.x / myScale + ',' + d.y / myScale + ')'\r\n    );\r\n  node\r\n    .append('circle')\r\n    .attr('r', (d) => 10)\r\n    .attr('class', (d) => 'node-' + d.data.name)\r\n    .attr('id', (d) => d.data.name);\r\n  node\r\n    .append('text')\r\n    .attr('class', (d) => 'node-' + d.data.name + '-text')\r\n    .attr('dy', '.35em')\r\n    .attr('x', (d) => (d.children ? (d.data.value + 5) * -1 : d.data.value + 5))\r\n    .attr('y', (d) =>\r\n      d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n    )\r\n    .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n    .text((d) => d.data.name);\r\n}\r\n\r\nexport function swap(p, c) {\r\n  let parentText = d3.select('.node-' + p + '-text');\r\n  let childText = d3.select('.node-' + c + '-text');\r\n  parentText.attr('class', 'node-' + c + '-text');\r\n  childText.attr('class', 'node-' + p + '-text');\r\n  parentText.text(c);\r\n  childText.text(p);\r\n\r\n  let parentCircle = d3.select('.node-' + p);\r\n  let childCircle = d3.select('.node-' + c);\r\n  parentCircle.attr('class', 'node-' + c);\r\n  childCircle.attr('class', 'node-' + p);\r\n  parentCircle.attr('id', c);\r\n  childCircle.attr('id', p);\r\n\r\n  let parentG = d3.select('.g-node-' + p);\r\n  let childG = d3.select('.g-node-' + c);\r\n  parentG.attr('class', 'node  node--internal  g-node-' + c);\r\n  childG.attr('class', 'node  node--internal  g-node-' + p);\r\n\r\n  let childLink = d3.select('.heap-link-' + c);\r\n  childLink.attr('class', `heap-link ${p}link heap-link- + ${p}`);\r\n  childLink.attr('id', p + 'link');\r\n\r\n  let parentLink = d3.select('.heap-link-' + p);\r\n  parentLink.attr('class', `heap-link ${c}link heap-link-${c}`);\r\n  parentLink.attr('id', c + 'link');\r\n}\r\n\r\n// Animations\r\n\r\n// let bfsA = bfs(adjList, min);\r\n// let totalDelay = 0;\r\n// bfsA.forEach((key, i) => {\r\n//   let prevDelay = totalDelay;\r\n//   d3.select('.heap-link-' + key)\r\n//     .transition()\r\n//     .duration(100)\r\n//     .delay(() => {\r\n//       totalDelay += 1000;\r\n//       return totalDelay;\r\n//     })\r\n//     .attr('stroke', '#ccc');\r\n//   d3.select('.node-' + key)\r\n//     .transition()\r\n//     .duration(100)\r\n//     .delay(() => prevDelay + 1000)\r\n//     .attr('r', () => 10);\r\n\r\n//   d3.select('.g-node-' + key)\r\n//     .append('text')\r\n//     .transition()\r\n//     .duration(100)\r\n//     .delay(() => prevDelay + 1000)\r\n//     .attr('dy', '.35em')\r\n//     .attr('x', (d) =>\r\n//       d.children ? (d.data.value + 5) * -1 : d.data.value + 5\r\n//     )\r\n//     .attr('y', (d) =>\r\n//       d.children && d.depth !== 0 ? -(d.data.value + 5) : d.data.value\r\n//     )\r\n//     .style('text-anchor', (d) => (d.children ? 'end' : 'start'))\r\n//     .text((d) => d.data.name);\r\n// });\r\n","import React, { Component } from 'react';\r\nimport {\r\n  insertIntoDynamicTree,\r\n  swap,\r\n  createDynamicTree,\r\n  removeRootOfDynamicTree,\r\n  clearTree,\r\n} from '../../graph-builders/dynamic-tree-builder';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay } from 'react-icons/fa';\r\n\r\nimport Sidebar from '../sidebar/Sidebar';\r\n\r\nimport RenderListComponent from '../sidebar/RenderListComponent';\r\n\r\nclass Heap extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.sample = [9, 11, 24, 13, 35, 25, 61, 17, 48, 91];\r\n    this.h = [0];\r\n    this.state = {\r\n      inputList: [],\r\n      heapA: [0],\r\n      inputNum: '',\r\n      executing: false,\r\n      pause: false,\r\n      size: 0,\r\n      parentIndex: null,\r\n      currentIndex: null,\r\n      clicked: [false, false, false],\r\n      newElement: null,\r\n      removedRoot: null,\r\n      inserting: false,\r\n      removingRoot: false,\r\n      childIndex: null,\r\n      leftChild: null,\r\n      rightChild: null,\r\n      animationQueue: [],\r\n      stepIndex: 0,\r\n      stepMode: false,\r\n      speed: 1,\r\n    };\r\n    this.animationQueue = [];\r\n    this.unMounting = false;\r\n    this.adjList = {};\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    if (this.state.inputList.length === 0) {\r\n      this.buildSampleHeap();\r\n    }\r\n    this.dataStructure = document.getElementById('graph-container');\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    this.unMounting = true;\r\n    this.setState({ animationQueue: [] });\r\n    let svg = document.getElementById('heap-tree-svg');\r\n    if (this.dataStructure.hasChildNodes() && svg)\r\n      this.dataStructure.removeChild(svg);\r\n  }\r\n\r\n  async buildSampleHeap() {\r\n    clearTree();\r\n    this.h = this.sample;\r\n    await this.setState({\r\n      inputList: this.sample,\r\n      heapA: this.h,\r\n    });\r\n    this.setState({ size: this.sample[0] });\r\n    this.convertHeapArrayToAdjList(this.h);\r\n    insertIntoDynamicTree(this.h[1], this.adjList);\r\n  }\r\n\r\n  async clearHeap() {\r\n    await this.setState({ inputList: [], heapA: [0], animationQueue: [] });\r\n    this.h = [0];\r\n    this.setState({ size: 0 });\r\n    this.adjList = {};\r\n    this.clearPseudocode();\r\n    clearTree();\r\n  }\r\n\r\n  handleInsertButton = async () => {\r\n    let newNode = this.state.inputNum;\r\n    await this.setState({\r\n      inputList: [...this.state.inputList, Number(this.state.inputNum)],\r\n      inputNum: '',\r\n      executing: true,\r\n    });\r\n    await this.insert(newNode);\r\n    if (this.state.inputList.length === 1) {\r\n      this.convertHeapArrayToAdjList(this.h);\r\n      createDynamicTree(this.adjList);\r\n    }\r\n    await this.setState({\r\n      animationQueue: this.animationQueue,\r\n    });\r\n    this.animationQueue = [];\r\n  };\r\n\r\n  async renderAnimationQueue() {\r\n    await this.setState({ stepIndex: 0 });\r\n    let shouldWait = true;\r\n    while (this.state.stepIndex < this.state.animationQueue.length) {\r\n      let currentState = this.state.animationQueue[this.state.stepIndex];\r\n\r\n      this.highlightLine(currentState.highlightedLine);\r\n\r\n      let waitTime =\r\n        currentState.waitTime !== undefined ? currentState.waitTime : 1000;\r\n\r\n      if (!shouldWait) {\r\n        waitTime = 0;\r\n      }\r\n\r\n      await new Promise((r) => setTimeout(r, waitTime / this.state.speed));\r\n      await this.checkPauseStatus();\r\n\r\n      if (!currentState.keepLineHighlighted) {\r\n        this.removeHighlightedLine(currentState.highlightedLine);\r\n      }\r\n      if (currentState.removeKeptHighlightedLine) {\r\n        this.removeHighlightedLine(currentState.removeKeptHighlightedLine);\r\n      }\r\n\r\n      await this.setState({ ...currentState });\r\n\r\n      if (currentState.activateChildAndParent) {\r\n        this.activateChildAndParent(\r\n          currentState.activateChildAndParent[0],\r\n          currentState.activateChildAndParent[1]\r\n        );\r\n      }\r\n\r\n      this.activateParent(currentState.activateParent);\r\n      this.deActivateParent(currentState.deActivateParent);\r\n\r\n      if (currentState.activateLeftAndRightChildren) {\r\n        this.activateLeftAndRightChildren(\r\n          currentState.activateLeftAndRightChildren[0],\r\n          currentState.activateLeftAndRightChildren[1]\r\n        );\r\n      }\r\n\r\n      if (currentState.deActivateLeftAndRightChildren) {\r\n        this.deActivateLeftAndRightChildren(\r\n          currentState.deActivateLeftAndRightChildren[0],\r\n          currentState.deActivateLeftAndRightChildren[1]\r\n        );\r\n      }\r\n\r\n      if (currentState.swap) {\r\n        swap(currentState.swap[0], currentState.swap[1]);\r\n      }\r\n\r\n      if (currentState.removeActiveChildParent) {\r\n        this.removeActiveChildParent(\r\n          currentState.removeActiveChildParent[0],\r\n          currentState.removeActiveChildParent[1]\r\n        );\r\n      }\r\n      this.activateLink(currentState.activatedLink);\r\n      this.deActivateLink(currentState.deActivateLink);\r\n\r\n      if (!this.state.stepMode) {\r\n        this.setState({ stepIndex: this.state.stepIndex + 1 });\r\n        shouldWait = true;\r\n      } else {\r\n        // need to reset everything up to the previous state starting from beggining since we only update what is neccessary at each element of the animation queue\r\n\r\n        this.setState({\r\n          stepMode: false,\r\n          pause: true,\r\n        });\r\n        this.convertHeapArrayToAdjList(this.state.heapA);\r\n        insertIntoDynamicTree(this.state.heapA[1], this.adjList);\r\n        for (let i = 0; i < this.state.stepIndex; i++) {\r\n          let prevState = this.state.animationQueue[i];\r\n          this.setState({ ...prevState });\r\n\r\n          if (prevState.activateChildAndParent) {\r\n            this.activateChildAndParent(\r\n              prevState.activateChildAndParent[0],\r\n              prevState.activateChildAndParent[1]\r\n            );\r\n          }\r\n\r\n          if (prevState.removeActiveChildParent) {\r\n            this.removeActiveChildParent(\r\n              prevState.removeActiveChildParent[0],\r\n              prevState.removeActiveChildParent[1]\r\n            );\r\n          }\r\n\r\n          this.activateLink(prevState.activatedLink);\r\n          this.deActivateLink(prevState.deActivateLink);\r\n\r\n          if (prevState.keepLineHighlighted) {\r\n            this.highlightLine(prevState.highlightedLine);\r\n          }\r\n          if (prevState.removeKeptHighlightedLine) {\r\n            this.removeHighlightedLine(prevState.removeKeptHighlightedLine);\r\n          }\r\n        }\r\n        shouldWait = false;\r\n      }\r\n    }\r\n    this.setState({ animationQueue: [], pause: false, executing: false });\r\n  }\r\n\r\n  insert(e) {\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-insert-1',\r\n      newElement: e,\r\n    });\r\n    this.h[0] = this.state.size + 1;\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-insert-2',\r\n      size: this.h[0],\r\n      heapA: [...this.h],\r\n    });\r\n\r\n    this.h[this.h[0]] = e;\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-insert-3',\r\n      heapA: [...this.h],\r\n    });\r\n\r\n    this.convertHeapArrayToAdjList(this.h);\r\n    if (this.h[0] !== 1) {\r\n      insertIntoDynamicTree(this.h[1], this.adjList);\r\n    }\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-insert-4',\r\n      keepLineHighlighted: true,\r\n    });\r\n\r\n    this.fixUp();\r\n    this.animationQueue.push({\r\n      removeKeptHighlightedLine: 'Heap-insert-4',\r\n      newElement: null,\r\n      animationQueue: this.animationQueue,\r\n    });\r\n  }\r\n  fixUp() {\r\n    this.animationQueue.push({ highlightedLine: 'Heap-fixup-1' });\r\n\r\n    let currentIndex = this.h[0];\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-fixup-2',\r\n      currentIndex: currentIndex,\r\n    });\r\n\r\n    if (currentIndex <= 1) {\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixup-3',\r\n        currentIndex: null,\r\n      });\r\n    }\r\n    while (currentIndex > 1) {\r\n      this.animationQueue.push({ highlightedLine: 'Heap-fixup-3' });\r\n\r\n      let parentIndex = Math.floor(currentIndex / 2);\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixup-4',\r\n        parentIndex: parentIndex,\r\n        activateChildAndParent: [this.h[currentIndex], this.h[parentIndex]],\r\n      });\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixup-5',\r\n        removeActiveChildParent: [this.h[currentIndex], this.h[parentIndex]],\r\n        activatedLink: this.h[currentIndex],\r\n      });\r\n\r\n      if (this.h[parentIndex] > this.h[currentIndex]) {\r\n        let temp = this.h[parentIndex];\r\n        this.h[parentIndex] = this.h[currentIndex];\r\n        this.h[currentIndex] = temp;\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 'Heap-fixup-6',\r\n\r\n          removeActiveChildParent: [this.h[parentIndex], this.h[currentIndex]],\r\n          heapA: [...this.h],\r\n          swap: [this.h[parentIndex], this.h[currentIndex]],\r\n        });\r\n\r\n        currentIndex = parentIndex;\r\n        this.animationQueue.push({\r\n          highlightedLine: 'Heap-fixup-7',\r\n          deActivateLink: this.h[currentIndex],\r\n          currentIndex: currentIndex,\r\n        });\r\n      } else {\r\n        this.animationQueue.push({ highlightedLine: 'Heap-fixup-8' });\r\n        break;\r\n      }\r\n      this.animationQueue.push({ waitTime: 0, parentIndex: null });\r\n    }\r\n    this.animationQueue.push({\r\n      waitTime: 0,\r\n      parentIndex: null,\r\n      currentIndex: null,\r\n    });\r\n  }\r\n\r\n  async removeRoot() {\r\n    await this.setState({ executing: true });\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-removeRoot-1',\r\n    });\r\n\r\n    let smallest = this.h[1];\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-removeRoot-2',\r\n      removedRoot: smallest,\r\n    });\r\n\r\n    let updatedList = this.state.inputList.filter((e) => e !== smallest);\r\n    updatedList[0] -= 1;\r\n\r\n    this.h[1] = this.h.pop();\r\n\r\n    this.h[0] = this.state.size - 1;\r\n    await this.setState({\r\n      size: this.state.size - 1,\r\n      heapA: [...this.h],\r\n      inputList: updatedList,\r\n    });\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-removeRoot-3',\r\n      heapA: [...this.h],\r\n    });\r\n\r\n    if (this.state.size === 0) {\r\n      this.h = this.h.slice(0, 1);\r\n    }\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-removeRoot-4',\r\n      heapA: [...this.h],\r\n      inputList: updatedList,\r\n    });\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-removeRoot-5',\r\n      keepLineHighlighted: true,\r\n    });\r\n\r\n    if (this.state.size === 0) {\r\n      clearTree();\r\n    } else {\r\n      this.convertHeapArrayToAdjList([...this.h]);\r\n      removeRootOfDynamicTree(this.h[1], this.adjList);\r\n      await this.fixDown();\r\n    }\r\n\r\n    this.animationQueue.push({\r\n      removeKeptHighlightedLine: 'Heap-removeRoot-5',\r\n    });\r\n\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-removeRoot-6',\r\n      removedRoot: null,\r\n    });\r\n\r\n    await this.setState({\r\n      animationQueue: this.animationQueue,\r\n    });\r\n    this.animationQueue = [];\r\n\r\n    return smallest;\r\n  }\r\n  async fixDown() {\r\n    this.animationQueue.push({ highlightedLine: 'Heap-fixdown-1' });\r\n\r\n    let currentIndex = 1;\r\n    this.animationQueue.push({\r\n      highlightedLine: 'Heap-fixdown-2',\r\n      currentIndex: currentIndex,\r\n    });\r\n\r\n    if (currentIndex * 2 > this.state.size) {\r\n      this.animationQueue.push({ highlightedLine: 'Heap-fixdown-3' });\r\n    }\r\n    while (currentIndex * 2 <= this.state.size) {\r\n      this.animationQueue.push({ highlightedLine: 'Heap-fixdown-3' });\r\n\r\n      let childIndex = currentIndex * 2;\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixdown-4',\r\n        childIndex: childIndex,\r\n        activateParent: this.h[currentIndex],\r\n      });\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixdown-4',\r\n        childIndex: childIndex,\r\n        activateParent: this.h[currentIndex],\r\n        activateLeftAndRightChildren: [\r\n          this.h[childIndex],\r\n          this.h[childIndex + 1],\r\n        ],\r\n        leftChild: this.h[childIndex],\r\n        rightChild: this.h[childIndex + 1],\r\n      });\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixdown-56',\r\n      });\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixdown-7',\r\n        deActivateParent: this.h[currentIndex],\r\n        deActivateLeftAndRightChildren: [\r\n          this.h[childIndex],\r\n          this.h[childIndex + 1],\r\n        ],\r\n      });\r\n\r\n      if (this.h[childIndex] > this.h[childIndex + 1]) {\r\n        childIndex += 1;\r\n        this.animationQueue.push({\r\n          highlightedLine: 'Heap-fixdown-8',\r\n          childIndex: childIndex,\r\n        });\r\n      }\r\n\r\n      this.animationQueue.push({\r\n        waitTime: 0,\r\n        activateChildAndParent: [this.h[childIndex], this.h[currentIndex]],\r\n      });\r\n\r\n      this.animationQueue.push({\r\n        highlightedLine: 'Heap-fixdown-9',\r\n        removeActiveChildParent: [this.h[childIndex], this.h[currentIndex]],\r\n        activatedLink: this.h[childIndex],\r\n      });\r\n\r\n      if (this.h[currentIndex] > this.h[childIndex]) {\r\n        let temp = this.h[childIndex];\r\n        this.h[childIndex] = this.h[currentIndex];\r\n        this.h[currentIndex] = temp;\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 'Heap-fixdown-10',\r\n\r\n          heapA: [...this.h],\r\n          swap: [this.h[currentIndex], this.h[childIndex]],\r\n        });\r\n\r\n        this.animationQueue.push({\r\n          waitTime: 0,\r\n          deActivateLink: this.h[currentIndex],\r\n        });\r\n\r\n        currentIndex = childIndex;\r\n\r\n        this.animationQueue.push({\r\n          highlightedLine: 'Heap-fixdown-11',\r\n          currentIndex: currentIndex,\r\n          childIndex: null,\r\n          leftChild: null,\r\n          rightChild: null,\r\n        });\r\n      } else {\r\n        this.animationQueue.push({\r\n          highlightedLine: 'Heap-fixdown-12',\r\n        });\r\n        break;\r\n      }\r\n      this.animationQueue.push({\r\n        childIndex: null,\r\n        leftChild: null,\r\n        rightChild: null,\r\n        waitTime: 0,\r\n      });\r\n    }\r\n    this.animationQueue.push({\r\n      currentIndex: null,\r\n      childIndex: null,\r\n      leftChild: null,\r\n      rightChild: null,\r\n      waitTime: 0,\r\n    });\r\n  }\r\n\r\n  convertHeapArrayToAdjList = (a) => {\r\n    let adjList = {};\r\n\r\n    for (let i = 1; i <= a[0]; i++) {\r\n      let parent = a[i];\r\n      if (adjList[parent]) {\r\n        continue;\r\n      }\r\n      let leftChild = a[i * 2];\r\n      let rightChild = a[i * 2 + 1];\r\n      let children = [];\r\n      if (leftChild) {\r\n        children.push(leftChild);\r\n      }\r\n      if (rightChild) {\r\n        children.push(rightChild);\r\n      }\r\n      adjList[parent] = children;\r\n    }\r\n    this.adjList = adjList;\r\n    return this.adjList;\r\n  };\r\n  toggleClicked = (i) => {\r\n    let a = this.state.clicked.slice();\r\n    a[i] = !a[i];\r\n    this.setState({\r\n      clicked: a,\r\n    });\r\n  };\r\n  activateLeftAndRightChildren(leftChild, rightChild) {\r\n    let leftChildElement = document.getElementsByClassName(\r\n      'node-' + leftChild\r\n    )[0];\r\n    if (leftChildElement) {\r\n      leftChildElement.classList.add('left-right-child-node');\r\n    }\r\n\r\n    let rightChildElement = document.getElementsByClassName(\r\n      'node-' + rightChild\r\n    )[0];\r\n    if (rightChildElement) {\r\n      rightChildElement.classList.add('left-right-child-node');\r\n    }\r\n  }\r\n\r\n  deActivateLeftAndRightChildren(leftChild, rightChild) {\r\n    let leftChildElement = document.getElementsByClassName(\r\n      'node-' + leftChild\r\n    )[0];\r\n    if (leftChildElement) {\r\n      leftChildElement.classList.remove('left-right-child-node');\r\n    }\r\n\r\n    let rightChildElement = document.getElementsByClassName(\r\n      'node-' + rightChild\r\n    )[0];\r\n    if (rightChildElement) {\r\n      rightChildElement.classList.remove('left-right-child-node');\r\n    }\r\n  }\r\n\r\n  activateParent(parent) {\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    if (parentElement) parentElement.classList.add('parent-node');\r\n  }\r\n\r\n  deActivateParent(parent) {\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    if (parentElement) parentElement.classList.remove('parent-node');\r\n  }\r\n\r\n  activateChildAndParent(child, parent) {\r\n    let childElement = document.getElementsByClassName('node-' + child)[0];\r\n    if (childElement) childElement.classList.add('child-node');\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    if (parentElement) parentElement.classList.add('parent-node');\r\n  }\r\n\r\n  removeActiveChildParent(child, parent) {\r\n    let childElement = document.getElementsByClassName('node-' + child)[0];\r\n    let parentElement = document.getElementsByClassName('node-' + parent)[0];\r\n    let childLinkElement = document.getElementById(child + 'link');\r\n    if (childElement) childElement.classList.remove('child-node');\r\n    if (parentElement) parentElement.classList.remove('parent-node');\r\n    if (childLinkElement) childLinkElement.classList.remove('fade-in-out-link');\r\n  }\r\n\r\n  activateLink(child) {\r\n    let childLinkElement = document.getElementById(child + 'link');\r\n    if (childLinkElement) childLinkElement.classList.add('fade-in-out-link');\r\n  }\r\n  deActivateLink(child) {\r\n    let childLinkElement = document.getElementById(child + 'link');\r\n    if (childLinkElement) childLinkElement.classList.remove('fade-in-out-link');\r\n  }\r\n  async checkPauseStatus() {\r\n    while (this.state.pause && !this.state.stepMode) {\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      continue;\r\n    }\r\n  }\r\n  clearPseudocode() {\r\n    for (let i = 1; i < 13; i++) {\r\n      let insertEl = document.getElementById('Heap-insert-' + i);\r\n      if (insertEl) insertEl.classList = '';\r\n      let fixupEl = document.getElementById('Heap-fixup-' + i);\r\n      if (fixupEl) fixupEl.classList = '';\r\n      let removeRootEl = document.getElementById('Heap-removeRoot-' + i);\r\n      if (removeRootEl) removeRootEl.classList = '';\r\n      let fixdownEl = document.getElementById('Heap-fixdown-' + i);\r\n      if (fixdownEl) fixdownEl.classList = '';\r\n    }\r\n  }\r\n\r\n  formatInsertButtonText() {\r\n    let linkText = '';\r\n    if (this.state.inputList.includes(this.state.inputNum)) {\r\n      linkText = 'No Duplicates';\r\n    } else if (this.state.executing) {\r\n      linkText = 'Executing...';\r\n    } else {\r\n      linkText = 'Insert';\r\n    }\r\n    return linkText;\r\n  }\r\n\r\n  renderHeapClassPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Heap-class-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Class Heap</span>\r\n        </div>\r\n        <div id={'Heap-class-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let h be an array</span>\r\n        </div>\r\n        <div id={'Heap-class-3'}>\r\n          3<span style={{ marginLeft: indentation(2) }}>let size be 0</span>\r\n        </div>\r\n        <div id={'Heap-class-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let the first element of h always be size\r\n          </span>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderInsertPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Heap-insert-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Insert(element)</span>\r\n        </div>\r\n        <div id={'Heap-insert-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let h[0] be size + 1\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-insert-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            insert element at end of h\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-insert-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>call fixUp()</span>\r\n        </div>\r\n        <br></br>\r\n        <div id={'Heap-fixup-1'}>\r\n          1<span style={{ marginLeft: indentation(2) }}>fixUp()</span>\r\n        </div>\r\n        <div id={'Heap-fixup-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let currentIndex be size\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while currentIndex {'>'} 0\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            let parentIndex be (currentIndex // 2)\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if h[parentIndex] {'>'} h[currentIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-6'}>\r\n          6\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            swap h[parentIndex] with h[currentIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            let currentIndex be parentIndex\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixup-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            else break out of loop\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderRemoveRootPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Heap-removeRoot-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>removeRoot()</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-2'}>\r\n          2<span style={{ marginLeft: indentation(2) }}>let min be h[1]</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            h[1] = largest node (removed from end of h)\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>h[0] = size - 1</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>fixDown()</span>\r\n        </div>\r\n        <div id={'Heap-removeRoot-6'}>\r\n          6<span style={{ marginLeft: indentation(2) }}>return min</span>\r\n        </div>\r\n        <br></br>\r\n        <div id={'Heap-fixdown-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>fixDown()</span>\r\n        </div>\r\n        <div id={'Heap-fixdown-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            let currentIndex be 1\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            while (currentIndex * 2) {'<'} size\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            let childIndex be currentIndex * 2\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-56'}>\r\n          <div>\r\n            5\r\n            <span style={{ marginLeft: indentation(3) }}>\r\n              let leftChild be h[currentIndex]\r\n            </span>\r\n          </div>\r\n          <div>\r\n            6\r\n            <span style={{ marginLeft: indentation(3) }}>\r\n              let rightChild be h[currentIndex+1]\r\n            </span>\r\n          </div>\r\n        </div>\r\n        {/* <div id={'Heap-fixdown-6'}></div> */}\r\n        <div id={'Heap-fixdown-7'}>\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if leftChild {'>'} rightChild\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-8'}>\r\n          8\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            let childIndex = childIndex + 1\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-9'}>\r\n          9\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            if h[currentIndex] {'>'} h[childIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-10'}>\r\n          10\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            swap h[currentIndex] with h[childIndex]\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-11'}>\r\n          11\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            {' '}\r\n            currentIndex = childIndex\r\n          </span>\r\n        </div>\r\n        <div id={'Heap-fixdown-12'}>\r\n          12\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            else break out of loop\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  highlightLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.add('active-code-line');\r\n  }\r\n  removeHighlightedLine(classId) {\r\n    let el = document.getElementById(classId);\r\n    if (el) el.classList.remove('active-code-line');\r\n  }\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-4'} id={'graph-container'}>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n            }}\r\n          >\r\n            <label>Add a node:</label>\r\n\r\n            <input\r\n              style={{ width: '50px' }}\r\n              type=\"text\"\r\n              value={this.state.inputNum}\r\n              onChange={async (event) => {\r\n                await this.setState({\r\n                  inputNum: Number(event.target.value),\r\n                });\r\n              }}\r\n            />\r\n            <button\r\n              type=\"submit\"\r\n              disabled={\r\n                this.state.inputList.includes(Number(this.state.inputNum)) ||\r\n                this.state.executing\r\n              }\r\n              onClick={async () => {\r\n                this.setState({\r\n                  removingRoot: false,\r\n                  inserting: true,\r\n                  pause: false,\r\n                });\r\n                await this.handleInsertButton();\r\n                await this.renderAnimationQueue();\r\n              }}\r\n            >\r\n              {this.formatInsertButtonText()}\r\n            </button>\r\n            <button\r\n              disabled={this.state.heapA.length <= 1 || this.state.executing}\r\n              onClick={async () => {\r\n                this.setState({\r\n                  removingRoot: true,\r\n                  inserting: false,\r\n                  pause: false,\r\n                });\r\n                await this.removeRoot();\r\n                await this.renderAnimationQueue();\r\n              }}\r\n            >\r\n              {this.state.executing ? 'Executing...' : 'Remove Root'}\r\n            </button>\r\n            <button\r\n              disabled={this.state.executing}\r\n              onClick={() => {\r\n                this.buildSampleHeap();\r\n              }}\r\n            >\r\n              {this.state.executing ? 'Executing...' : 'Sample Heap'}\r\n            </button>\r\n            <button\r\n              className=\"graph-button\"\r\n              onClick={() => {\r\n                this.setState({ pause: !this.state.pause, stepMode: false });\r\n              }}\r\n            >\r\n              {this.state.pause ? <FaPlay /> : <FaPause />}\r\n            </button>\r\n            <button\r\n              disabled={this.state.executing}\r\n              onClick={() => {\r\n                this.clearHeap();\r\n              }}\r\n            >\r\n              {this.state.executing ? 'Executing...' : 'Clear'}\r\n            </button>\r\n\r\n            <label>Step: </label>\r\n\r\n            <button\r\n              onClick={async () => {\r\n                let newStepIndex = this.state.stepIndex - 1;\r\n                while (\r\n                  newStepIndex >= 0 &&\r\n                  !this.state.animationQueue[newStepIndex].highlightedLine\r\n                ) {\r\n                  newStepIndex -= 1;\r\n                }\r\n                await this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepBackward />\r\n            </button>\r\n            <button\r\n              onClick={async () => {\r\n                let newStepIndex = this.state.stepIndex + 1;\r\n                while (\r\n                  newStepIndex < this.state.animationQueue.length &&\r\n                  !this.state.animationQueue[newStepIndex].highlightedLine\r\n                ) {\r\n                  newStepIndex += 1;\r\n                }\r\n                await this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepForward />\r\n            </button>\r\n            <label>\r\n              Speed:\r\n              <input\r\n                style={{ width: '50px' }}\r\n                type=\"number\"\r\n                value={this.state.speed}\r\n                onChange={(event) => {\r\n                  event.preventDefault();\r\n                  this.setState({\r\n                    speed: event.target.value,\r\n                  });\r\n                }}\r\n              />\r\n            </label>\r\n          </form>\r\n        </div>\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            {this.renderHeapClassPseudocode()}\r\n            {this.state.inserting ? this.renderInsertPseudocode() : ''}\r\n            {this.state.removingRoot ? this.renderRemoveRootPseudocode() : ''}\r\n          </div>\r\n        </div>\r\n        <div className={'col-4'}>\r\n          <div className={'row'}>\r\n            <Sidebar showButton={true}>\r\n              <li> size = {this.state.size} </li>\r\n              {this.state.newElement ? (\r\n                <li> element = {this.state.newElement} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.state.removedRoot ? (\r\n                <li> min = {this.state.removedRoot} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.currentIndex ? (\r\n                <li> currentIndex = {this.state.currentIndex} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.parentIndex ? (\r\n                <li> parentIndex = {this.state.parentIndex} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.state.childIndex ? (\r\n                <li> childIndex = {this.state.childIndex} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              {this.state.leftChild ? (\r\n                <li> leftChild = {this.state.leftChild} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {this.state.rightChild ? (\r\n                <li> rightChild = {this.state.rightChild} </li>\r\n              ) : (\r\n                ''\r\n              )}\r\n\r\n              <li onClick={() => this.toggleClicked(0)}>\r\n                <RenderListComponent\r\n                  list={this.state.heapA}\r\n                  listName={'h'}\r\n                  clicked={this.state.clicked[0]}\r\n                />\r\n              </li>\r\n              <li onClick={() => this.toggleClicked(1)}>\r\n                <RenderListComponent\r\n                  list={this.state.inputList}\r\n                  listName={'inputList'}\r\n                  clicked={this.state.clicked[1]}\r\n                />\r\n              </li>\r\n            </Sidebar>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Heap;\r\n\r\n// renderHeapTableData() {\r\n//   return this.state.heapA.map((node, i) => {\r\n//     return (\r\n//       <td key={i} style={{ backgroundColor: i === 1 ? 'yellow' : '' }}>\r\n//         {node}\r\n//       </td>\r\n//     );\r\n//   });\r\n// }\r\n\r\n// renderHeapHeading() {\r\n//   return (\r\n//     <tr>\r\n//       <th>size</th>\r\n//     </tr>\r\n//   );\r\n// }\r\n\r\n// renderInputListTableData() {\r\n//   return this.state.inputList.map((node) => {\r\n//     return <td key={node}>{node}</td>;\r\n//   });\r\n// }\r\n\r\n/* <div className={'row'}>\r\n            <h4>Heap Array</h4>\r\n          </div>\r\n          <div className={'row'}>\r\n            <table id={'heap-table'} className={'float-left'}>\r\n              <tbody>\r\n                {this.renderHeapHeading()}\r\n                <tr>{this.renderHeapTableData()}</tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n          <div className={'row'}>\r\n            <h5 id={'root-extracted'}> </h5>\r\n          </div>\r\n          <div className={'row'}>\r\n            <h4>Input List</h4>\r\n          </div>\r\n          <div className={'row'}>\r\n            <table id={'input-list-table'} className={'float-left'}>\r\n              <tbody>\r\n                <tr>{this.renderInputListTableData()}</tr>\r\n              </tbody>\r\n            </table>\r\n          </div> */\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass Stack extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [3, 2, 7, 4, 9, 10],\r\n      top: 5,\r\n      capacity: 6,\r\n      inputNum: '',\r\n      didPop: false,\r\n      didPush: false,\r\n      poppedVal: null,\r\n    };\r\n  }\r\n\r\n  push(element) {\r\n    if (element !== null) {\r\n      this.state.data.push(element);\r\n      this.setState({ data: this.state.data, top: this.state.top + 1 });\r\n      this.createStack();\r\n    }\r\n  }\r\n\r\n  pop() {\r\n    if (this.isEmpty() === false) {\r\n      let val = this.state.data.pop();\r\n      this.setState({\r\n        data: this.state.data,\r\n        top: this.state.top - 1,\r\n        poppedVal: val,\r\n      });\r\n      d3.selectAll(\"rect[id='\" + this.state.data.length + \"']\").remove();\r\n      d3.selectAll(\"text[id='\" + this.state.data.length + \"']\").remove();\r\n      this.createStack();\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    d3.selectAll('#svg-container').remove();\r\n    this.setState({ data: [], top: -1 });\r\n    this.setState({});\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.state.top === -1;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createStack();\r\n  }\r\n\r\n  createStack() {\r\n    // Clear Stack List\r\n    let clearStack = () => {\r\n      d3.selectAll('#svg-container').remove();\r\n    };\r\n    clearStack();\r\n    let blockHeight = 50;\r\n    let capacity = this.state.capacity;\r\n    var margin = { top: 100, right: 0, bottom: 0, left: 30 },\r\n      width = 500,\r\n      height = 300;\r\n\r\n    var svg = d3\r\n      .select('#stack-container')\r\n      .append('svg')\r\n      .attr('id', 'svg-container')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n    var x = d3.scaleLinear().domain([0, 0]).range([width, 0]);\r\n\r\n    let y = height + blockHeight;\r\n    let yText = height + blockHeight;\r\n\r\n    svg\r\n      .selectAll('mybar')\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', function (d) {\r\n        return x(d);\r\n      })\r\n      .attr('stroke-width', 3)\r\n      .attr('stroke', 'black')\r\n      .attr('y', function (d) {\r\n        y -= blockHeight;\r\n        return y;\r\n      })\r\n      .attr('width', width - 350)\r\n      .attr('fill', '#39a4ff')\r\n      .attr('height', 50)\r\n      .attr('value', function (index) {\r\n        return index;\r\n      })\r\n      .attr('id', (d, index) => index);\r\n\r\n    svg\r\n      .selectAll('mybar')\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', function (d) {\r\n        return x(d) + 65;\r\n      })\r\n      .attr('y', function (d) {\r\n        yText -= blockHeight;\r\n        return yText + 30;\r\n      })\r\n      .attr('value', function (d, index) {\r\n        return index;\r\n      })\r\n      .text(function (d) {\r\n        return d;\r\n      })\r\n      .attr('id', (d, index) => index);\r\n\r\n    svg\r\n      .selectAll('mybar')\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append('g')\r\n      .append('text')\r\n      .attr('x', function (d) {\r\n        return x(d) - 45;\r\n      })\r\n      .attr('y', function (d, index) {\r\n        let htmlCollection = svg._groups[0][0].children; // need to do this b/c cant access state in here for some reason??\r\n        let size = 0;\r\n        for (let item of htmlCollection) {\r\n          if (item.localName === 'rect') {\r\n            size += 1;\r\n          }\r\n        }\r\n\r\n        if (index === size - 1) {\r\n          // Top position\r\n          return 30 + (capacity - size + 1) * 50;\r\n        }\r\n      })\r\n      .attr('value', function (d, index) {\r\n        return index;\r\n      })\r\n      .text(function (d, index) {\r\n        let el = svg._groups[0][0].children;\r\n        let size = 0;\r\n        for (let item of el) {\r\n          if (item.localName === 'rect') {\r\n            size += 1;\r\n          }\r\n        }\r\n\r\n        if (index === size - 1) {\r\n          return 'Top';\r\n        }\r\n      })\r\n      .attr('id', (d, index) => index);\r\n  }\r\n\r\n  renderStackClassPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Stack-class-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Class Stack</span>\r\n        </div>\r\n        <div id={'Stack-class-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            capacity: {this.state.capacity}\r\n          </span>\r\n        </div>\r\n        <div id={'Stack-class-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            size: {this.state.data.length}\r\n          </span>\r\n        </div>\r\n        <div id={'Stack-class-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            top: {this.state.top}\r\n          </span>\r\n        </div>\r\n        <div id={'Stack-class-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            sArray = [\r\n            {this.state.data.map((e, i) => {\r\n              if (i === this.state.data.length - 1) {\r\n                return e;\r\n              } else {\r\n                return e + ', ';\r\n              }\r\n            })}\r\n            ]\r\n          </span>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPopPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Stack-pop-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>pop()</span>\r\n        </div>\r\n        <div id={'Stack-pop-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>if sArray is empty</span>\r\n        </div>\r\n        <div id={'Stack-pop-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            throw empty stack error\r\n          </span>\r\n        </div>\r\n        <div id={'Stack-pop-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>data = sArray[top]</span>\r\n        </div>\r\n        <div id={'Stack-pop-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>size -= 1</span>\r\n        </div>\r\n        <div id={'Stack-pop-6'}>\r\n          6<span style={{ marginLeft: indentation(2) }}>top -= 1</span>\r\n        </div>\r\n        <div id={'Stack-pop-7'}>\r\n          7<span style={{ marginLeft: indentation(2) }}>return data</span>\r\n        </div>\r\n        <br></br>\r\n        <h1>return value = {this.state.poppedVal}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderPushPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Stack-push-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>push(data)</span>\r\n        </div>\r\n        <div id={'Stack-push-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            if size == capacity\r\n          </span>\r\n        </div>\r\n        <div id={'Stack-push-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            throw full stack error\r\n          </span>\r\n        </div>\r\n        <div id={'Stack-push-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>size += 1</span>\r\n        </div>\r\n        <div id={'Stack-push-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>top += 1</span>\r\n        </div>\r\n        <div id={'Stack-push-6'}>\r\n          6<span style={{ marginLeft: indentation(2) }}>stack[top] = data</span>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatPushButtonText() {\r\n    let linkText = '';\r\n    if (this.state.data.includes(this.state.inputNum)) {\r\n      linkText = 'No Duplicates';\r\n    } else if (this.state.data.length === 6) {\r\n      linkText = 'Full Stack';\r\n    } else {\r\n      linkText = 'Push';\r\n    }\r\n    return linkText;\r\n  }\r\n\r\n  formatPopButtonText() {\r\n    let linkText = '';\r\n    if (this.state.data.length === 0) {\r\n      linkText = 'Empty Stack';\r\n    } else {\r\n      linkText = 'Pop';\r\n    }\r\n    return linkText;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-6'} id={'graph-container'}>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n            }}\r\n          >\r\n            <label>Add a number:</label>\r\n            <input\r\n              style={{ width: '50px' }}\r\n              type=\"text\"\r\n              value={this.state.inputNum}\r\n              onChange={async (event) => {\r\n                await this.setState({\r\n                  inputNum: Number(event.target.value),\r\n                });\r\n              }}\r\n            />\r\n\r\n            <button\r\n              className=\"graph-button\"\r\n              disabled={\r\n                this.state.data.includes(Number(this.state.inputNum)) ||\r\n                this.state.data.length === 6\r\n              }\r\n              type=\"submit\"\r\n              onClick={async () => {\r\n                this.setState({\r\n                  didPush: true,\r\n                  didPop: false,\r\n                });\r\n                this.push(this.state.inputNum);\r\n              }}\r\n            >\r\n              {this.formatPushButtonText()}\r\n            </button>\r\n            <button\r\n              className=\"graph-button\"\r\n              disabled={this.state.data.length === 0}\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  didPush: false,\r\n                  didPop: true,\r\n                });\r\n                this.pop();\r\n              }}\r\n            >\r\n              {this.formatPopButtonText()}\r\n            </button>\r\n            <button\r\n              className=\"graph-button\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  didPush: false,\r\n                  didPop: false,\r\n                });\r\n                this.clear();\r\n              }}\r\n            >\r\n              Clear\r\n            </button>\r\n            <div id=\"stack-container\"></div>\r\n          </form>\r\n        </div>\r\n        <div className={'col-6'} id={'graph-container'}>\r\n          <div className={'row'}>{this.renderStackClassPseudocode()}</div>\r\n          <div className={'row'}>\r\n            {this.state.didPop ? this.renderPopPseudocode() : ''}\r\n            {this.state.didPush ? this.renderPushPseudocode() : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Stack;\r\n","import React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n\r\nclass Queue extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: [6, 5, 4, 3, 2, 1],\r\n      inputNum: '',\r\n      didEnqueue: false,\r\n      didDequeue: false,\r\n      capacity: 6,\r\n      tail: 0,\r\n      head: 5,\r\n      dequeuedVal: null,\r\n    };\r\n  }\r\n\r\n  enqueue(element) {\r\n    if (element !== null) {\r\n      this.state.data.unshift(element);\r\n      this.setState({ data: this.state.data, head: this.state.head + 1 });\r\n      this.createQueue();\r\n    }\r\n  }\r\n\r\n  dequeue() {\r\n    if (this.isEmpty() === false) {\r\n      let val = this.state.data.pop();\r\n      this.setState({\r\n        data: this.state.data,\r\n        head: this.state.head - 1,\r\n        dequeuedVal: val,\r\n      });\r\n      d3.selectAll(\"rect[id='\" + 0 + \"']\").remove();\r\n      d3.selectAll(\"text[id='\" + 0 + \"']\").remove();\r\n      this.createQueue();\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    d3.selectAll('#svg-container').remove();\r\n    this.setState({ data: [], head: -1, tail: 0 });\r\n  }\r\n\r\n  isEmpty() {\r\n    return this.state.data.length === 0;\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.createQueue();\r\n  }\r\n\r\n  createQueue = () => {\r\n    let clearQueue = () => {\r\n      d3.selectAll('#svg-container').remove();\r\n    };\r\n    clearQueue();\r\n    let blockHeight = 50;\r\n    let capacity = this.state.capacity;\r\n    var margin = { top: 100, right: 0, bottom: 0, left: 30 },\r\n      width = 500,\r\n      height = 300;\r\n\r\n    var svg = d3\r\n      .select('#queue-container')\r\n      .append('svg')\r\n      .attr('id', 'svg-container')\r\n      .attr('width', width)\r\n      .attr('height', height)\r\n      .append('g')\r\n      .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n    var x = d3.scaleLinear().domain([0, 0]).range([width, 0]);\r\n\r\n    let y = height + blockHeight;\r\n    let yText = height + blockHeight;\r\n    svg\r\n      .selectAll('mybar')\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append('rect')\r\n      .attr('x', function (d) {\r\n        return x(d);\r\n      })\r\n      .attr('stroke-width', 3)\r\n      .attr('stroke', 'black')\r\n      .attr('y', function (d) {\r\n        y -= blockHeight;\r\n        return y;\r\n      })\r\n      .attr('width', width - 350)\r\n      .attr('fill', '#39a4ff')\r\n      .attr('height', 50)\r\n      .attr('value', function (index) {\r\n        return index;\r\n      })\r\n      .attr('id', (d, index) => index);\r\n\r\n    svg\r\n      .selectAll('mybar')\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append('text')\r\n      .attr('x', function (d) {\r\n        return x(d) + 65;\r\n      })\r\n      .attr('y', function (d) {\r\n        yText -= blockHeight;\r\n        return yText + 30;\r\n      })\r\n      .attr('value', function (d, index) {\r\n        return index;\r\n      })\r\n      .text(function (d, index) {\r\n        return d;\r\n      })\r\n      .attr('id', (d, index) => index);\r\n    svg\r\n      .selectAll('mybar')\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append('g')\r\n      .append('text')\r\n      .attr('x', function (d) {\r\n        return x(d) - 85;\r\n      })\r\n      .attr('y', function (d, index) {\r\n        let htmlCollection = svg._groups[0][0].children; // need to do this b/c cant access state in here for some reason??\r\n        let size = 0;\r\n        for (let item of htmlCollection) {\r\n          if (item.localName === 'rect') {\r\n            size += 1;\r\n          }\r\n        }\r\n\r\n        if (index === size - 1) {\r\n          // head position\r\n          return 30 + (capacity - size + 1) * 50;\r\n        }\r\n        if (index === 0) {\r\n          // tail position\r\n          return 300 + 30;\r\n        }\r\n      })\r\n      .attr('value', function (d, index) {\r\n        return index;\r\n      })\r\n      .text(function (d, index) {\r\n        let el = svg._groups[0][0].children;\r\n        let size = 0;\r\n        for (let item of el) {\r\n          if (item.localName === 'rect') {\r\n            size += 1;\r\n          }\r\n        }\r\n        if (size === 1) {\r\n          return 'Head/Tail';\r\n        }\r\n        if (index === 0) {\r\n          return 'Tail';\r\n        }\r\n        if (index === size - 1) {\r\n          return 'Head';\r\n        }\r\n      })\r\n      .attr('id', (d, index) => index);\r\n  };\r\n\r\n  renderQueueClassPseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Queue-class-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>Class Queue</span>\r\n        </div>\r\n        <div id={'Queue-class-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            capacity: {this.state.capacity}\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-class-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            size: {this.state.data.length}\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-class-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            head: {this.state.head}\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-class-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            tail: {this.state.tail}\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-class-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            qArray = [\r\n            {this.state.data.map((e, i) => {\r\n              if (i === this.state.data.length - 1) {\r\n                return e;\r\n              } else {\r\n                return e + ', ';\r\n              }\r\n            })}\r\n            ]\r\n          </span>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderDequeuePseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Queue-dequeue-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>dequeue()</span>\r\n        </div>\r\n        <div id={'Queue-dequeue-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>if qArray is empty</span>\r\n        </div>\r\n        <div id={'Queue-dequeue-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            throw empty queue error\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-dequeue-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>size -= 1</span>\r\n        </div>\r\n        <div id={'Queue-dequeue-5'}>\r\n          5\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            data = qArray[head]\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-dequeue-6'}>\r\n          6<span style={{ marginLeft: indentation(2) }}>head = head - 1</span>\r\n        </div>\r\n        <div id={'Queue-dequeue-7'}>\r\n          7<span style={{ marginLeft: indentation(2) }}>return data</span>\r\n        </div>\r\n        <br></br>\r\n        <h1>return value = {this.state.dequeuedVal}</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  renderEnqueuePseudocode() {\r\n    const indentation = (num) => {\r\n      return num * 20;\r\n    };\r\n    return (\r\n      <div>\r\n        <div id={'Queue-enqueue-1'}>\r\n          1<span style={{ marginLeft: indentation(1) }}>enqueue(data)</span>\r\n        </div>\r\n        <div id={'Queue-enqueue-2'}>\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            if size is equal to capacity\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-enqueue-3'}>\r\n          3\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            throw full queue error\r\n          </span>\r\n        </div>\r\n        <div id={'Queue-enqueue-4'}>\r\n          4<span style={{ marginLeft: indentation(2) }}>size += 1</span>\r\n        </div>\r\n        <div id={'Queue-enqueue-5'}>\r\n          5<span style={{ marginLeft: indentation(2) }}>head = head+1</span>\r\n        </div>\r\n        <div id={'Queue-enqueue-4'}>\r\n          4\r\n          <span style={{ marginLeft: indentation(2) }}>queue[tail] = data</span>\r\n        </div>\r\n        <br></br>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  formatEnqueueButtonText() {\r\n    let linkText = '';\r\n    if (this.state.data.includes(this.state.inputNum)) {\r\n      linkText = 'No Duplicates';\r\n    } else if (this.state.data.length === 6) {\r\n      linkText = 'Full Queue';\r\n    } else {\r\n      linkText = 'Enqueue';\r\n    }\r\n    return linkText;\r\n  }\r\n\r\n  formatDequeueButtonText() {\r\n    let linkText = '';\r\n    if (this.state.data.length === 0) {\r\n      linkText = 'Empty Queue';\r\n    } else {\r\n      linkText = 'Dequeue';\r\n    }\r\n    return linkText;\r\n  }\r\n\r\n  render() {\r\n    this.size = this.state.data.length;\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-6'} id={'graph-container'}>\r\n          <form\r\n            onSubmit={(event) => {\r\n              event.preventDefault();\r\n            }}\r\n          >\r\n            <label>Add a number:</label>\r\n            <input\r\n              style={{ width: '50px' }}\r\n              type=\"text\"\r\n              value={this.state.inputNum}\r\n              onChange={async (event) => {\r\n                await this.setState({\r\n                  inputNum: Number(event.target.value),\r\n                });\r\n              }}\r\n            />\r\n\r\n            <button\r\n              className=\"graph-button\"\r\n              disabled={\r\n                this.state.data.includes(Number(this.state.inputNum)) ||\r\n                this.state.data.length === 6\r\n              }\r\n              type=\"submit\"\r\n              onClick={async () => {\r\n                this.setState({\r\n                  didEnqueue: true,\r\n                  didDequeue: false,\r\n                });\r\n                this.enqueue(this.state.inputNum);\r\n              }}\r\n            >\r\n              {this.formatEnqueueButtonText()}\r\n            </button>\r\n            <button\r\n              className=\"graph-button\"\r\n              disabled={this.state.data.length === 0}\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  didEnqueue: false,\r\n                  didDequeue: true,\r\n                });\r\n                this.dequeue();\r\n              }}\r\n            >\r\n              {this.formatDequeueButtonText()}\r\n            </button>\r\n            <button\r\n              className=\"graph-button\"\r\n              type=\"submit\"\r\n              onClick={() => {\r\n                this.setState({\r\n                  didEnqueue: false,\r\n                  didDequeue: false,\r\n                });\r\n                this.clear();\r\n              }}\r\n            >\r\n              Clear\r\n            </button>\r\n            <div id=\"queue-container\"></div>\r\n          </form>\r\n        </div>\r\n        <div className={'col-6'} id={'graph-container'}>\r\n          <div className={'row'}>{this.renderQueueClassPseudocode()}</div>\r\n          <div className={'row'}>\r\n            {this.state.didEnqueue ? this.renderEnqueuePseudocode() : ''}\r\n            {this.state.didDequeue ? this.renderDequeuePseudocode() : ''}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Queue;\r\n","// Core Imports\r\nimport React, { Component } from 'react';\r\nimport * as d3 from 'd3';\r\n// Styling\r\nimport 'styles/Sorts.scss';\r\n// Libraries\r\nimport {Container, Row, Tooltip, OverlayTrigger } from 'react-bootstrap';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay,\r\n        FaPlus, FaMinus, FaSyncAlt, FaDiceD20} from 'react-icons/fa';\r\n\r\nclass InsertionSort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animation_queue: [],\r\n      stepper_queue: [],\r\n      data: [],\r\n      speed: 1000,\r\n      speedFactor: 1,\r\n      speedChanged: false,\r\n      paused: true,\r\n      swapping: false,\r\n      interval: null,\r\n      sorted: false\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // Event Listener to check if window lost focus\r\n    // If so pause the algorithm\r\n    window.onblur = () => {\r\n      this.setState({paused: true})\r\n    }\r\n    // Start the Algorithm\r\n    this.restartRandom();\r\n  }\r\n  \r\n  componentWillUnmount() {\r\n    this.endInterval();\r\n  }\r\n\r\n  startAlgorithm = () => {\r\n    console.log(this.state.data)\r\n    // set the dimensions and margins of the graph\r\n    var margin = { top: 20, right: 0, bottom: 0, left: 20 },\r\n    width = 900 - margin.left - margin.right,\r\n    height = 500 - margin.top - margin.bottom;\r\n    \r\n    // append the svg object to the body of the page\r\n    var svg = d3\r\n    .select('#sort-container.insertion-sort')\r\n    .append('svg')\r\n    .attr('width', width + margin.left + margin.right)\r\n    .attr('height', height + margin.top + margin.bottom)\r\n    .append('g')\r\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n    \r\n    // X axis\r\n    var x = d3\r\n    .scaleBand()\r\n    .range([0, width])\r\n    .domain(this.state.data)\r\n    .padding(0.2);\r\n    \r\n    // Add Y axis\r\n    var y = d3.scaleLinear().domain([0, 10]).range([height, 0]);\r\n    \r\n    // Bars\r\n    svg\r\n    .selectAll('mybar')\r\n    .data(this.state.data)\r\n    .enter()\r\n    .append('rect')\r\n    .attr('x', function (d) {\r\n      return x(d);\r\n    })\r\n    .attr('y', function (d) {\r\n      return y(0);\r\n    })\r\n    .attr('width', x.bandwidth())\r\n    .attr('fill', '#39a4ff')\r\n    .attr('height', function (d) {\r\n      return height - y(0);\r\n    }) // always equal to 0\r\n    .attr('value', function (d, index) {\r\n      return index;\r\n    });\r\n    \r\n    svg\r\n    .selectAll('mybar')\r\n    .data(this.state.data)\r\n    .enter()\r\n    .append('text')\r\n    .attr('x', function (d) {\r\n      return x(d) + 35;\r\n    })\r\n    .attr('y', function (d) {\r\n      return y(d) - 10;\r\n    })\r\n    .attr('value', function (d, index) {\r\n      return index;\r\n    })\r\n    .text(function (d) {\r\n      return d;\r\n    });\r\n    \r\n    // Animation\r\n    svg\r\n    .selectAll('rect')\r\n    .transition()\r\n    .duration(800)\r\n    .attr('y', function (d) {\r\n      return y(d);\r\n    })\r\n    .attr('height', function (d) {\r\n      return height - y(d);\r\n    });\r\n    \r\n    // Calculate Speed\r\n    this.startInterval()\r\n  }\r\n\r\n  insertionSort = (arr) => {\r\n    const len = arr.length;\r\n    this.state.animation_queue.push([0, 0, false, 0])\r\n    for (let i = 0; i < len; i++) {\r\n      this.state.animation_queue.push([0, 0, false, 1])\r\n      let el = arr[i];\r\n      this.state.animation_queue.push([0, 0, false, 2])\r\n      let j;\r\n      this.state.animation_queue.push([0, 0, false, 3])\r\n      \r\n      this.state.animation_queue.push([i, j + 1, false])\r\n      this.state.animation_queue.push([0, 0, false, 4])\r\n      for (j = i - 1; j >= 0 && arr[j] > el; j--) {\r\n        this.state.animation_queue.push([0, 0, false, 5])\r\n        arr[j + 1] = arr[j]\r\n        this.state.animation_queue.push([j, j + 1, true])\r\n        this.state.animation_queue.push([j, j + 1, false, 5])\r\n      }\r\n      arr[j + 1] = el;\r\n      this.state.animation_queue.push([0, 0, false, 6])\r\n    }\r\n    this.state.animation_queue.push([0, 0, false, 7])\r\n    this.setState({sorted: true})\r\n    return arr;\r\n  };\r\n\r\n  startInterval = () => {\r\n    // Sort\r\n    if (!this.state.sorted) {\r\n      this.insertionSort(this.state.data)\r\n    }\r\n    this.setState({speed: (1000 - ((this.state.speedFactor * 1000) - 1000))})\r\n    this.setState({interval: this.intervalEngine()})\r\n  }\r\n\r\n  restartInterval = () => {\r\n    clearInterval(this.state.interval);\r\n    this.startInterval();\r\n    this.setState({speedChanged: false})\r\n  }\r\n\r\n  endInterval = () => {\r\n    clearInterval(this.state.interval);\r\n    this.setState({sorted: false})\r\n    this.setState({paused: true})\r\n  }\r\n\r\n  intervalEngine = () => {\r\n    // Calculate Speed Factor\r\n    let interval = setInterval(() => {\r\n      if (this.state.speedChanged) this.restartInterval();\r\n      if (this.state.animation_queue.length > 0\r\n          && !this.state.paused) {\r\n        this.swapBars(\r\n          this.state.animation_queue[0][0],\r\n          this.state.animation_queue[0][1],\r\n          this.state.animation_queue[0][2],\r\n          this.state.animation_queue[0][3]\r\n        );\r\n        this.state.stepper_queue.push(this.state.animation_queue[0]);\r\n        this.state.animation_queue.shift();\r\n      } else if (this.state.animation_queue.length == 0) {\r\n        clearInterval(interval);\r\n      } else if (this.state.paused) {\r\n        console.log(\"Paused\")\r\n      }\r\n    }, this.state.speed);\r\n    \r\n    return interval;\r\n  }\r\n\r\n  swapBars(barFromIndex, barToIndex, action, pseudoNumber) {\r\n    this.setState({swapping: true})\r\n    let speed = this.state.speed;\r\n    let fromObj = d3.selectAll(\"rect[value='\" + barFromIndex + \"']\");\r\n    let toObj = d3.selectAll(\"rect[value='\" + barToIndex + \"']\");\r\n    let fromObjTxt = d3.selectAll(\"text[value='\" + barFromIndex + \"']\");\r\n    let toObjTxt = d3.selectAll(\"text[value='\" + barToIndex + \"']\");\r\n\r\n    if (!action) {\r\n\r\n      if (barFromIndex == barToIndex) {\r\n        d3.selectAll(\".code-line\").attr(\"class\", \"code-line\")\r\n        d3.select(\"#ins-sort-\" + pseudoNumber).attr(\"class\", \"code-line active\")\r\n      } else {\r\n        fromObj\r\n          .transition()\r\n          .duration(speed)\r\n          .attr('fill', '#39a4ff50')\r\n  \r\n        toObj\r\n          .transition()\r\n          .duration(speed)\r\n          .attr('fill', '#39a4ff50')\r\n      }\r\n  \r\n\r\n    } else {\r\n      fromObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#9537ff')\r\n        .attr('x', toObj.attr('x'));\r\n\r\n      toObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#ffa500')\r\n        .attr('x', fromObj.attr('x'));\r\n\r\n      fromObjTxt\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('x', toObjTxt.attr('x'));\r\n\r\n      toObjTxt\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('x', fromObjTxt.attr('x'));\r\n\r\n      fromObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#9537ff')\r\n        .attr('x', toObj.attr('x'));\r\n\r\n      toObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#ffa500')\r\n        .attr('x', fromObj.attr('x'));\r\n      \r\n      // Swap\r\n      let temp = fromObj.attr('value');\r\n      fromObj.attr('value', toObj.attr('value'));\r\n      toObj.attr('value', temp);\r\n      temp = fromObjTxt.attr('value');\r\n      fromObjTxt.attr('value', toObjTxt.attr('value'));\r\n      toObjTxt.attr('value', temp);\r\n    }\r\n    // Reset Colors\r\n    fromObj.transition().duration(speed).delay(speed).attr('fill', '#39a4ff').attr('stroke-width',0);\r\n    toObj.transition().duration(speed).delay(speed).attr('fill', '#39a4ff').attr('stroke-width',0);\r\n    // Allow next swapping\r\n    setTimeout(() => {\r\n      this.setState({swapping: false})\r\n    }, speed)\r\n  }\r\n  \r\n  // Stepper\r\n  stepBack = () => {\r\n    if (this.state.stepper_queue.length > 0 && this.state.paused) {\r\n      let toElement = this.state.stepper_queue[this.state.stepper_queue.length - 1][0]\r\n      let fromElement = this.state.stepper_queue[this.state.stepper_queue.length - 1][1]\r\n      let action = this.state.stepper_queue[this.state.stepper_queue.length - 1][2]\r\n      this.swapBars(toElement, fromElement, action)\r\n      this.state.stepper_queue.pop()\r\n      this.state.animation_queue.unshift([fromElement, toElement])\r\n    } else {\r\n      // Handle Button Animations\r\n    }\r\n  }\r\n\r\n  stepForward = () => {\r\n    if (this.state.animation_queue.length > 0 && this.state.paused) {\r\n      let toElement = this.state.animation_queue[0][0]\r\n      let fromElement = this.state.animation_queue[0][1]\r\n      let action = this.state.animation_queue[0][2]\r\n      this.swapBars(toElement, fromElement, action)\r\n      this.state.animation_queue.shift()\r\n      this.state.stepper_queue.unshift([fromElement, toElement])\r\n    } else {\r\n      // Handle Button Animations\r\n    }\r\n  }\r\n\r\n  restartRandom = () => {\r\n    let MIN = 1;\r\n    let MAX = 10;\r\n    let randomArray = [];\r\n\r\n    while (randomArray.length < 9) {\r\n      let randomNumber = Math.floor(Math.random() * MAX) + MIN;\r\n      if (randomArray.indexOf(randomNumber) < 0) randomArray.push(randomNumber);\r\n    }\r\n    \r\n    this.endInterval()\r\n    this.clearSVG()\r\n    this.setState({data: randomArray},\r\n      () => {\r\n        this.startAlgorithm()\r\n    });\r\n  }\r\n\r\n  clearSVG = () => {\r\n    // Clear the document container\r\n    document.getElementById(\"sort-container\").innerHTML = \"\";\r\n    // Clear the animation and stepper queues\r\n    this.state.animation_queue = [];\r\n    this.state.stepper_queue = [];\r\n  }\r\n\r\n  renderInsertionSortPseudocode() {\r\n    function indentation(num) {\r\n      return num * 20;\r\n    }\r\n    return (\r\n      <div style={{padding: \"20px\"}}>\r\n        <div id={'ins-sort-0'} className=\"code-line\">\r\n          1\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            InsertionSort(<i>array</i>):\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-1'} className=\"code-line\">\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            <b>Loop</b> for each item in <i>array</i>\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-2'} className=\"code-line\">\r\n          3\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            Let <i><u>current</u></i> = target element\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-3'} className=\"code-line\">\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            Let <i>j</i> = current.index - 1\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-4'} className=\"code-line\">\r\n          5\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            <b>Loop</b> for every element that is before the index in <i><u>current</u></i>\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-5'} className=\"code-line\">\r\n          6\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            If <i><u>current</u></i> value is less than previous element, <b>swap</b>\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-6'} className=\"code-line\">\r\n          7\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            <b>Set</b> the element at index array[j + 1] to <u><i>current</i></u>\r\n          </span>\r\n        </div>\r\n        <div id={'ins-sort-7'} className=\"code-line\">\r\n          8\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            Return the sorted <u>array</u>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              if (this.state.speedFactor >= 0.1) {\r\n                this.setState({speedChanged: true});\r\n                this.setState({ speedFactor: parseFloat((this.state.speedFactor - .1).toFixed(1))});\r\n              }\r\n            }}\r\n          >\r\n            <FaMinus></FaMinus>\r\n          </button>\r\n          <button className=\"btn-label\">\r\n            Speed: {this.state.speedFactor}x\r\n          </button>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              if (this.state.speedFactor <= 1.4) {\r\n                this.setState({speedChanged: true});\r\n                this.setState({ speedFactor: parseFloat((this.state.speedFactor + .1).toFixed(1))});\r\n              }\r\n            }}\r\n          >\r\n            <FaPlus></FaPlus>\r\n          </button>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            placement=\"top\"\r\n            overlay={\r\n              <Tooltip id=\"tooltip-top\">\r\n                Pause / Un-Pause Algorithm\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <button\r\n              className=\"graph-button\"\r\n              ref=\"top\"\r\n              onClick={() => {\r\n                this.setState({ paused: !this.state.paused });\r\n              }}\r\n            >\r\n              {this.state.paused ? <FaPlay /> : <FaPause />}\r\n            </button>\r\n          </OverlayTrigger>\r\n        </Row>\r\n        <Row>\r\n          <button\r\n            className=\"graph-button step-back\"\r\n            onClick={() => {\r\n              if (!this.state.swapping) this.stepBack()\r\n            }}\r\n          >\r\n            <FaStepBackward></FaStepBackward>\r\n          </button>\r\n          <button\r\n            className=\"graph-button btn-label\"\r\n            onClick={(e) => {\r\n              e.preventDefault()\r\n            }}\r\n          >\r\n            Stepper\r\n          </button>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              if (!this.state.swapping) this.stepForward()\r\n            }}\r\n          >\r\n            <FaStepForward></FaStepForward>\r\n          </button>\r\n          <OverlayTrigger\r\n            key=\"bottom\"\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip id=\"tooltip-top\">\r\n                Restart & Randomize<br></br> Array List\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <button\r\n              className=\"graph-button\"\r\n              ref=\"bottom\"\r\n              onClick={() => {\r\n                this.restartRandom()\r\n              }}\r\n            >\r\n              <FaSyncAlt></FaSyncAlt>\r\n            </button>\r\n          </OverlayTrigger>\r\n        </Row>\r\n        <Row>\r\n          <div id=\"sort-container\" className=\"insertion-sort\"></div>\r\n          {this.renderInsertionSortPseudocode()}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InsertionSort;\r\n","// Core Imports\r\nimport React, { Component } from \"react\";\r\nimport * as d3 from \"d3\";\r\n// Styling\r\nimport \"styles/Sorts.scss\";\r\n// Libraries\r\nimport { Container, Row, Tooltip, OverlayTrigger } from \"react-bootstrap\";\r\nimport {\r\n  FaStepBackward,\r\n  FaStepForward,\r\n  FaPause,\r\n  FaPlay,\r\n  FaPlus,\r\n  FaMinus,\r\n  FaSyncAlt,\r\n} from \"react-icons/fa\";\r\n\r\nclass SelectionSort extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      animation_queue: [],\r\n      stepper_queue: [],\r\n      data: [],\r\n      sorted: false,\r\n      speed: 1000,\r\n      speedFactor: 1,\r\n      speedChanged: false,\r\n      swapping: false,\r\n      paused: true,\r\n      interval: null,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    // Event Listener to check if window lost focus\r\n    // If so pause the algorithm\r\n    window.onblur = () => {\r\n      this.setState({ paused: true });\r\n    };\r\n    // Start the Algorithm\r\n    this.restartRandom();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.endInterval();\r\n  }\r\n\r\n  startAlgorithm = () => {\r\n    console.log(this.state.data);\r\n    // set the dimensions and margins of the graph\r\n    var margin = { top: 20, right: 0, bottom: 0, left: 20 },\r\n      width = 900 - margin.left - margin.right,\r\n      height = 500 - margin.top - margin.bottom;\r\n\r\n    // append the svg object to the body of the page\r\n    var svg = d3\r\n      .select(\"#sort-container.selection-sort\")\r\n      .append(\"svg\")\r\n      .attr(\"width\", width + margin.left + margin.right)\r\n      .attr(\"height\", height + margin.top + margin.bottom)\r\n      .append(\"g\")\r\n      .attr(\"transform\", \"translate(\" + margin.left + \",\" + margin.top + \")\");\r\n\r\n    // X axis\r\n    var x = d3\r\n      .scaleBand()\r\n      .range([0, width])\r\n      .domain(this.state.data)\r\n      .padding(0.2);\r\n\r\n    // Add Y axis\r\n    var y = d3.scaleLinear().domain([0, 10]).range([height, 0]);\r\n\r\n    // Bars\r\n    svg\r\n      .selectAll(\"mybar\")\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append(\"rect\")\r\n      .attr(\"x\", function (d) {\r\n        return x(d);\r\n      })\r\n      .attr(\"y\", function (d) {\r\n        return y(0);\r\n      })\r\n      .attr(\"width\", x.bandwidth())\r\n      .attr(\"fill\", \"#39a4ff\")\r\n      .attr(\"height\", function (d) {\r\n        return height - y(0);\r\n      }) // always equal to 0\r\n      .attr(\"value\", function (d, index) {\r\n        return index;\r\n      });\r\n\r\n    svg\r\n      .selectAll(\"mybar\")\r\n      .data(this.state.data)\r\n      .enter()\r\n      .append(\"text\")\r\n      .attr(\"x\", function (d) {\r\n        return x(d) + 35;\r\n      })\r\n      .attr(\"y\", function (d) {\r\n        return y(d) - 10;\r\n      })\r\n      .attr(\"value\", function (d, index) {\r\n        return index;\r\n      })\r\n      .text(function (d) {\r\n        return d;\r\n      });\r\n\r\n    // Animation\r\n    svg\r\n      .selectAll(\"rect\")\r\n      .transition()\r\n      .duration(800)\r\n      .attr(\"y\", function (d) {\r\n        return y(d);\r\n      })\r\n      .attr(\"height\", function (d) {\r\n        return height - y(d);\r\n      });\r\n\r\n    // Calculate Speed\r\n    this.startInterval();\r\n  };\r\n\r\n  selectionSort = (arr) => {\r\n    this.state.animation_queue.push([0, 0, false, 0]);\r\n    let len = arr.length;\r\n    for (let i = 0; i < len; i++) {\r\n      this.state.animation_queue.push([0, 0, false, 1]);\r\n      let min = i;\r\n      this.state.animation_queue.push([0, 0, false, 2]);\r\n      for (let j = i + 1; j < len; j++) {\r\n        this.state.animation_queue.push([min, j, false]);\r\n        this.state.animation_queue.push([0, 0, false, 3]);\r\n        if (arr[min] > arr[j]) {\r\n          this.state.animation_queue.push([0, 0, false, 4]);\r\n          min = j;\r\n        }\r\n      }\r\n      if (min !== i) {\r\n        this.state.animation_queue.push([0, 0, false, 5]);\r\n        let tmp = arr[i];\r\n        arr[i] = arr[min];\r\n        arr[min] = tmp;\r\n        this.state.animation_queue.push([i, min, true]);\r\n      }\r\n    }\r\n    this.state.animation_queue.push([0, 0, false, 6]);\r\n    this.setState({sorted: true})\r\n    return arr;\r\n  };\r\n\r\n  startInterval = () => {\r\n    // Sort\r\n    if (!this.state.sorted) this.selectionSort(this.state.data);\r\n    this.setState({ speed: 1000 - (this.state.speedFactor * 1000 - 1000) });\r\n    this.setState({ interval: this.intervalEngine() });\r\n  };\r\n\r\n  restartInterval = () => {\r\n    clearInterval(this.state.interval);\r\n    this.startInterval();\r\n    this.setState({ speedChanged: false });\r\n  };\r\n\r\n  endInterval = () => {\r\n    clearInterval(this.state.interval);\r\n    this.setState({sorted: false})\r\n    this.setState({paused: true});\r\n  };\r\n\r\n  intervalEngine = () => {\r\n    // Calculate Speed Factor\r\n    let interval = setInterval(() => {\r\n      if (this.state.speedChanged) this.restartInterval();\r\n      if (this.state.animation_queue.length > 0 && !this.state.paused) {\r\n        this.swapBars(\r\n          this.state.animation_queue[0][0],\r\n          this.state.animation_queue[0][1],\r\n          this.state.animation_queue[0][2],\r\n          this.state.animation_queue[0][3],\r\n        );\r\n        this.state.stepper_queue.push(this.state.animation_queue[0]);\r\n        this.state.animation_queue.shift();\r\n      } else if (this.state.animation_queue.length == 0) {\r\n        clearInterval(interval);\r\n      } else if (this.state.paused) {\r\n        console.log(\"Paused\");\r\n      }\r\n    }, this.state.speed);\r\n\r\n    return interval;\r\n  };\r\n\r\n  swapBars(barFromIndex, barToIndex, action, pseudoNumber) {\r\n    this.setState({swapping: true})\r\n    let speed = this.state.speed;\r\n    let fromObj = d3.selectAll(\"rect[value='\" + barFromIndex + \"']\");\r\n    let toObj = d3.selectAll(\"rect[value='\" + barToIndex + \"']\");\r\n    let fromObjTxt = d3.selectAll(\"text[value='\" + barFromIndex + \"']\");\r\n    let toObjTxt = d3.selectAll(\"text[value='\" + barToIndex + \"']\");\r\n\r\n    if (!action) {\r\n\r\n      if (barFromIndex == barToIndex) {\r\n        d3.selectAll(\".code-line\").attr(\"class\", \"code-line\")\r\n        d3.select(\"#sel-sort-\" + pseudoNumber).attr(\"class\", \"code-line active\")\r\n      } else {\r\n        fromObj\r\n          .transition()\r\n          .duration(speed)\r\n          .attr('fill', '#39a4ff50')\r\n  \r\n        toObj\r\n          .transition()\r\n          .duration(speed)\r\n          .attr('fill', '#39a4ff50')\r\n      }\r\n  \r\n\r\n    } else {\r\n      fromObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#9537ff')\r\n        .attr('x', toObj.attr('x'));\r\n\r\n      toObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#ffa500')\r\n        .attr('x', fromObj.attr('x'));\r\n\r\n      fromObjTxt\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('x', toObjTxt.attr('x'));\r\n\r\n      toObjTxt\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('x', fromObjTxt.attr('x'));\r\n\r\n      fromObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#9537ff')\r\n        .attr('x', toObj.attr('x'));\r\n\r\n      toObj\r\n        .transition()\r\n        .duration(speed)\r\n        .attr('fill', '#ffa500')\r\n        .attr('x', fromObj.attr('x'));\r\n      \r\n      // Swap\r\n      let temp = fromObj.attr('value');\r\n      fromObj.attr('value', toObj.attr('value'));\r\n      toObj.attr('value', temp);\r\n      temp = fromObjTxt.attr('value');\r\n      fromObjTxt.attr('value', toObjTxt.attr('value'));\r\n      toObjTxt.attr('value', temp);\r\n    }\r\n    // Reset Colors\r\n    fromObj.transition().duration(speed).delay(speed).attr('fill', '#39a4ff').attr('stroke-width',0);\r\n    toObj.transition().duration(speed).delay(speed).attr('fill', '#39a4ff').attr('stroke-width',0);\r\n    // Allow next swapping\r\n    setTimeout(() => {\r\n      this.setState({swapping: false})\r\n    }, speed)\r\n  }\r\n\r\n  // Stepper\r\n  stepBack = () => {\r\n    if (this.state.stepper_queue.length > 0) {\r\n      let toElement = this.state.stepper_queue[\r\n        this.state.stepper_queue.length - 1\r\n      ][0];\r\n      let fromElement = this.state.stepper_queue[\r\n        this.state.stepper_queue.length - 1\r\n      ][1];\r\n      this.swapBars(toElement, fromElement);\r\n      this.state.stepper_queue.pop();\r\n      this.state.animation_queue.unshift([fromElement, toElement]);\r\n    } else {\r\n      // Handle Button Animations\r\n    }\r\n  };\r\n\r\n  stepForward = () => {\r\n    if (this.state.animation_queue.length > 0) {\r\n      let toElement = this.state.animation_queue[0][0];\r\n      let fromElement = this.state.animation_queue[0][1];\r\n      this.swapBars(toElement, fromElement);\r\n      this.state.animation_queue.shift();\r\n      this.state.stepper_queue.unshift([fromElement, toElement]);\r\n    } else {\r\n      // Handle Button Animations\r\n    }\r\n  };\r\n\r\n  restartRandom = () => {\r\n    let MIN = 1;\r\n    let MAX = 10;\r\n    let randomArray = [];\r\n\r\n    while (randomArray.length < 9) {\r\n      let randomNumber = Math.floor(Math.random() * MAX) + MIN;\r\n      if (randomArray.indexOf(randomNumber) < 0) randomArray.push(randomNumber);\r\n    }\r\n\r\n    this.endInterval();\r\n    this.clearSVG();\r\n    this.setState({ data: randomArray }, () => {\r\n      this.startAlgorithm();\r\n    });\r\n  };\r\n\r\n  clearSVG = () => {\r\n    // Clear the document container\r\n    document.getElementById(\"sort-container\").innerHTML = \"\";\r\n    // Clear the animation and stepper queues\r\n    this.state.animation_queue = [];\r\n    this.state.stepper_queue = [];\r\n  };\r\n\r\n  renderSelectionSortPseudocode() {\r\n    function indentation(num) {\r\n      return num * 20;\r\n    }\r\n    return (\r\n      <div style={{padding: \"20px\"}}>\r\n        <div id={'sel-sort-0'} className=\"code-line\">\r\n          1\r\n          <span style={{ marginLeft: indentation(1) }}>\r\n            SelectionSort(<i>array</i>):\r\n          </span>\r\n        </div>\r\n        <div id={'sel-sort-1'} className=\"code-line\">\r\n          2\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            <b>Loop</b> for each item in <i>array</i>\r\n          </span>\r\n        </div>\r\n        <div id={'sel-sort-2'} className=\"code-line\">\r\n          3\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            Let <i><u>min</u></i> = current index in <b>Loop</b>\r\n          </span>\r\n        </div>\r\n        <div id={'sel-sort-3'} className=\"code-line\">\r\n          4\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            <b>Loop</b> for each item in <i>array</i>\r\n          </span>\r\n        </div>\r\n        <div id={'sel-sort-4'} className=\"code-line\">\r\n          5\r\n          <span style={{ marginLeft: indentation(4) }}>\r\n            If <i><u>min element</u></i> is greator than <i><u>current element</u></i>, set <i><u>min</u></i> = current element index\r\n          </span>\r\n        </div>\r\n        <div id={'sel-sort-5'} className=\"code-line\">\r\n          6\r\n          <span style={{ marginLeft: indentation(3) }}>\r\n            If <i><u>min</u></i> does not equal to current index, <b>swap</b> them \r\n          </span>\r\n        </div>\r\n        <div id={'sel-sort-6'} className=\"code-line\">\r\n          7\r\n          <span style={{ marginLeft: indentation(2) }}>\r\n            Return the sorted <u>array</u>\r\n          </span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Container fluid>\r\n        <Row>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              if (this.state.speedFactor >= 0.1) {\r\n                this.setState({ speedChanged: true });\r\n                this.setState({\r\n                  speedFactor: parseFloat(\r\n                    (this.state.speedFactor - 0.1).toFixed(1)\r\n                  ),\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <FaMinus></FaMinus>\r\n          </button>\r\n          <button className=\"btn-label\">\r\n            Speed: {this.state.speedFactor}x\r\n          </button>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              if (this.state.speedFactor <= 1.4) {\r\n                this.setState({ speedChanged: true });\r\n                this.setState({\r\n                  speedFactor: parseFloat(\r\n                    (this.state.speedFactor + 0.1).toFixed(1)\r\n                  ),\r\n                });\r\n              }\r\n            }}\r\n          >\r\n            <FaPlus></FaPlus>\r\n          </button>\r\n          <OverlayTrigger\r\n            key=\"top\"\r\n            placement=\"top\"\r\n            overlay={\r\n              <Tooltip id=\"tooltip-top\">Pause / Un-Pause Algorithm</Tooltip>\r\n            }\r\n          >\r\n            <button\r\n              className=\"graph-button\"\r\n              ref=\"top\"\r\n              onClick={() => {\r\n                this.setState({ paused: !this.state.paused });\r\n              }}\r\n            >\r\n              {this.state.paused ? <FaPlay /> : <FaPause />}\r\n            </button>\r\n          </OverlayTrigger>\r\n        </Row>\r\n        <Row>\r\n          <button\r\n            className=\"graph-button step-back\"\r\n            onClick={() => {\r\n              if (!this.state.swapping) this.stepBack();\r\n            }}\r\n          >\r\n            <FaStepBackward></FaStepBackward>\r\n          </button>\r\n          <button\r\n            className=\"graph-button btn-label\"\r\n            onClick={(e) => {\r\n              e.preventDefault();\r\n            }}\r\n          >\r\n            Stepper\r\n          </button>\r\n          <button\r\n            className=\"graph-button\"\r\n            onClick={() => {\r\n              if (!this.state.swapping) this.stepForward();\r\n            }}\r\n          >\r\n            <FaStepForward></FaStepForward>\r\n          </button>\r\n          <OverlayTrigger\r\n            key=\"bottom\"\r\n            placement=\"bottom\"\r\n            overlay={\r\n              <Tooltip id=\"tooltip-top\">\r\n                Restart & Randomize<br></br> Array List\r\n              </Tooltip>\r\n            }\r\n          >\r\n            <button\r\n              className=\"graph-button\"\r\n              ref=\"bottom\"\r\n              onClick={() => {\r\n                this.restartRandom();\r\n              }}\r\n            >\r\n              <FaSyncAlt></FaSyncAlt>\r\n            </button>\r\n          </OverlayTrigger>\r\n        </Row>\r\n        <Row>\r\n          <div id=\"sort-container\" className=\"selection-sort\"></div>\r\n          {this.renderSelectionSortPseudocode()}\r\n        </Row>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SelectionSort;\r\n","import * as d3 from 'd3';\r\n\r\nexport function buildNetwork(x) {\r\n  var width = 960,\r\n    height = 600,\r\n    nodeSize = 60;\r\n\r\n  let nodes = [\r\n    { label: 'i0', layer: 1, bias: x[0], color: '#73a0f3' },\r\n    { label: 'i1', layer: 1, bias: x[1], color: '#73a0f3' },\r\n    { label: 'h0', layer: 2, bias: 1, color: 'turquoise' },\r\n    { label: 'h1', layer: 2, bias: -6, color: 'turquoise' },\r\n    { label: 'o0', layer: 3, bias: -3.93, color: '#2dea2d' },\r\n  ];\r\n\r\n  // var color = d3.scaleOrdinal(d3.schemeCategory10);\r\n  let linkNames = ['i0-h0', 'i0-h1', 'i1-h0', 'i1-h1', 'h0-o0', 'h1-o0'];\r\n  var svg = d3\r\n    .select('#graph-container')\r\n    .append('svg')\r\n    .attr('id', 'nn-svg')\r\n    .attr('width', width)\r\n    .attr('height', height)\r\n    .attr('transform', 'translate(' + -100 + ',' + -50 + ')');\r\n\r\n  // get network size\r\n  var netsize = {};\r\n  nodes.forEach(function (d) {\r\n    if (d.layer in netsize) {\r\n      netsize[d.layer] += 1;\r\n    } else {\r\n      netsize[d.layer] = 1;\r\n    }\r\n    d['lidx'] = netsize[d.layer];\r\n  });\r\n\r\n  // calc distances between nodes\r\n  var largestLayerSize = Math.max.apply(\r\n    null,\r\n    Object.keys(netsize).map(function (i) {\r\n      return netsize[i];\r\n    })\r\n  );\r\n\r\n  var xdist = width / Object.keys(netsize).length,\r\n    ydist = height / largestLayerSize;\r\n\r\n  // create node locations\r\n  nodes.map(function (d, i) {\r\n    if (i === 4) {\r\n      d['x'] = (d.layer - 0.5) * xdist * 0.9;\r\n      d['y'] = (d.lidx - 0.5) * ydist * 2;\r\n    } else {\r\n      d['x'] = (d.layer - 0.5) * xdist;\r\n      d['y'] = (d.lidx - 0.5) * ydist;\r\n    }\r\n  });\r\n\r\n  let wIndex = {\r\n    '0-2': 'W\\u208000',\r\n    '0-3': 'W\\u208001',\r\n    '1-2': 'W\\u208010',\r\n    '1-3': 'W\\u208011',\r\n    '2-4': 'W\\u20810',\r\n    '3-4': 'W\\u20811',\r\n  };\r\n\r\n  // autogenerate links\r\n  var links = [];\r\n  nodes\r\n    .map(function (d, i) {\r\n      for (var n in nodes) {\r\n        if (d.layer + 1 == nodes[n].layer) {\r\n          links.push({\r\n            source: parseInt(i),\r\n            target: parseInt(n),\r\n            value: 1,\r\n            label: wIndex[i + '-' + n],\r\n          });\r\n        }\r\n      }\r\n    })\r\n    .filter(function (d) {\r\n      return typeof d !== 'undefined';\r\n    });\r\n\r\n  // draw links\r\n  var link = svg\r\n    .selectAll('.link-nn')\r\n    .data(links)\r\n    .enter()\r\n    .append('line')\r\n    .attr('class', 'link-nn')\r\n    .attr('id', (d, i) => linkNames[i])\r\n    .attr('x1', function (d) {\r\n      return nodes[d.source].x;\r\n    })\r\n    .attr('y1', function (d) {\r\n      return nodes[d.source].y;\r\n    })\r\n    .attr('x2', function (d) {\r\n      return nodes[d.target].x;\r\n    })\r\n    .attr('y2', function (d) {\r\n      return nodes[d.target].y;\r\n    });\r\n\r\n  var linkTextElements = svg\r\n    .append('g')\r\n    .attr('class', 'link_texts')\r\n    .selectAll('text')\r\n    .data(links)\r\n    .enter()\r\n    .append('text')\r\n    .text(function (link) {\r\n      return link.label;\r\n    })\r\n    .attr('font-size', 15)\r\n    .attr('dx', 0)\r\n    .attr('dy', (d, i) => {\r\n      if (i === 1 || i === 2) {\r\n        return 105;\r\n      }\r\n      return 20;\r\n    })\r\n    .attr('x', (d, i) => {\r\n      if (i === 1 || i === 2) {\r\n        return (0.5 * nodes[d.source].x + nodes[d.target].x) / 2;\r\n      }\r\n      return (nodes[d.source].x + nodes[d.target].x) / 2;\r\n    })\r\n    .attr('y', (d, i) => {\r\n      if (i === 1 || i === 2) {\r\n        return (0.35 * nodes[d.source].y + nodes[d.target].y) / 2;\r\n      }\r\n      return (nodes[d.source].y + nodes[d.target].y) / 2;\r\n    });\r\n\r\n  linkTextElements\r\n    .data(nodes)\r\n    .enter()\r\n    .attr('x', function (link) {\r\n      console.log(link);\r\n      return (link.x1 + link.x2) / 2;\r\n    })\r\n    .attr('y', function (link) {\r\n      return (link.source.y + link.target.y) / 2;\r\n    });\r\n\r\n  // draw nodes\r\n  var node = svg\r\n    .selectAll('.node')\r\n    .data(nodes)\r\n    .enter()\r\n    .append('g')\r\n    .attr('transform', function (d) {\r\n      return 'translate(' + d.x + ',' + d.y + ')';\r\n    });\r\n\r\n  var circle = node\r\n    .append('circle')\r\n    .attr('class', 'node-nn')\r\n    .attr('id', (d) => `${d.label}-node`)\r\n    .attr('r', nodeSize)\r\n    .attr('stroke', 'black')\r\n    .attr('stroke-width', '3px')\r\n    .style('fill', function (d) {\r\n      return d.color;\r\n    });\r\n\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-.35em')\r\n    .attr('dy', '-4.15em')\r\n    .attr('id', (d) => `${d.label}-label`)\r\n    .text(function (d) {\r\n      return `${d.label}`;\r\n    });\r\n\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-1.7em')\r\n    //.attr('dy', '-1.55em')\r\n    .attr('dy', function (d, i) {\r\n      if (i <= 1) {\r\n        return '0em';\r\n      }\r\n      return '-1.55em';\r\n    })\r\n    .attr('id', (d) => `${d.label}-bias`)\r\n    .text(function (d, i) {\r\n      if (i <= 1) {\r\n        return 'X = ' + d.bias;\r\n      }\r\n      return 'b = ' + d.bias;\r\n    });\r\n\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-1.7em')\r\n    .attr('dy', '0em')\r\n    .attr('id', (d) => `${d.label}-net`)\r\n    .text(function (d, i) {\r\n      if (i <= 1) {\r\n        return;\r\n      }\r\n      return 'net = ?';\r\n    });\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-1.7em')\r\n    .attr('dy', '1.50em')\r\n    .attr('id', (d) => `${d.label}-out`)\r\n    .text(function (d, i) {\r\n      if (i <= 1) {\r\n        return;\r\n      }\r\n      return 'out = ?';\r\n    });\r\n\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-2.7em')\r\n    .attr('dy', '-4.5em')\r\n    .attr('id', (d) => `${d.label}-error`)\r\n    .attr('font-size', '36px')\r\n    .text(function (d, i) {\r\n      if (i === 4) {\r\n        return 'Error = ?';\r\n      }\r\n    });\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-2.7em')\r\n    .attr('dy', '-7.5em')\r\n    .attr('id', (d) => `${d.label}-target`)\r\n    .attr('font-size', '36px')\r\n    .text(function (d, i) {\r\n      if (i === 4) {\r\n        return 'Target = 1';\r\n      }\r\n    });\r\n  node\r\n    .append('text')\r\n    .attr('dx', '-2.7em')\r\n    .attr('dy', '-6em')\r\n    .attr('id', (d) => `${d.label}-output`)\r\n    .attr('font-size', '36px')\r\n    .text(function (d, i) {\r\n      if (i === 4) {\r\n        return 'Output = ?';\r\n      }\r\n    });\r\n}\r\nexport function plotLoss(data) {\r\n  var outerWidth = 700,\r\n    outerHeight = 500; // includes margins\r\n\r\n  var margin = { top: 100, right: 20, bottom: 80, left: 80 }; // clockwise as in CSS\r\n\r\n  var width = outerWidth - margin.left - margin.right, // width of plot inside margins\r\n    height = outerHeight - margin.top - margin.bottom; // height   \"     \"\r\n\r\n  document.body.style.margin = '0px'; // Eliminate default margin from <body> element\r\n\r\n  // var data = [\r\n  //   { x: 0, y: 0 },\r\n  //   { x: 1, y: 30 },\r\n  //   { x: 2, y: 40 },\r\n  //   { x: 3, y: 20 },\r\n  //   { x: 4, y: 90 },\r\n  //   { x: 5, y: 70 },\r\n  // ];\r\n\r\n  function xValue(d) {\r\n    return d.x;\r\n  } // accessors\r\n  function yValue(d) {\r\n    return d.y;\r\n  }\r\n\r\n  var x = d3\r\n    .scaleLinear() // interpolator for X axis -- inner plot region\r\n    .domain(d3.extent(data, xValue))\r\n    .range([0, width]);\r\n\r\n  var y = d3\r\n    .scaleLinear() // interpolator for Y axis -- inner plot region\r\n    .domain(d3.extent(data, yValue))\r\n    .range([height, 0]); // remember, (0,0) is upper left -- this reverses \"y\"\r\n\r\n  var line = d3\r\n    .line() // SVG line generator\r\n    .x(function (d) {\r\n      return x(d.x);\r\n    })\r\n    .y(function (d) {\r\n      return y(d.y);\r\n    });\r\n\r\n  var xAxis = d3.axisBottom(x).ticks(5); // request 5 ticks on the x axis\r\n\r\n  var yAxis = d3\r\n    .axisLeft(y) // y Axis\r\n    .ticks(4);\r\n\r\n  var svg = d3\r\n    .select('#loss-plot')\r\n    .append('svg')\r\n    .attr('width', outerWidth)\r\n    .attr('height', outerHeight); // Note: ok to leave this without units, implied \"px\"\r\n\r\n  var g = svg\r\n    .append('g') // <g> element is the inner plot area (i.e., inside the margins)\r\n    .attr('transform', 'translate(' + margin.left + ',' + margin.top + ')');\r\n\r\n  g.append('g') // render the Y axis in the inner plot area\r\n    .attr('class', 'y axis')\r\n    .call(yAxis);\r\n\r\n  g.append('g') // render the X axis in the inner plot area\r\n    .attr('class', 'x axis')\r\n    .attr('transform', 'translate(0,' + height + ')') // axis runs along lower part of graph\r\n    .call(xAxis);\r\n\r\n  g.append('text') // outer x-axis label\r\n    .attr('class', 'x label')\r\n    .attr('text-anchor', 'end')\r\n    .attr('x', width / 2)\r\n    .attr('y', height + (2 * margin.bottom) / 3 + 6)\r\n    .text('Iterations');\r\n\r\n  g.append('text') // plot title\r\n    .attr('class', 'x label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', width / 2)\r\n    .attr('y', -margin.top / 2)\r\n    .attr('dy', '+.75em')\r\n    .text('Loss vs Iterations');\r\n\r\n  g.append('text') // outer y-axis label\r\n    .attr('class', 'x label')\r\n    .attr('text-anchor', 'middle')\r\n    .attr('x', -height / 2)\r\n    .attr('y', -6 - margin.left / 3)\r\n    .attr('dy', '-.75em')\r\n    .attr('transform', 'rotate(-90)')\r\n    .text('Loss');\r\n\r\n  g.append('path') // plot the data as a line\r\n    .datum(data)\r\n    .attr('class', 'line')\r\n    .attr('d', line)\r\n    .style('fill', 'none')\r\n    .style('stroke', '#fff')\r\n    .transition()\r\n    .delay(500)\r\n    .duration(1000)\r\n    .style('stroke', '#000');\r\n\r\n  g.selectAll('.dot') // plot a circle at each data location\r\n    .data(data)\r\n    .enter()\r\n    .append('circle')\r\n    .attr('class', 'dot')\r\n    .attr('cx', function (d) {\r\n      return x(d.x);\r\n    })\r\n    .attr('cy', function (d) {\r\n      return y(d.y);\r\n    })\r\n    .attr('r', 3);\r\n}\r\n// https://react-bootstrap.github.io/components/overlays/\r\n\r\nexport default buildNetwork;\r\n","import React, { Component } from 'react';\r\nimport {\r\n  multiply,\r\n  add,\r\n  dotMultiply,\r\n  subtract,\r\n  transpose,\r\n  exp,\r\n  round,\r\n} from 'mathjs';\r\nimport { FaStepBackward, FaStepForward, FaPause, FaPlay } from 'react-icons/fa';\r\n\r\nimport { MathComponent } from 'mathjax-react';\r\nimport { buildNetwork, plotLoss } from '../graph-builders/neural-net-builder';\r\nimport { Tabs, Tab } from 'react-bootstrap';\r\n\r\nclass NeuralNets extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      pause: false,\r\n      stop: false,\r\n      speed: 1,\r\n      w0: [\r\n        [3, 4],\r\n        [6, 5],\r\n      ],\r\n      w1: [2, 4],\r\n      b0: [1, -6],\r\n      b1: [-3.93],\r\n      x: [1, 0.2],\r\n      learningRate: 0.75,\r\n      prevW0: null,\r\n      prevW1: null,\r\n      prevB0: null,\r\n      prevB1: null,\r\n      newW0: null,\r\n      newW1: null,\r\n      newB0: null,\r\n      newB1: null,\r\n      output: null,\r\n      iteration: null,\r\n      h0_net: null,\r\n      h0_out: null,\r\n      h1_net: null,\r\n      h1_out: null,\r\n      o0_net: null,\r\n      o0_out: null,\r\n      error: null,\r\n      dE: null,\r\n      dZ_out: null,\r\n      dZ_h: null,\r\n      dW1: null,\r\n      dW0: null,\r\n      dB0: null,\r\n      dB1: null,\r\n      activeKey: 'forward',\r\n      animationQueue: [],\r\n      stepIndex: 0,\r\n      stepMode: false,\r\n      losses: [],\r\n    };\r\n    this.localAQ = [];\r\n    this.losses = [];\r\n  }\r\n\r\n  linkToMatrixMapping = {\r\n    'i0-h0': 'w0-00',\r\n    'i0-h1': 'w0-10',\r\n    'i1-h0': 'w0-01',\r\n    'i1-h1': 'w0-11',\r\n    'h0-o0': 'w1-0',\r\n    'h1-o0': 'w1-1',\r\n  };\r\n\r\n  nodeToMatrixMapping = {\r\n    h0: 'b0-0',\r\n    h1: 'b0-1',\r\n    o0: 'b1',\r\n  };\r\n\r\n  animationQueue = [];\r\n  componentDidMount() {\r\n    buildNetwork(this.state.x);\r\n    this.neuralNetwork = document.getElementById('graph-container');\r\n    this.addHoverEventListeners();\r\n  }\r\n  componentWillUnmount() {\r\n    this.deleteNetwork();\r\n    this.reset();\r\n  }\r\n  deleteNetwork() {\r\n    this.unMounting = true;\r\n    let svg = document.getElementById('nn-svg');\r\n    if (this.neuralNetwork.hasChildNodes() && svg)\r\n      this.neuralNetwork.removeChild(svg);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {}\r\n\r\n  async checkPauseStatus() {\r\n    while (this.state.pause && !this.state.stepMode) {\r\n      await new Promise((r) => setTimeout(r, 100));\r\n      continue;\r\n    }\r\n  }\r\n\r\n  linkNames = {\r\n    h0: ['i0-h0', 'i1-h0'],\r\n    h1: ['i0-h1', 'i1-h1'],\r\n    o0: ['h0-o0', 'h1-o0'],\r\n  };\r\n\r\n  reset() {\r\n    Object.entries(this.linkNames).forEach(([node, activeLinks]) => {\r\n      this.deActivateNode(node, 'forward');\r\n      this.deActivateNode(node, 'backward');\r\n      this.deActivateLink(activeLinks, 'forward');\r\n      this.deActivateLink(activeLinks, 'backward');\r\n    });\r\n\r\n    let nodeText = [\r\n      { id: 'h0-net', str: 'net = ?' },\r\n      { id: 'h0-out', str: 'out = ?' },\r\n      { id: 'h1-net', str: 'net = ?' },\r\n      { id: 'h1-out', str: 'out = ?' },\r\n      { id: 'o0-net', str: 'net = ?' },\r\n      { id: 'o0-out', str: 'out = ?' },\r\n      { id: 'o0-output', str: 'Output = ?' },\r\n      { id: 'o0-error', str: 'Error = ?' },\r\n    ];\r\n    Object.entries(nodeText).forEach(([id, str]) => {\r\n      let el = document.getElementById(id);\r\n      if (el) {\r\n        el.innerHTML = str;\r\n      }\r\n    });\r\n\r\n    this.deActivateNodeMatricies([\r\n      'w0-00',\r\n      'w0-01',\r\n      'w0-10',\r\n      'w0-11',\r\n      'b0-0',\r\n      'b0-1',\r\n      'w1-0',\r\n      'w1-1',\r\n      'b1',\r\n    ]);\r\n\r\n    let equations = [\r\n      'h0-net-eq',\r\n      'h0-out-eq',\r\n      'h1-net-eq',\r\n      'h1-out-eq',\r\n      'out-net-eq',\r\n      'out-out-eq',\r\n      'error-eq',\r\n      'dE-eq',\r\n      'dZ-out-eq',\r\n      'dOut-wrt-w1-eq',\r\n      'dW1-eq',\r\n      'dB1-eq',\r\n      'dOut-wrt-h-eq',\r\n      'dZ-h-eq',\r\n      'dH-wrt-w-eq',\r\n      'dW0-eq',\r\n      'dB0-eq',\r\n      'w0-update-eq',\r\n      'b0-update-eq',\r\n      'w1-update-eq',\r\n      'b1-update-eq',\r\n    ];\r\n    equations.forEach(this.deHighlightEquation);\r\n    // Remove all highlighted matrices\r\n    this.setState({\r\n      h0_net: null,\r\n      h0_out: null,\r\n      h1_net: null,\r\n      h1_out: null,\r\n      o0_net: null,\r\n      o0_out: null,\r\n      error: null,\r\n      dE: null,\r\n      dZ_out: null,\r\n      dZ_h: null,\r\n      dW1: null,\r\n      dW0: null,\r\n      dB0: null,\r\n      dB1: null,\r\n      activeKey: 'forward',\r\n      w0: [\r\n        [3, 4],\r\n        [6, 5],\r\n      ],\r\n      w1: [2, 4],\r\n      b0: [1, -6],\r\n      b1: [-3.93],\r\n      iteration: null,\r\n      learningRate: 0.75,\r\n    });\r\n    this.localAQ = [];\r\n    this.addHoverEventListeners();\r\n  }\r\n\r\n  addHoverEventListeners() {\r\n    //Attaches hover effects for biases and nodes\r\n    for (const [key, val] of Object.entries(this.nodeToMatrixMapping)) {\r\n      let biasEl = document.getElementById(val);\r\n      if (biasEl) {\r\n        biasEl.addEventListener('mouseover', () =>\r\n          this.activateNode(key, 'forward')\r\n        );\r\n        biasEl.addEventListener('mouseout', () =>\r\n          this.deActivateNode(key, 'forward')\r\n        );\r\n      }\r\n    }\r\n\r\n    //Attaches hover effects for weights and node links\r\n    for (const [key, val] of Object.entries(this.linkToMatrixMapping)) {\r\n      let linkToMatrixEl = document.getElementById(key);\r\n      if (linkToMatrixEl) {\r\n        linkToMatrixEl.addEventListener('mouseover', () =>\r\n          this.activateNodeMatricies([val])\r\n        );\r\n        linkToMatrixEl.addEventListener('mouseout', () =>\r\n          this.deActivateNodeMatricies([val])\r\n        );\r\n      }\r\n      let matrixToLinkEl = document.getElementById(val);\r\n      if (matrixToLinkEl) {\r\n        matrixToLinkEl.addEventListener('mouseover', () =>\r\n          this.activateLinks([key], 'forward')\r\n        );\r\n        matrixToLinkEl.addEventListener('mouseout', () =>\r\n          this.deActivateLink([key], 'forward')\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n  async activateNode(node, direction) {\r\n    let el = document.getElementById(node + '-node');\r\n    if (el) {\r\n      el.classList.add('active-node-nn-' + direction);\r\n    }\r\n  }\r\n  deActivateNode(node, direction) {\r\n    let el = document.getElementById(node + '-node');\r\n    if (el) {\r\n      el.classList.remove('active-node-nn-' + direction);\r\n    }\r\n  }\r\n  async activateLinks(links, direction) {\r\n    for (let link of links) {\r\n      let el = document.getElementById(link);\r\n      if (el) {\r\n        el.classList.add('active-link-nn-' + direction);\r\n      }\r\n    }\r\n  }\r\n  deActivateLink(links, direction) {\r\n    for (let link of links) {\r\n      let el = document.getElementById(link);\r\n      if (el) {\r\n        el.classList.remove('active-link-nn-' + direction);\r\n        if (el.classList.contains('fade-out-link-nn-' + direction)) {\r\n          el.classList.remove('fade-out-link-nn-' + direction);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  lookup = {\r\n    h0: ['w0-0', 'b0-0'],\r\n    h1: 'w0-1',\r\n  };\r\n  activateNodeMatricies(tds) {\r\n    for (let td of tds) {\r\n      let el = document.getElementById(td);\r\n      if (el) {\r\n        el.classList.add('active-nn-matrix');\r\n      }\r\n    }\r\n  }\r\n\r\n  deActivateNodeMatricies(tds) {\r\n    for (let td of tds) {\r\n      let el = document.getElementById(td);\r\n      if (el) {\r\n        el.classList.remove('active-nn-matrix');\r\n      }\r\n    }\r\n  }\r\n\r\n  highlightEquation(id) {\r\n    let el = document.getElementById(id);\r\n    if (el) {\r\n      el.classList.add('active-equation');\r\n    }\r\n  }\r\n\r\n  deHighlightEquation(id) {\r\n    let el = document.getElementById(id);\r\n    if (el) {\r\n      el.classList.remove('active-equation');\r\n    }\r\n  }\r\n\r\n  async renderAnimationQueue() {\r\n    await this.setState({ stepIndex: 0 });\r\n    let shouldWait = true;\r\n    while (this.state.stepIndex < this.state.animationQueue.length) {\r\n      let currentState = this.state.animationQueue[this.state.stepIndex];\r\n\r\n      if (currentState.highlightEq) {\r\n        this.highlightEquation(currentState.highlightEq);\r\n      }\r\n\r\n      if (currentState.activeMatrix) {\r\n        this.activateNodeMatricies(currentState.activeMatrix);\r\n      }\r\n\r\n      if (currentState.activeNode) {\r\n        for (let [id, direction] of currentState.activeNode) {\r\n          this.activateNode(id, direction);\r\n        }\r\n      }\r\n\r\n      if (currentState.activeLinks) {\r\n        for (let [id, direction] of currentState.activeLinks) {\r\n          this.activateLinks(id, direction);\r\n        }\r\n      }\r\n\r\n      if (currentState.fadeOutLinks) {\r\n        for (let [ids, direction] of currentState.fadeOutLinks) {\r\n          for (let id of ids) {\r\n            let el = document.getElementById(id);\r\n            if (el) {\r\n              el.classList.add('fade-out-link-nn-' + direction);\r\n            }\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentState.fadeOutNodes) {\r\n        for (let [id, direction] of currentState.fadeOutNodes) {\r\n          let el = document.getElementById(id + '-node');\r\n          if (el) {\r\n            el.classList.add('fade-out-node-nn-' + direction);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentState.updatedWeights) {\r\n        for (let nodeLink of currentState.updatedWeights) {\r\n          for (let link of nodeLink) {\r\n            let el = document.getElementById(link);\r\n            if (el) {\r\n              el.classList.add('flash-updates-parameters');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (currentState.updatedBias) {\r\n        for (let id of currentState.updatedBias) {\r\n          let el = document.getElementById(id);\r\n          if (el) {\r\n            el.classList.add('flash-updated-node');\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentState.error) {\r\n        let svg = document.getElementById('loss-plot');\r\n        let lossTab = document.getElementById('loss-container');\r\n\r\n        if (lossTab.hasChildNodes() && svg) {\r\n          lossTab.removeChild(svg);\r\n          let div = document.createElement('div');\r\n          div.setAttribute('id', 'loss-plot');\r\n          lossTab.appendChild(div);\r\n        }\r\n        this.losses.push({ x: currentState.iteration, y: currentState.error });\r\n        plotLoss(this.losses);\r\n      }\r\n\r\n      let waitTime =\r\n        currentState.waitTime !== undefined ? currentState.waitTime : 1500;\r\n\r\n      if (!shouldWait) {\r\n        waitTime = 0;\r\n      }\r\n\r\n      await new Promise((r) => setTimeout(r, waitTime / this.state.speed));\r\n      await this.checkPauseStatus();\r\n\r\n      await this.setState({ ...currentState });\r\n\r\n      if (currentState.nodeTextToUpdate) {\r\n        for (let obj of currentState.nodeTextToUpdate) {\r\n          let el = document.getElementById(obj.id);\r\n          if (el) {\r\n            el.innerHTML = obj.outputStr;\r\n          }\r\n        }\r\n      }\r\n\r\n      if (currentState.deHighlightEq) {\r\n        this.deHighlightEquation(currentState.deHighlightEq);\r\n      }\r\n      if (currentState.deActivateLink) {\r\n        for (let [id, direction] of currentState.deActivateLink) {\r\n          this.deActivateLink(id, direction);\r\n        }\r\n      }\r\n      if (currentState.deActiveNode) {\r\n        for (let [id, direction] of currentState.deActiveNode) {\r\n          this.deActivateNode(id, direction);\r\n        }\r\n      }\r\n      if (currentState.deActiveMatrix) {\r\n        this.deActivateNodeMatricies(currentState.deActiveMatrix);\r\n      }\r\n      if (currentState.updatedWeights) {\r\n        for (let nodeLink of currentState.updatedWeights) {\r\n          for (let link of nodeLink) {\r\n            let el = document.getElementById(link);\r\n            if (el) {\r\n              el.classList.remove('flash-updates-parameters');\r\n            }\r\n          }\r\n        }\r\n      }\r\n      if (currentState.updatedBias) {\r\n        for (let id of currentState.updatedBias) {\r\n          let el = document.getElementById(id);\r\n          if (el) {\r\n            el.classList.remove('flash-updated-node');\r\n          }\r\n        }\r\n      }\r\n      if (currentState.fadeOutNodes) {\r\n        for (let [id, direction] of currentState.fadeOutNodes) {\r\n          let el = document.getElementById(id + '-node');\r\n          if (el) {\r\n            el.classList.remove('fade-out-node-nn-' + direction);\r\n          }\r\n        }\r\n      }\r\n\r\n      if (!this.state.stepMode) {\r\n        this.setState({ stepIndex: this.state.stepIndex + 1 });\r\n        shouldWait = true;\r\n      } else {\r\n        //     // need to reset everything up to the previous state starting from beggining since we only update what is neccessary at each element of the animation queue\r\n\r\n        this.setState({\r\n          stepMode: false,\r\n          pause: true,\r\n        });\r\n\r\n        this.reset();\r\n        this.neuralNetwork = document.getElementById('graph-container');\r\n        this.addHoverEventListeners();\r\n\r\n        for (let i = 0; i < this.state.stepIndex; i++) {\r\n          let prevState = this.state.animationQueue[i];\r\n          this.setState({ ...prevState });\r\n\r\n          if (prevState.highlightEq) {\r\n            this.highlightEquation(prevState.highlightEq);\r\n          }\r\n\r\n          if (prevState.activeMatrix) {\r\n            this.activateNodeMatricies(prevState.activeMatrix);\r\n          }\r\n\r\n          if (prevState.activeNode) {\r\n            for (let [id, direction] of prevState.activeNode) {\r\n              this.activateNode(id, direction);\r\n            }\r\n          }\r\n\r\n          if (prevState.activeLinks) {\r\n            for (let [id, direction] of prevState.activeLinks) {\r\n              this.activateLinks(id, direction);\r\n            }\r\n          }\r\n\r\n          if (prevState.nodeTextToUpdate) {\r\n            for (let obj of prevState.nodeTextToUpdate) {\r\n              document.getElementById(obj.id).innerHTML = obj.outputStr;\r\n            }\r\n          }\r\n\r\n          if (prevState.deHighlightEq) {\r\n            this.deHighlightEquation(prevState.deHighlightEq);\r\n          }\r\n          if (prevState.deActivateLink) {\r\n            for (let [id, direction] of prevState.deActivateLink) {\r\n              this.deActivateLink(id, direction);\r\n            }\r\n          }\r\n          if (prevState.deActiveNode) {\r\n            for (let [id, direction] of prevState.deActiveNode) {\r\n              this.deActivateNode(id, direction);\r\n            }\r\n          }\r\n          if (prevState.deActiveMatrix) {\r\n            this.deActivateNodeMatricies(prevState.deActiveMatrix);\r\n          }\r\n        }\r\n        shouldWait = false;\r\n      }\r\n    }\r\n    this.setState({ animationQueue: [], pause: false, executing: false });\r\n  }\r\n\r\n  async nNLearn() {\r\n    let w0 = [\r\n      [3, 4],\r\n      [6, 5],\r\n    ];\r\n    let w1 = [2, 4];\r\n    let b0 = [1, -6];\r\n    let b1 = [-3.93];\r\n\r\n    // RELU SETTINGS\r\n    // let actual = 10;\r\n    // let alpha = 0.05;\r\n\r\n    // SIGMOID SETTINGS\r\n    let actual = 1;\r\n    let n_iterations = 16;\r\n    let x = this.state.x;\r\n\r\n    const sigmoid = (v) => 1 / (1 + exp(-v));\r\n    // const relu = (x) => max(x, 0);\r\n    const errorFunction = (pred, targ) => (1 / 2) * (targ - pred) ** 2;\r\n    const dZ = (v) => v * (1 - v); // sigmoid derivative\r\n    // const dZ = (x) => Number(x > 0); // relu derivative\r\n\r\n    for (let i = 1; i < n_iterations; i++) {\r\n      console.log(`Iteration: ${i}`);\r\n\r\n      this.localAQ.push({\r\n        waitTime: 0,\r\n        prevW0: this.state.w0,\r\n        prevW1: this.state.w1,\r\n        prevB0: this.state.b0,\r\n        prevB1: this.state.b1,\r\n        newW0: null,\r\n        newB0: null,\r\n        newW1: null,\r\n        newB1: null,\r\n        iteration: i,\r\n        activeKey: 'forward',\r\n      });\r\n\r\n      // Forward\r\n      let h_net = add(multiply(x, transpose(w0)), b0);\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'h0-net-eq',\r\n        activeNode: [['h0', 'forward']],\r\n        activeLinks: [[this.linkNames['h0'], 'forward']],\r\n        activeMatrix: ['w0-00', 'w0-01', 'b0-0'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        h0_net: h_net[0],\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'h0-net',\r\n            outputStr: 'net = ' + round(h_net[0], 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'h0-net-eq',\r\n      });\r\n      this.localAQ.push({\r\n        highlightEq: 'h0-out-eq',\r\n      });\r\n\r\n      let h_out = h_net.map((e) => sigmoid(e));\r\n      // let h_out = h_net.map((e) => relu(e));\r\n\r\n      this.localAQ.push({\r\n        h0_out: h_out[0],\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'h0-out',\r\n            outputStr: 'out = ' + round(h_out[0], 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        fadeOutNodes: [['h0', 'forward']],\r\n        fadeOutLinks: [[this.linkNames['h0'], 'forward']],\r\n        deHighlightEq: 'h0-out-eq',\r\n        deActiveNode: [['h0', 'forward']],\r\n        deActivateLink: [[this.linkNames['h0'], 'forward']],\r\n        deActiveMatrix: ['w0-00', 'w0-01', 'b0-0'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'h1-net-eq',\r\n        activeNode: [['h1', 'forward']],\r\n        activeLinks: [[this.linkNames['h1'], 'forward']],\r\n        activeMatrix: ['w0-10', 'w0-11', 'b0-1'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        h1_net: h_net[1],\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'h1-net',\r\n            outputStr: 'net = ' + round(h_net[1], 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'h1-net-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'h1-out-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        h1_out: h_out[1],\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'h1-out',\r\n            outputStr: 'out = ' + round(h_out[1], 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        fadeOutNodes: [['h1', 'forward']],\r\n        fadeOutLinks: [[this.linkNames['h1'], 'forward']],\r\n        deHighlightEq: 'h1-out-eq',\r\n        deActiveNode: [['h1', 'forward']],\r\n        deActivateLink: [[this.linkNames['h1'], 'forward']],\r\n        deActiveMatrix: ['w0-10', 'w0-11', 'b0-1'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'out-net-eq',\r\n        activeNode: [['o0', 'forward']],\r\n        activeLinks: [[this.linkNames['o0'], 'forward']],\r\n        activeMatrix: ['w1-0', 'w1-1', 'b1'],\r\n      });\r\n\r\n      let out_net = add(multiply(h_out, transpose(w1)), b1);\r\n\r\n      this.localAQ.push({\r\n        o0_net: out_net,\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'o0-net',\r\n            outputStr: 'net = ' + round(out_net, 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'out-net-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'out-out-eq',\r\n      });\r\n\r\n      let out_out = sigmoid(out_net);\r\n\r\n      this.localAQ.push({\r\n        o0_out: out_out,\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'o0-output',\r\n            outputStr: 'Output = ' + round(out_out, 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        fadeOutLinks: [[this.linkNames['o0'], 'forward']],\r\n        deHighlightEq: 'out-out-eq',\r\n        deActivateLink: [[this.linkNames['o0'], 'forward']],\r\n        deActiveMatrix: ['w1-0', 'w1-1', 'b1'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'error-eq',\r\n      });\r\n\r\n      let error = errorFunction(out_out, actual);\r\n\r\n      this.localAQ.push({\r\n        error: round(error, 3),\r\n        iteration: i,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        fadeOutNodes: [['o0', 'forward']],\r\n        deHighlightEq: 'error-eq',\r\n        deActiveNode: [['o0', 'forward']],\r\n        nodeTextToUpdate: [\r\n          {\r\n            id: 'o0-error',\r\n            outputStr: 'Error = ' + round(error, 3),\r\n          },\r\n        ],\r\n      });\r\n\r\n      // Backprop\r\n\r\n      this.localAQ.push({\r\n        activeKey: 'backprop',\r\n        highlightEq: 'dE-eq',\r\n        activeNode: [['o0', 'backward']],\r\n      });\r\n\r\n      let dE = -(actual - out_out);\r\n\r\n      this.localAQ.push({\r\n        dE: dE,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dE-eq',\r\n      });\r\n      this.localAQ.push({\r\n        highlightEq: 'dZ-out-eq',\r\n      });\r\n\r\n      let dZ_out = dZ(out_out); // d_out_out_wrt_d_out_net\r\n\r\n      this.localAQ.push({\r\n        dZ_out: dZ_out,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dZ-out-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dOut-wrt-w1-eq',\r\n        activeLinks: [[this.linkNames['o0'], 'backward']],\r\n      });\r\n\r\n      let dOut_wrt_w1 = h_out;\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dOut-wrt-w1-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dW1-eq',\r\n      });\r\n\r\n      let dw1 = multiply(dE, multiply(dZ_out, dOut_wrt_w1));\r\n\r\n      this.localAQ.push({\r\n        dW1: dw1,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dW1-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dB1-eq',\r\n      });\r\n\r\n      let db1 = multiply(dE, dZ(out_out));\r\n\r\n      this.localAQ.push({\r\n        dB1: db1,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dB1-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dOut-wrt-h-eq',\r\n        activeNode: [\r\n          ['h0', 'backward'],\r\n          ['h1', 'backward'],\r\n        ],\r\n      });\r\n\r\n      let dOut_wrt_h = w1;\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dOut-wrt-h-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dZ-h-eq',\r\n      });\r\n\r\n      let dZ_h = h_out.map((e) => dZ(e)); // d_h_out_wrt_d_h_net\r\n\r\n      this.localAQ.push({\r\n        dZ_h: dZ_h,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dZ-h-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dH-wrt-w-eq',\r\n        activeLinks: [\r\n          [this.linkNames['h0'], 'backward'],\r\n          [this.linkNames['h1'], 'backward'],\r\n        ],\r\n      });\r\n\r\n      let dh_wrt_w0 = x;\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dH-wrt-w-eq',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'dW0-eq',\r\n      });\r\n\r\n      let dw0 = multiply(\r\n        dotMultiply(dE, dZ(out_out)),\r\n        dotMultiply(dOut_wrt_h, dotMultiply(dZ_h, dh_wrt_w0))\r\n      );\r\n\r\n      this.localAQ.push({\r\n        dW0: dw0,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'dW0-eq',\r\n      });\r\n      this.localAQ.push({\r\n        highlightEq: 'dB0-eq',\r\n      });\r\n\r\n      let db0 = dotMultiply(dE * dZ(out_out), dotMultiply(dOut_wrt_h, dZ_h));\r\n\r\n      this.localAQ.push({\r\n        dB0: db0,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        fadeOutNodes: [\r\n          ['o0', 'backward'],\r\n          ['h0', 'backward'],\r\n          ['h1', 'backward'],\r\n        ],\r\n        fadeOutLinks: [\r\n          [this.linkNames['h0'], 'backward'],\r\n          [this.linkNames['h1'], 'backward'],\r\n          [this.linkNames['o0'], 'backward'],\r\n        ],\r\n        deHighlightEq: 'dB0-eq',\r\n        deActiveNode: [\r\n          ['o0', 'backward'],\r\n          ['h0', 'backward'],\r\n          ['h1', 'backward'],\r\n        ],\r\n        deActivateLink: [\r\n          [this.linkNames['h0'], 'backward'],\r\n          [this.linkNames['h1'], 'backward'],\r\n          [this.linkNames['o0'], 'backward'],\r\n        ],\r\n        deActiveMatrix: ['w1-0', 'w1-1', 'b1'],\r\n      });\r\n\r\n      // UPDATES\r\n      this.localAQ.push({\r\n        activeKey: 'update',\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'w0-update-eq',\r\n        activeMatrix: ['w0-00', 'w0-01', 'w0-10', 'w0-11'],\r\n        updatedWeights: [this.linkNames['h0'], this.linkNames['h1']],\r\n      });\r\n\r\n      w0 = subtract(w0, [\r\n        dotMultiply(this.state.learningRate, dw0),\r\n        dotMultiply(this.state.learningRate, dw0),\r\n      ]);\r\n      this.localAQ.push({\r\n        newW0: w0,\r\n        w0: w0,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'w0-update-eq',\r\n        deActiveMatrix: ['w0-00', 'w0-01', 'w0-10', 'w0-11'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'b0-update-eq',\r\n        activeMatrix: ['b0-0', 'b0-1'],\r\n        updatedBias: ['h0-node', 'h1-node'],\r\n      });\r\n\r\n      b0 = subtract(b0, dotMultiply(this.state.learningRate, db0));\r\n\r\n      this.localAQ.push({\r\n        newB0: b0,\r\n        b0: b0,\r\n        nodeTextToUpdate: [{ id: 'o0-bias', outputStr: 'b = ' + round(b1, 3) }],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'b0-update-eq',\r\n        deActiveMatrix: ['b0-0', 'b0-1'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'w1-update-eq',\r\n        activeMatrix: ['w1-0', 'w1-1'],\r\n        updatedWeights: [this.linkNames['o0']],\r\n      });\r\n\r\n      w1 = subtract(w1, dotMultiply(this.state.learningRate, dw1));\r\n      this.localAQ.push({\r\n        newW1: w1,\r\n        w1: w1,\r\n      });\r\n\r\n      this.localAQ.push({\r\n        deHighlightEq: 'w1-update-eq',\r\n        deActiveMatrix: ['w1-0', 'w1-1'],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        highlightEq: 'b1-update-eq',\r\n        activeMatrix: ['b1'],\r\n        updatedBias: ['o0-node'],\r\n      });\r\n\r\n      b1 = subtract(b1, dotMultiply(this.state.learningRate, db1));\r\n\r\n      this.localAQ.push({\r\n        newB1: b1,\r\n        b1: b1,\r\n        nodeTextToUpdate: [\r\n          { id: 'h0-bias', outputStr: 'b = ' + round(b0[0], 3) },\r\n          { id: 'h1-bias', outputStr: 'b = ' + round(b0[1], 3) },\r\n        ],\r\n      });\r\n\r\n      this.localAQ.push({\r\n        waitTime: 0,\r\n        deHighlightEq: 'b1-update-eq',\r\n        deActiveMatrix: ['b1'],\r\n        output: round(out_out, 3),\r\n        w0: w0,\r\n        w1: w1,\r\n        b0: b0,\r\n        b1: b1,\r\n        h0_net: null,\r\n        h0_out: null,\r\n        h1_net: null,\r\n        h1_out: null,\r\n        o0_net: null,\r\n        o0_out: null,\r\n        error: null,\r\n        dE: null,\r\n        dZ_out: null,\r\n        dZ_h: null,\r\n        dW1: null,\r\n        dW0: null,\r\n        dB0: null,\r\n        dB1: null,\r\n      });\r\n    }\r\n    this.setState({\r\n      animationQueue: this.localAQ,\r\n    });\r\n    // plotLoss(this.losses);\r\n    this.renderAnimationQueue();\r\n  }\r\n\r\n  render2x2Matrix(a, yLabel, xLabel) {\r\n    return (\r\n      <table className={'nn-matrix'}>\r\n        <tbody>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td colSpan=\"2\">{/* <i>{xLabel}</i> */}</td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td>\r\n              <i>i0</i>\r\n            </td>\r\n            <td>\r\n              <i>i1</i>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td rowSpan=\"2\" style={{ padding: 0 }}>\r\n               <i>{yLabel}</i> \r\n            </td> */}\r\n            <td>\r\n              <i>h0</i>\r\n            </td>\r\n            <td id={'w0-00'} className={'left'}>\r\n              {round(a[0][0], 3)}\r\n            </td>\r\n            <td id={'w0-01'} className={'right'}>\r\n              {round(a[0][1], 3)}\r\n            </td>\r\n          </tr>\r\n\r\n          <tr>\r\n            <td>\r\n              <i>h1</i>\r\n            </td>\r\n            <td id={'w0-10'} className={'left'}>\r\n              {round(a[1][0], 3)}\r\n            </td>\r\n            <td id={'w0-11'} className={'right'}>\r\n              {round(a[1][1], 3)}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td colSpan=\"2\">W0</td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render1x2Matrix(a, yLabel, yNode, xLabel, xNode) {\r\n    return (\r\n      <table className={'nn-matrix'}>\r\n        <tbody>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td colSpan=\"2\">{/* <i>{xLabel}</i> */}</td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td>\r\n              <i>{xNode}0</i>\r\n            </td>\r\n            <td>\r\n              <i>{xNode}1</i>\r\n            </td>\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td style={{ padding: 0 }}><i>{yLabel}</i></td> */}\r\n            <td>\r\n              <i>{yNode}0</i>\r\n            </td>\r\n            <td id={'w1-0'} className={'left'}>\r\n              {round(a[0], 3)}\r\n            </td>\r\n            <td id={'w1-1'} className={'right'}>\r\n              {round(a[1], 3)}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td colSpan=\"2\">W1</td>\r\n            <td></td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render2x1Matrix(a, yLabel, yNode, xLabel, xNode) {\r\n    return (\r\n      <table className={'nn-matrix'}>\r\n        <tbody>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td>{/* <i>{xLabel}</i> */}</td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td>\r\n              <i>{xNode}0</i>\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td rowSpan=\"2\" style={{ padding: 0 }}>\r\n              <i>{yLabel}</i>\r\n            </td> */}\r\n            <td>\r\n              <i>{yNode}0</i>\r\n            </td>\r\n            <td id={'b0-0'} className={'left-and-right'}>\r\n              {round(a[0], 3)}\r\n            </td>\r\n          </tr>\r\n          <tr>\r\n            <td>\r\n              <i>{yNode}1</i>\r\n            </td>\r\n            <td id={'b0-1'} className={'left-and-right'}>\r\n              {round(a[1], 3)}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  render1x1Matrix(a, yLabel, yNode, xLabel, xNode) {\r\n    return (\r\n      <table className={'nn-matrix'}>\r\n        <tbody>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td>{/* <i>{xLabel}</i> */}</td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td></td> */}\r\n            <td></td>\r\n            <td>\r\n              <i>{xNode}1</i>\r\n            </td>\r\n\r\n            <td></td>\r\n          </tr>\r\n          <tr>\r\n            {/* <td style={{ padding: 0 }}><i>{yLabel}</i></td> */}\r\n            <td>\r\n              <i>{yNode}0</i>\r\n            </td>\r\n            <td id={'b1'} className={'left-and-right'}>\r\n              {round(a[0], 3)}\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n    );\r\n  }\r\n\r\n  handleTabSelect = (key) => {\r\n    console.log(key);\r\n    this.setState({ activeKey: key });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={'row'}>\r\n        <div className={'col-6'} id={'graph-container'}>\r\n          <div className={'row'} style={{ zIndex: 5 }}>\r\n            <button\r\n              onClick={async () => {\r\n                await this.nNLearn();\r\n              }}\r\n            >\r\n              Learn\r\n            </button>\r\n            <button\r\n              id={'reset-button'}\r\n              onClick={async () => {\r\n                await this.setState({\r\n                  pause: false,\r\n                  stop: true,\r\n                  animationQueue: [],\r\n                  runningAlg: null,\r\n                });\r\n                this.deleteNetwork();\r\n                buildNetwork(this.state.x);\r\n                this.reset();\r\n              }}\r\n            >\r\n              Reset\r\n            </button>\r\n            <div className={'divider'}></div>\r\n            <button\r\n              onClick={() => {\r\n                let newStepIndex = this.state.stepIndex - 1;\r\n                while (!this.state.animationQueue[newStepIndex].highlightEq) {\r\n                  newStepIndex -= 1;\r\n                }\r\n                this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepBackward />\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                this.setState({ pause: !this.state.pause, stepMode: false });\r\n              }}\r\n            >\r\n              {this.state.pause ? <FaPlay /> : <FaPause />}\r\n            </button>\r\n            <button\r\n              onClick={() => {\r\n                let newStepIndex = this.state.stepIndex + 1;\r\n                while (!this.state.animationQueue[newStepIndex].highlightEq) {\r\n                  newStepIndex += 1;\r\n                }\r\n                this.setState({\r\n                  stepIndex: newStepIndex,\r\n                  pause: true,\r\n                  stepMode: true,\r\n                });\r\n              }}\r\n            >\r\n              <FaStepForward />\r\n            </button>\r\n            <form onSubmit={(event) => event.preventDefault()}>\r\n              <label>\r\n                Speed:\r\n                <input\r\n                  style={{ width: '50px' }}\r\n                  type=\"number\"\r\n                  value={this.state.speed}\r\n                  onChange={(event) =>\r\n                    this.setState({\r\n                      speed: event.target.value,\r\n                    })\r\n                  }\r\n                  max=\"1000\"\r\n                  min=\"1\"\r\n                />\r\n              </label>\r\n              <label>\r\n                Learning Rate:\r\n                <input\r\n                  style={{ width: '65px' }}\r\n                  type=\"number\"\r\n                  value={this.state.learningRate}\r\n                  onChange={(event) =>\r\n                    this.setState({\r\n                      learningRate: event.target.value,\r\n                    })\r\n                  }\r\n                  max=\"1\"\r\n                  min=\"0\"\r\n                  step=\"0.05\"\r\n                />\r\n              </label>\r\n            </form>\r\n\r\n            <br></br>\r\n            <table\r\n              style={{\r\n                border: 'none',\r\n                borderCollapse: 'collapse',\r\n                fontSize: '36px',\r\n                marginLeft: '100px',\r\n              }}\r\n            >\r\n              <tbody>\r\n                <tr>\r\n                  <td\r\n                    style={{\r\n                      border: 'none',\r\n                      width: '200px',\r\n                      textAlign: 'left',\r\n                    }}\r\n                  >\r\n                    Iteration: {this.state.iteration}\r\n                  </td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </div>\r\n        </div>\r\n        <div className={'col-6'}>\r\n          <Tabs\r\n            activeKey={this.state.activeKey}\r\n            onSelect={this.handleTabSelect}\r\n            id=\"uncontrolled-tab-example\"\r\n          >\r\n            <Tab\r\n              eventKey=\"forward\"\r\n              title=\"Forward\"\r\n              style={{ fontSize: '22px', marginLeft: '-10px' }}\r\n            >\r\n              <div className={'row'}>\r\n                <h1>Forward Propogation</h1> <br></br>\r\n              </div>\r\n              <div className={'row'}>\r\n                <div id={'h0-net-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`h_0 net = w_{00}^0 * x_0 + w_{01}^0 * x_1 + b_0^0 = ${round(\r\n                      this.state.w0[0][0],\r\n                      3\r\n                    )} *${this.state.x[0]} + ${round(\r\n                      this.state.w0[0][1],\r\n                      3\r\n                    )} * ${this.state.x[1]} + ${round(this.state.b0[0], 3)} = \r\n              ${this.state.h0_net ? round(this.state.h0_net, 3) : '?'}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={'row'} style={{ marginTop: '-20px' }}>\r\n                <div id={'h0-out-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`h_0 out = \\sigma (h_0 net) =  \r\n              ${this.state.h0_out ? round(this.state.h0_out, 3) : '?'}\r\n              `}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={'row'}>\r\n                <div id={'h1-net-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`h_1 net = w_{10}^0 * x_0 + w_{11}^0 * x_1 + b_1^0 = ${round(\r\n                      this.state.w0[1][0],\r\n                      3\r\n                    )} *${this.state.x[0]} + ${round(\r\n                      this.state.w0[1][1],\r\n                      3\r\n                    )} * ${this.state.x[1]} + ${round(this.state.b0[1], 3)} = \r\n              ${this.state.h1_net !== null ? round(this.state.h1_net, 3) : '?'}\r\n              \r\n              `}\r\n                  />{' '}\r\n                </div>\r\n              </div>\r\n              <div className={'row'} style={{ marginTop: '-20px' }}>\r\n                <div id={'h1-out-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`h_1 out = \\sigma (h_1 net) =  \r\n              ${this.state.h1_out ? round(this.state.h1_out, 3) : '?'}\r\n              `}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'}>\r\n                <div id={'out-net-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`o_0 net = w_{0}^1 * x_0 + w_{1}^1 * x_1 + b^1 = ${round(\r\n                      this.state.w1[0],\r\n                      3\r\n                    )} *${this.state.x[0]} + ${round(this.state.w1[1], 3)} * ${\r\n                      this.state.x[1]\r\n                    } + ${round(this.state.b1, 3)} = \r\n              ${this.state.o0_net ? round(this.state.o0_net, 3) : '?'}\r\n              \r\n              `}\r\n                  />{' '}\r\n                </div>\r\n              </div>\r\n              <div className={'row'} style={{ marginTop: '-20px' }}>\r\n                <div id={'out-out-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`o_0 out = \\sigma (o_0 net) =  \r\n              ${this.state.o0_out ? round(this.state.o0_out, 3) : '?'}\r\n              `}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'}>\r\n                <div id={'error-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw`error =  \\frac{1}{2} * (o_0 net - target)^2 =  \r\n                    \\frac{1}{2} * (${\r\n                      this.state.o0_out ? round(this.state.o0_out, 3) : '?'\r\n                    }\r\n               - 1)^2 = ${this.state.error ? round(this.state.error, 3) : '?'}\r\n              `}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab\r\n              eventKey=\"backprop\"\r\n              title=\"Backprop\"\r\n              style={{ fontSize: '17px', marginLeft: '-60px' }}\r\n            >\r\n              <div className={'row'} style={{ marginTop: '10px' }}>\r\n                <h1>Backpropagation</h1> <br></br>\r\n              </div>\r\n\r\n              <div className={'row'}>\r\n                <div id={'dE-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \\frac{\\partial E}{ \\partial output} \r\n                    = - (target - output) \r\n                    = - (1 - \r\n                    ${this.state.o0_out ? round(this.state.o0_out, 3) : '?'}) \r\n                    = \r\n                    ${this.state.dE ? round(this.state.dE, 3) : '?'}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={'row'} style={{ marginTop: '-10px' }}>\r\n                <div id={'dZ-out-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \\frac{\\partial output}{ \\partial o_0 net} \r\n                    = output * (1 - output) = \r\n                    ${this.state.o0_out ? round(this.state.o0_out, 3) : '?'} \r\n                    * (1 - \r\n                    ${this.state.o0_out ? round(this.state.o0_out, 3) : '?'}) \r\n                    = \r\n                    ${this.state.dZ_out ? round(this.state.dZ_out, 3) : '?'}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '20px' }}>\r\n                <div id={'dOut-wrt-w1-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \\frac{\\partial o_0 net}{ \\partial w1} \r\n                    = \\pmatrix{h_0 out \\\\ h_1 out} = \r\n                    \\pmatrix{\r\n                      ${this.state.h0_out ? round(this.state.h0_out, 3) : '?'} \r\n                      \\\\ \r\n                      ${this.state.h1_out ? round(this.state.h1_out, 3) : '?'}\r\n                    }`}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '-20px' }}>\r\n                <div id={'dW1-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \r\n                    \\frac{\\partial E}{ \\partial w1} \r\n                    = \\frac{\\partial E}{ \\partial output} \r\n                    * \\frac{\\partial output}{ \\partial o_0 net} \r\n                    * \\frac{\\partial o_0 net}{ \\partial w1} \r\n                    = ${this.state.dE ? round(this.state.dE, 3) : '?'} \r\n                    *  ${this.state.dZ_out ? round(this.state.dZ_out, 3) : '?'}\r\n                    *   \\pmatrix{\r\n                        ${\r\n                          this.state.h0_out ? round(this.state.h0_out, 3) : '?'\r\n                        } \r\n                        \\\\ \r\n                        ${this.state.h1_out ? round(this.state.h1_out, 3) : '?'}\r\n                        }\r\n                    = \\pmatrix{\r\n                        ${this.state.dW1 ? round(this.state.dW1[0], 3) : '?'}\r\n                        \\\\\r\n                        ${this.state.dW1 ? round(this.state.dW1[1], 3) : '?'}\r\n                      }`}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '-20px' }}>\r\n                <div id={'dB1-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \r\n                    \\frac{\\partial Error}{ \\partial b_1} \r\n                    = \\frac{\\partial E}{ \\partial output} \r\n                    * \\frac{\\partial output}{ \\partial b_1}  \r\n                    = ${this.state.dE ? round(this.state.dE, 3) : '?'} \r\n                    *  ${this.state.dZ_out ? round(this.state.dZ_out, 3) : '?'}\r\n                    = ${this.state.dB1 ? round(this.state.dB1, 3) : '?'}`}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '25px' }}>\r\n                <div id={'dOut-wrt-h-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \r\n                    \\frac{\\partial o_0 net}{ \\partial h out} \r\n                    = W1 \r\n                    = \\pmatrix{\r\n                      ${this.state.w1[0] ? round(this.state.w1[0], 3) : '?'}\r\n                      \\\\ \r\n                      ${this.state.w1[1] ? round(this.state.w1[1], 3) : '?'}\r\n                    }`}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '-25px' }}>\r\n                <div id={'dZ-h-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \r\n                    \\frac{\\partial h out}{ \\partial h_{net}} = h_{out} * (1 - h_{out}) \r\n                    = \\pmatrix{${\r\n                      this.state.h0_out ? round(this.state.h0_out, 3) : '?'\r\n                    } \\\\ ${\r\n                      this.state.h1_out ? round(this.state.h1_out, 3) : '?'\r\n                    }}\r\n               * (1 - \r\n                \\pmatrix{${\r\n                  this.state.h0_out ? round(this.state.h0_out, 3) : '?'\r\n                } \\\\ ${this.state.h1_out ? round(this.state.h1_out, 3) : '?'}}\r\n                 = \r\n                 \\pmatrix{${\r\n                   this.state.dZ_h ? round(this.state.dZ_h[0], 3) : '?'\r\n                 } \\\\ ${this.state.dZ_h ? round(this.state.dZ_h[1], 3) : '?'}}\r\n                 `}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '-25px' }}>\r\n                <div id={'dH-wrt-w-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \r\n                    \\frac{\\partial h_{net}}{ \\partial w0} \r\n                    = X \r\n                    = \\pmatrix{\r\n                      ${this.state.x[0] ? round(this.state.x[0], 3) : '?'} \r\n                      \\\\ \r\n                      ${\r\n                        this.state.x[1] !== null\r\n                          ? round(this.state.x[1], 3)\r\n                          : '?'\r\n                      }\r\n                    }\r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'} style={{ marginTop: '-25px' }}>\r\n                <div id={'dW0-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \\frac{\\partial E}{ \\partial w0} = \\frac{\\partial E}{ \\partial output} * \\frac{\\partial output}{ \\partial o_0 net} * \\frac{\\partial o_0 net}{ \\partial h_{out}} *  \\frac{\\partial h_{out}}{ \\partial h_{net}} *  \\frac{\\partial h_{net}}{ \\partial W0} \r\n              = ${this.state.dE ? round(this.state.dE, 3) : '?'} \r\n              *  \r\n              ${this.state.dZ_out ? round(this.state.dZ_out, 3) : '?'} \r\n              *   \r\n              \\pmatrix{${\r\n                this.state.w1[0] ? round(this.state.w1[0], 3) : '?'\r\n              } \\\\ ${this.state.w1[1] ? round(this.state.w1[1], 3) : '?'}}\r\n              *\r\n              \\pmatrix{${\r\n                this.state.dZ_h ? round(this.state.dZ_h[0], 3) : '?'\r\n              } \\\\ ${this.state.dZ_h ? round(this.state.dZ_h[1], 3) : '?'}}\r\n              *\r\n              \\pmatrix{${\r\n                this.state.x[0] ? round(this.state.x[0], 3) : '?'\r\n              } \\\\ ${\r\n                      this.state.x[1] !== null ? round(this.state.x[1], 3) : '?'\r\n                    }}\r\n               = \r\n               \\pmatrix{\r\n                ${this.state.dW0 ? round(this.state.dW0[0], 3) : '?'}\r\n                 \\\\\r\n                 ${this.state.dW0 ? round(this.state.dW0[1], 3) : '?'}}\r\n  \r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={'row'} style={{ marginTop: '-20px' }}>\r\n                <div id={'dB0-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` \\frac{\\partial Error}{ \\partial b_0} = \r\n              \\frac{\\partial E}{ \\partial output} * \\frac{\\partial output}{ \\partial o_0 net} \r\n              * \\frac{\\partial o_0 net}{ \\partial h_{out}} \r\n              * \\frac{\\partial h_{out}}{ \\partial b_0}   \r\n              = ${this.state.dE ? round(this.state.dE, 3) : '?'} *  ${\r\n                      this.state.dZ_out ? round(this.state.dZ_out, 3) : '?'\r\n                    }\r\n               * \\pmatrix{${\r\n                 this.state.w1[0] ? round(this.state.w1[0], 3) : '?'\r\n               } \\\\ ${this.state.w1[1] ? round(this.state.w1[1], 3) : '?'}}\r\n              * \\pmatrix{${\r\n                this.state.dZ_h ? round(this.state.dZ_h[0], 3) : '?'\r\n              } \\\\ ${this.state.dZ_h ? round(this.state.dZ_h[1], 3) : '?'}}\r\n               = \r\n               \\pmatrix{\r\n                ${this.state.dB0 ? round(this.state.dB0[0], 3) : '?'}\r\n                 \\\\\r\n                 ${this.state.dB0 ? round(this.state.dB0[1], 3) : '?'}}\r\n  \r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab eventKey=\"update\" title=\"Update\" style={{ fontSize: '22px' }}>\r\n              <div className={'row'} style={{ marginTop: '10px' }}>\r\n                <h1>Parameter Update</h1> <br></br>\r\n              </div>\r\n\r\n              <div className={'row'}>\r\n                <div id={'w0-update-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` w0 = w0 - \\alpha * \\frac{\\partial E}{ \\partial w0} = \r\n              \\pmatrix{\r\n                ${this.state.prevW0 ? round(this.state.prevW0[0][0], 3) : '?'}\r\n                &\r\n                ${this.state.prevW0 ? round(this.state.prevW0[0][1], 3) : '?'}\r\n                 \\\\\r\n                 ${this.state.prevW0 ? round(this.state.prevW0[1][0], 3) : '?'}\r\n                 &\r\n                 ${this.state.prevW0 ? round(this.state.prevW0[1][1], 3) : '?'}}\r\n                 - ${this.state.learningRate}  * \r\n                 \\pmatrix{\r\n                  ${this.state.dW0 ? round(this.state.dW0[0], 3) : '?'}\r\n                   \\\\\r\n                   ${this.state.dW0 ? round(this.state.dW0[1], 3) : '?'}}\r\n                    = \r\n                    \\pmatrix{\r\n                      ${\r\n                        this.state.newW0\r\n                          ? round(this.state.newW0[0][0], 3)\r\n                          : '?'\r\n                      }\r\n                      &\r\n                      ${\r\n                        this.state.newW0\r\n                          ? round(this.state.newW0[0][1], 3)\r\n                          : '?'\r\n                      }\r\n                       \\\\\r\n                       ${\r\n                         this.state.newW0\r\n                           ? round(this.state.newW0[1][0], 3)\r\n                           : '?'\r\n                       }\r\n                       &\r\n                       ${\r\n                         this.state.newW0\r\n                           ? round(this.state.newW0[1][1], 3)\r\n                           : '?'\r\n                       }}\r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className={'row'}>\r\n                <div id={'b0-update-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` b0 = b0 - \\alpha * \\frac{\\partial E}{ \\partial b0} = \r\n              \\pmatrix{\r\n                ${this.state.prevB0 ? round(this.state.prevB0[0], 3) : '?'}\r\n                 \\\\\r\n                 ${this.state.prevB0 ? round(this.state.prevB0[1], 3) : '?'}\r\n                 }\r\n                 - ${this.state.learningRate}  * \r\n                 \\pmatrix{\r\n                  ${this.state.dB0 ? round(this.state.dB0[0], 3) : '?'}\r\n                   \\\\\r\n                   ${this.state.dB0 ? round(this.state.dB0[1], 3) : '?'}}\r\n                   =                 \\pmatrix{\r\n                    ${this.state.newB0 ? round(this.state.newB0[0], 3) : '?'}\r\n                     \\\\\r\n                     ${this.state.newB0 ? round(this.state.newB0[1], 3) : '?'}}\r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'}>\r\n                <div id={'w1-update-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` w1 = w1 - \\alpha * \\frac{\\partial E}{ \\partial w1} = \r\n              \\pmatrix{\r\n                ${this.state.prevW1 ? round(this.state.prevW1[0], 3) : '?'}\r\n                 \\\\\r\n                 ${this.state.prevW1 ? round(this.state.prevW1[1], 3) : '?'}\r\n                 }\r\n                 - ${this.state.learningRate}  * \r\n                  ${this.state.dW1 ? round(this.state.dW1[0], 3) : '?'}\r\n                  = \r\n                  \\pmatrix{\r\n                    ${this.state.newW1 ? round(this.state.newW1[0], 3) : '?'}\r\n                    \r\n                     \\\\\r\n                     ${this.state.newW1 ? round(this.state.newW1[1], 3) : '?'}\r\n                     }\r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n\r\n              <div className={'row'}>\r\n                <div id={'b1-update-eq'} className={'nn-equation'}>\r\n                  <MathComponent\r\n                    display={false}\r\n                    tex={String.raw` b1 = b1 - \\alpha * \\frac{\\partial E}{ \\partial b1} = \r\n              \r\n                ${this.state.prevB1 ? round(this.state.prevB1, 3) : '?'}\r\n                 \r\n                 - ${this.state.learningRate}  * \r\n                  ${this.state.dB1 ? round(this.state.dB1, 3) : '?'}\r\n                  = \r\n                  ${this.state.newB1 ? round(this.state.newB1, 3) : '?'}\r\n                   \r\n               `}\r\n                  />\r\n                </div>\r\n              </div>\r\n            </Tab>\r\n            <Tab eventKey=\"loss\" title=\"Loss\" style={{ fontSize: '22px' }}>\r\n              <div id=\"loss-container\">\r\n                <div id=\"loss-plot\"></div>\r\n              </div>\r\n            </Tab>\r\n          </Tabs>\r\n        </div>\r\n        <div\r\n          className={'col-12'}\r\n          style={{ position: 'absolute', top: '800px', left: '-40px' }}\r\n        >\r\n          <div\r\n            className={'row'}\r\n            style={{ marginTop: '-70px', marginLeft: '-120px' }}\r\n          >\r\n            <span style={{ marginLeft: '160px' }}></span>\r\n            {this.render2x2Matrix(this.state.w0, 'layer 1', 'layer 0')}\r\n            <span style={{ marginLeft: '-20px' }}></span>\r\n            {this.render2x1Matrix(this.state.b0, 'layer 1', 'h', 'bias 0', 'b')}\r\n            <span style={{ marginLeft: '20px' }}></span>\r\n            {this.render1x2Matrix(\r\n              this.state.w1,\r\n              'layer 2',\r\n              'o',\r\n              'layer 1',\r\n              'h'\r\n            )}\r\n            <span style={{ marginLeft: '-35px' }}></span>\r\n            {this.render1x1Matrix(this.state.b1, 'layer 2', 'o', 'bias 1', 'b')}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n} //End NeuralNet Component\r\n\r\nexport default NeuralNets;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/segment/InfoSegment.scss';\r\nimport { useHistory } from 'react-router-dom';\r\n// Libraries\r\nimport { Container, Row, Col, ListGroup } from 'react-bootstrap';\r\nimport {\r\n  FaArrowLeft,\r\n  FaArrowRight,\r\n  FaExclamation,\r\n  FaExternalLinkAlt,\r\n} from 'react-icons/fa';\r\n\r\nclass InfoSegment extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      title: '',\r\n      segment_id: this.props.segment_id,\r\n      slides: this.props.segment_data[1],\r\n      current_id: 0,\r\n      quiz_correct: 'light',\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    console.log(this.props.segment_data);\r\n  };\r\n\r\n  componentDidUpdate = () => {\r\n    let el = document.getElementById('segment' + this.props.segment_id);\r\n    if (this.props.scroll_position > el.offsetTop - 400) {\r\n      el.style.opacity = 1;\r\n    } else if (this.props.scroll_position > el.offsetTop - 600) {\r\n      el.style.opacity = 0.5;\r\n    } else {\r\n      el.style.opacity = 0;\r\n    }\r\n  };\r\n\r\n  checkAnswer = (className) => {\r\n    let parsedName = className.split('|');\r\n    let obj = document.getElementsByClassName(className)[0];\r\n    if (parsedName[0] == 'quiz_correct-' + this.state.segment_id) {\r\n      obj.style.backgroundColor = '#6bfb6b';\r\n    } else {\r\n      obj.style.backgroundColor = '#fb4f4f';\r\n    }\r\n  };\r\n\r\n  resetAnswers = () => {\r\n    let els = document.getElementsByClassName('quiz_options');\r\n    for (let el of els) {\r\n      el.style.backgroundColor = '';\r\n    }\r\n  };\r\n\r\n  renderSection(even) {\r\n    return even ? (\r\n      <>\r\n        {this.renderGif()}\r\n        {this.renderInfoOrQuiz()}\r\n      </>\r\n    ) : (\r\n      <>\r\n        {this.renderInfoOrQuiz()}\r\n        {this.renderGif()}\r\n      </>\r\n    );\r\n  }\r\n\r\n  renderInfoOrQuiz() {\r\n    let quiz = this.state.slides[this.state.current_id]['type'] === 'quiz';\r\n    return <>{quiz ? this.renderQuiz() : this.renderInfo()}</>;\r\n  }\r\n\r\n  renderSegmentNavButtons() {\r\n    return (\r\n      <div className=\"segment-nav\">\r\n        <button\r\n          className=\"graph-button btn-left\"\r\n          onClick={() => {\r\n            if (this.state.current_id > 0) {\r\n              this.resetAnswers();\r\n              this.setState({ current_id: this.state.current_id - 1 });\r\n            }\r\n          }}\r\n        >\r\n          <FaArrowLeft></FaArrowLeft>\r\n        </button>\r\n\r\n        <div className=\"nav-icons\">\r\n          {this.state.slides.map((value, index) => (\r\n            <i\r\n              key={index}\r\n              className={\r\n                'circle-icon ' +\r\n                (this.state.current_id == index ? 'active' : '')\r\n              }\r\n            ></i>\r\n          ))}\r\n        </div>\r\n\r\n        <button\r\n          className=\"graph-button btn-right\"\r\n          onClick={() => {\r\n            if (this.state.current_id < this.state.slides.length - 1) {\r\n              this.resetAnswers();\r\n              this.setState({ current_id: this.state.current_id + 1 });\r\n            }\r\n          }}\r\n        >\r\n          <FaArrowRight></FaArrowRight>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n  renderInfo() {\r\n    return (\r\n      <Col>\r\n        <div className=\"segment-text text-center\">\r\n          <h1>{this.state.slides[this.state.current_id]['title']}</h1>\r\n          <h4\r\n            className=\"text-left\"\r\n            dangerouslySetInnerHTML={{\r\n              __html: this.state.slides[this.state.current_id]['text'],\r\n            }}\r\n          ></h4>\r\n        </div>\r\n        {this.renderSegmentNavButtons()}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  renderGif() {\r\n    return (\r\n      <Col>\r\n        <div className=\"segment-gif\">\r\n          {this.state.slides[this.state.current_id]['redirect_link'] !=\r\n            null && (\r\n            <a\r\n              href={\r\n                process.env.PUBLIC_URL +\r\n                '/#/' + \r\n                this.state.slides[this.state.current_id]['redirect_link']\r\n              }\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"gif-icon\">\r\n                <FaExternalLinkAlt></FaExternalLinkAlt>\r\n              </i>\r\n            </a>\r\n          )}\r\n          {this.state.slides[this.state.current_id]['credit_link'] != null && (\r\n            <a\r\n              href={this.state.slides[this.state.current_id]['credit_link']}\r\n              target=\"_blank\"\r\n            >\r\n              <i className=\"gif-credit-link\">Credit</i>\r\n            </a>\r\n          )}\r\n          <img\r\n            width=\"500px\"\r\n            height=\"500px\"\r\n            src={\r\n              process.env.PUBLIC_URL +\r\n              this.state.slides[this.state.current_id]['image_link']\r\n            }\r\n          />\r\n        </div>\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  generateQuizAnswerClasses(value, index) {\r\n    let className = 'quiz_options ';\r\n    if (this.state.slides[this.state.current_id]['answer'] == value) {\r\n      className += 'quiz_correct-' + this.state.segment_id + '|' + index;\r\n    } else {\r\n      className += 'quiz_incorrect-' + this.state.segment_id + '|' + index;\r\n    }\r\n    return className;\r\n  }\r\n  renderQuiz() {\r\n    return (\r\n      <Col>\r\n        <div className=\"segment-text text-center\">\r\n          <h1>{this.state.slides[this.state.current_id]['title']}</h1>\r\n          <h4\r\n            dangerouslySetInnerHTML={{\r\n              __html: this.state.slides[this.state.current_id]['text'],\r\n            }}\r\n          ></h4>\r\n          <div>\r\n            {this.state.slides[this.state.current_id]['options'].map(\r\n              (value, index) => (\r\n                <button\r\n                  key={index}\r\n                  className={this.generateQuizAnswerClasses(value, index)}\r\n                  onClick={(e) => this.checkAnswer(e.target.classList[1])}\r\n                >\r\n                  {value}\r\n                </button>\r\n              )\r\n            )}\r\n          </div>\r\n        </div>\r\n        {this.renderSegmentNavButtons()}\r\n      </Col>\r\n    );\r\n  }\r\n\r\n  even(n) {\r\n    return n % 2 === 0;\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Row id={'segment' + this.props.segment_id} className=\"segment\">\r\n        {this.renderSection(this.even(this.props.segment_id))}\r\n      </Row>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoSegment;\r\n","import React, { Component } from 'react';\r\nimport '../../styles/MainPage.scss';\r\n// JSON Object for Information Segments\r\nimport JSONData from '../../data/info_segments.json';\r\n// Project Components\r\nimport InfoSegment from './InfoSegment';\r\n// Libraries\r\nimport { Container, Row, Col } from 'react-bootstrap';\r\n\r\nclass InfoContainer extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      json_obj: [],\r\n      segments: [1, 2, 3, 4, 5],\r\n      data: JSONData,\r\n      decoded_data: [],\r\n    };\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // Convert each object from the JSON structure into a JavaScript Object\r\n    Object.entries(this.state.data).forEach((data) => {\r\n      this.state.decoded_data.push(data);\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        {/* <InfoSegment scroll_position={this.props.scroll_position}></InfoSegment> */}\r\n        {this.state.decoded_data.map((data, index) => (\r\n          <InfoSegment\r\n            key={index}\r\n            segment_id={index}\r\n            segment_data={data}\r\n            scroll_position={this.props.scroll_position}\r\n          ></InfoSegment>\r\n        ))}\r\n        <br></br>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default InfoContainer;\r\n","import React, { Component } from 'react';\r\nimport '../styles/MainPage.scss';\r\n\r\n// Components\r\nimport InfoContainer from './MainPage/InfoContainer';\r\n\r\n// Libraries\r\nimport { FaSortDown } from 'react-icons/fa';\r\n\r\nclass MainPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      scroll_position: 0,\r\n      waves_opacity: 1,\r\n      arrowOpacity: 0,\r\n      title_set_1: '',\r\n      title_set_2: '',\r\n      title_set_3: '',\r\n      title_set_4: '',\r\n      title_set_5: '',\r\n      background_left_opacity: 0,\r\n      background_right_opacity: 0,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    // Set a listener to track window position\r\n    window.addEventListener('scroll', this.updateScroll);\r\n    // Start the title typing effect\r\n    setTimeout(() => {\r\n      this.startTypingTitle();\r\n    }, 500);\r\n  }\r\n\r\n  componentWillUnmount() {}\r\n\r\n  startTypingTitle = () => {\r\n    let title_queue = [\r\n      'Welcome To',\r\n      'Am',\r\n      'Algorithms',\r\n      'Think',\r\n      ' Algorithmically',\r\n    ];\r\n    let i = 0;\r\n    let j = 0;\r\n    let interval = setInterval(() => {\r\n      if (j >= title_queue[i].length) {\r\n        if (i < title_queue.length - 1) {\r\n          i += 1;\r\n          j = 0;\r\n        } else {\r\n          clearInterval(interval);\r\n          this.setState({ arrowOpacity: 1 });\r\n        }\r\n      } else {\r\n        switch (i) {\r\n          case 0:\r\n            this.setState({\r\n              title_set_1: this.state.title_set_1 + title_queue[i][j],\r\n            });\r\n            break;\r\n          case 1:\r\n            this.setState({\r\n              title_set_2: this.state.title_set_2 + title_queue[i][j],\r\n            });\r\n            break;\r\n          case 2:\r\n            this.setState({\r\n              title_set_3: this.state.title_set_3 + title_queue[i][j],\r\n            });\r\n            break;\r\n          case 3:\r\n            this.setState({\r\n              title_set_4: this.state.title_set_4 + title_queue[i][j],\r\n            });\r\n            break;\r\n          case 4:\r\n            this.setState({\r\n              title_set_5: this.state.title_set_5 + title_queue[i][j],\r\n            });\r\n            break;\r\n        }\r\n        j += 1;\r\n      }\r\n    }, 90);\r\n  };\r\n\r\n  updateScroll = (e) => {\r\n    // Calculate scroll offset\r\n    let windowYScroll = window.pageYOffset;\r\n    this.setState({ scroll_position: windowYScroll });\r\n\r\n    // Calculate opacity offset\r\n    if (windowYScroll <= 500) {\r\n      let newOp = windowYScroll / 100;\r\n      if (newOp <= 0) {\r\n        this.setState({ waves_opacity: 1 });\r\n      } else {\r\n        this.setState({\r\n          waves_opacity: 1 - newOp * 0.2,\r\n          arrowOpacity: 1 - newOp * 0.2,\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div\r\n          className=\"arrow_icon_field\"\r\n          style={{ opacity: this.state.arrowOpacity }}\r\n        >\r\n          <FaSortDown></FaSortDown>\r\n          <FaSortDown></FaSortDown>\r\n          <FaSortDown></FaSortDown>\r\n        </div>\r\n        <div\r\n          className=\"content\"\r\n          style={{\r\n            opacity: this.state.waves_opacity,\r\n            letterSpacing: this.state.scroll_position / 20 + 'px',\r\n          }}\r\n        >\r\n          <h1 className=\"heading\">\r\n            {this.state.title_set_1}\r\n            <span style={{ color: '#51a6fc' }}> {this.state.title_set_2}</span>\r\n            <span style={{ color: '#8787fe' }}>{this.state.title_set_3}</span>\r\n          </h1>\r\n          <h1 className=\"heading\">\r\n            <span style={{ color: '#333' }}> {this.state.title_set_4}</span>\r\n            <span style={{ color: '#8787fe' }}>{this.state.title_set_5}</span>\r\n          </h1>\r\n        </div>\r\n\r\n        <InfoContainer\r\n          scroll_position={this.state.scroll_position}\r\n        ></InfoContainer>\r\n\r\n        <div className=\"background\">\r\n          {/* TODO: Set min width so the background doesn't keep expanding indefinitely */}\r\n          <img\r\n            style={{\r\n              left: '-' + this.state.scroll_position * 5 + 'px',\r\n              opacity: this.state.waves_opacity,\r\n            }}\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background1.png'\r\n            }\r\n            alt={'bg1'}\r\n          />\r\n          <img\r\n            style={{\r\n              left: this.state.scroll_position * 6 + 'px',\r\n              opacity: this.state.waves_opacity,\r\n            }}\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background2.png'\r\n            }\r\n            alt={'bg2'}\r\n          />\r\n          <img\r\n            style={{\r\n              left: '-' + this.state.scroll_position * 6 + 'px',\r\n              opacity: this.state.waves_opacity,\r\n            }}\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background3.png'\r\n            }\r\n            alt={'bg3'}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"background background-left\"\r\n          style={{\r\n            left:\r\n              Math.min(-200 + (this.state.scroll_position / 100) * 40, -40) +\r\n              'px',\r\n            opacity: 1 - this.state.waves_opacity,\r\n          }}\r\n        >\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background1.png'\r\n            }\r\n            alt={'bg1'}\r\n          />\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background2.png'\r\n            }\r\n            alt={'bg2'}\r\n          />\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background3.png'\r\n            }\r\n            alt={'bg3'}\r\n          />\r\n        </div>\r\n\r\n        <div\r\n          className=\"background background-right\"\r\n          style={{\r\n            right:\r\n              Math.min(-200 + (this.state.scroll_position / 100) * 40, -40) +\r\n              'px',\r\n            opacity: 1 - this.state.waves_opacity,\r\n          }}\r\n        >\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background1.png'\r\n            }\r\n            alt={'bg1'}\r\n          />\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background2.png'\r\n            }\r\n            alt={'bg2'}\r\n          />\r\n          <img\r\n            src={\r\n              process.env.PUBLIC_URL + '/assets/imgs/home_page_background3.png'\r\n            }\r\n            alt={'bg3'}\r\n          />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default MainPage;\r\n","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Link,\r\n  HashRouter,\r\n} from 'react-router-dom';\r\nimport { Navbar, Nav, NavDropdown } from 'react-bootstrap';\r\n\r\nimport TreeTraversals from '../Components/TreeTraversals';\r\nimport UndirectedGraphAlgorithms from '../Components/UndirectedGraphAlgorithms';\r\nimport DirectedGraphAlgorithms from '../Components/DirectedGraphAlgorithms';\r\nimport ClusteringAlgorithms from '../Components/ClusteringAlgorithms';\r\nimport Heap from '../Components/data-structures/Heap';\r\nimport Stack from '../Components/data-structures/Stack';\r\nimport Queue from '../Components/data-structures/Queue';\r\nimport InsertionSort from '../Components/algorithms/sorts/InsertionSort';\r\nimport SelectionSort from '../Components/algorithms/sorts/SelectionSort';\r\nimport NeuralNets from '../Components/NeuralNets';\r\n\r\nimport '../styles/Navigation-bar.scss';\r\nimport MainPage from './MainPage';\r\n\r\nconst NavigationBar = () => {\r\n  return (\r\n    <div className=\"navigation\">\r\n      <HashRouter>\r\n        <Navbar>\r\n          <Navbar.Brand as={Link} to=\"/\">\r\n            <img\r\n              alt={'logo'}\r\n              className={'header-logo'}\r\n              src={process.env.PUBLIC_URL + '/assets/imgs/logo.png'}\r\n            />\r\n          </Navbar.Brand>\r\n\r\n          <Nav className=\"ml-auto\">\r\n            <NavDropdown title=\"Data Structures\">\r\n              <NavDropdown.Item eventKey=\"2\" as={Link} to=\"/stack\">\r\n                Stack\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"3\" as={Link} to=\"/queue\">\r\n                Queue\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/heap\">\r\n                Heap\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n\r\n            <NavDropdown title=\"Sorting\">\r\n              <NavDropdown.Item eventKey=\"1\" as={Link} to=\"/insertion_sort\">\r\n                Insertion Sort\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"2\" as={Link} to=\"/selection_sort\">\r\n                Selection Sort\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n\r\n            <NavDropdown title=\"Tree\">\r\n              <NavDropdown.Item as={Link} to=\"/tree_traversals\">\r\n                Tree Traversals\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n\r\n            <NavDropdown title=\"Graph\">\r\n              <NavDropdown.Item\r\n                eventKey=\"1\"\r\n                as={Link}\r\n                to=\"/directed_graph_algorithms\"\r\n              >\r\n                Directed Graph Algorithms\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item\r\n                eventKey=\"2\"\r\n                as={Link}\r\n                to=\"/undirected_graph_algorithms\"\r\n              >\r\n                Undirected Graph Algorithms\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n\r\n            <NavDropdown title=\"Machine Learning\">\r\n              <NavDropdown.Item\r\n                eventKey=\"3\"\r\n                as={Link}\r\n                to=\"/ClusteringAlgorithms\"\r\n              >\r\n                K-Means\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item eventKey=\"4\" as={Link} to=\"/neural_nets\">\r\n                Neural Nets\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n\r\n            <div className=\"burgerContainer\">\r\n              <div className=\"burgerIcon\"></div>\r\n              <div className=\"burgerIcon\"></div>\r\n              <div className=\"burgerIcon\"></div>\r\n            </div>\r\n          </Nav>\r\n        </Navbar>\r\n        <br />\r\n        <Route path=\"/tree_traversals\" component={TreeTraversals} />\r\n        <Route\r\n          path=\"/undirected_graph_algorithms\"\r\n          component={UndirectedGraphAlgorithms}\r\n        />\r\n        <Route\r\n          path=\"/directed_graph_algorithms\"\r\n          component={DirectedGraphAlgorithms}\r\n        />\r\n        <Route path=\"/heap\" component={Heap} />\r\n        <Route path=\"/stack\" component={Stack} />\r\n        <Route path=\"/queue\" component={Queue} />\r\n        <Route path=\"/insertion_sort\" component={InsertionSort} />\r\n        <Route path=\"/selection_sort\" component={SelectionSort} />\r\n        <Route path=\"/ClusteringAlgorithms\" component={ClusteringAlgorithms} />\r\n        <Route path=\"/neural_nets\" component={NeuralNets} />\r\n        <Route exact path=\"/\" component={MainPage} />\r\n      </HashRouter>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React, { Component } from \"react\";\r\nimport \"./styles/App.scss\";\r\nimport NavigationBar from \"./Components/NavigationBar\";\r\nimport \"./styles/Node.scss\";\r\nimport \"./styles/Link.scss\";\r\nimport \"./styles/Graph.scss\";\r\nimport \"./styles/OutputTable.scss\";\r\nimport \"./styles/Clusters.scss\";\r\nimport \"./styles/Pseudocode.scss\";\r\nimport \"./styles/Sidebar.scss\";\r\nimport \"./styles/NeuralNets.scss\";\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n \r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className={\"container-fluid\"} style={{ height: 1000 + \"px\" }}>\r\n          <NavigationBar />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}